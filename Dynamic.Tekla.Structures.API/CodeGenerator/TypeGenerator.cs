using System;
using System.IO;

namespace CodeGenerator
{
    public class TypeGenerator
    {
        public TypeGenerator() { }

        public void SaveToFile(Type type)
        {
            string fileName = Path.Combine(Path.GetDirectoryName(Program.GetProjectDirectory())
                   , "Dynamic.Tekla.Structures",
                   type.Name + ".cs");

            string outputText = String.Copy(text);

            if (type.IsClass)
            {
                var generator = new ClassGenerator();
                outputText = outputText.Replace("$typeContent", generator.GetTextFromType(type));
            }
            else if (type.IsEnum)
            {
                var generator = new EnumGenerator();
                outputText = outputText.Replace("$typeContent", generator.GetTextFromType(type));
            }
            else System.Diagnostics.Debug.WriteLine("type not supported " + type.FullName);

            outputText = outputText.Replace("$namespace", type.Namespace);

            File.WriteAllText(fileName, outputText);
        }


        private readonly string text = @"//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.$namespace
{
$typeContent
}
    
";
    }
}
