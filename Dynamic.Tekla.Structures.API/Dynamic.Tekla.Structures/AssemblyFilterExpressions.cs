//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class AssemblyFilterExpressions 
    {

        

        dynamic assemblyfilterexpressions;
        
        public AssemblyFilterExpressions()
        {
            this.assemblyfilterexpressions =  new Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions();
        }

        public AssemblyFilterExpressions(dynamic tsObject)
        {
            this.assemblyfilterexpressions = tsObject;

        }


        public dynamic GetTSObject() => assemblyfilterexpressions;

		public System.Boolean Equals(System.Object obj)
			 => assemblyfilterexpressions.Equals(obj);

		public System.Int32 GetHashCode()
			 => assemblyfilterexpressions.GetHashCode();

		public System.Type GetType()
			 => assemblyfilterexpressions.GetType();

		public System.String ToString()
			 => assemblyfilterexpressions.ToString();




    public sealed class CustomBoolean 
    {

        

        dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  new Tekla.Structures.Filtering.Categories.CustomBoolean();
        }

        public CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;

        }


        public dynamic GetTSObject() => customboolean;

		public System.String ToString()
			 => customboolean.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customboolean.Equals(obj);

		public System.Int32 GetHashCode()
			 => customboolean.GetHashCode();

		public System.Type GetType()
			 => customboolean.GetType();





    }


    public sealed class CustomDateTime 
    {

        

        dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  new Tekla.Structures.Filtering.Categories.CustomDateTime();
        }

        public CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;

        }


        public dynamic GetTSObject() => customdatetime;

		public System.String ToString()
			 => customdatetime.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customdatetime.Equals(obj);

		public System.Int32 GetHashCode()
			 => customdatetime.GetHashCode();

		public System.Type GetType()
			 => customdatetime.GetType();





    }


    public sealed class CustomNumber 
    {

        

        dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  new Tekla.Structures.Filtering.Categories.CustomNumber();
        }

        public CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;

        }


        public dynamic GetTSObject() => customnumber;

		public System.String ToString()
			 => customnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => customnumber.GetHashCode();

		public System.Type GetType()
			 => customnumber.GetType();





    }


    public sealed class CustomString 
    {

        

        dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  new Tekla.Structures.Filtering.Categories.CustomString();
        }

        public CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;

        }


        public dynamic GetTSObject() => customstring;

		public System.String ToString()
			 => customstring.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customstring.Equals(obj);

		public System.Int32 GetHashCode()
			 => customstring.GetHashCode();

		public System.Type GetType()
			 => customstring.GetType();





    }


    public sealed class IdNumber 
    {

        

        dynamic idnumber;
        
        public IdNumber()
        {
            this.idnumber =  new Tekla.Structures.Filtering.Categories.IdNumber();
        }

        public IdNumber(dynamic tsObject)
        {
            this.idnumber = tsObject;

        }


        public dynamic GetTSObject() => idnumber;

		public System.String ToString()
			 => idnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => idnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => idnumber.GetHashCode();

		public System.Type GetType()
			 => idnumber.GetType();





    }


    public sealed class Guid 
    {

        

        dynamic guid;
        
        public Guid()
        {
            this.guid =  new Tekla.Structures.Filtering.Categories.Guid();
        }

        public Guid(dynamic tsObject)
        {
            this.guid = tsObject;

        }


        public dynamic GetTSObject() => guid;

		public System.String ToString()
			 => guid.ToString();

		public System.Boolean Equals(System.Object obj)
			 => guid.Equals(obj);

		public System.Int32 GetHashCode()
			 => guid.GetHashCode();

		public System.Type GetType()
			 => guid.GetType();





    }


    public sealed class Level 
    {

        

        dynamic level;
        
        public Level()
        {
            this.level =  new Tekla.Structures.Filtering.Categories.Level();
        }

        public Level(dynamic tsObject)
        {
            this.level = tsObject;

        }


        public dynamic GetTSObject() => level;

		public System.String ToString()
			 => level.ToString();

		public System.Boolean Equals(System.Object obj)
			 => level.Equals(obj);

		public System.Int32 GetHashCode()
			 => level.GetHashCode();

		public System.Type GetType()
			 => level.GetType();





    }


    public sealed class Name 
    {

        

        dynamic name;
        
        public Name()
        {
            this.name =  new Tekla.Structures.Filtering.Categories.Name();
        }

        public Name(dynamic tsObject)
        {
            this.name = tsObject;

        }


        public dynamic GetTSObject() => name;

		public System.String ToString()
			 => name.ToString();

		public System.Boolean Equals(System.Object obj)
			 => name.Equals(obj);

		public System.Int32 GetHashCode()
			 => name.GetHashCode();

		public System.Type GetType()
			 => name.GetType();





    }


    public sealed class Phase 
    {

        

        dynamic phase;
        
        public Phase()
        {
            this.phase =  new Tekla.Structures.Filtering.Categories.Phase();
        }

        public Phase(dynamic tsObject)
        {
            this.phase = tsObject;

        }


        public dynamic GetTSObject() => phase;

		public System.String ToString()
			 => phase.ToString();

		public System.Boolean Equals(System.Object obj)
			 => phase.Equals(obj);

		public System.Int32 GetHashCode()
			 => phase.GetHashCode();

		public System.Type GetType()
			 => phase.GetType();





    }


    public sealed class PositionNumber 
    {

        

        dynamic positionnumber;
        
        public PositionNumber()
        {
            this.positionnumber =  new Tekla.Structures.Filtering.Categories.PositionNumber();
        }

        public PositionNumber(dynamic tsObject)
        {
            this.positionnumber = tsObject;

        }


        public dynamic GetTSObject() => positionnumber;

		public System.String ToString()
			 => positionnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => positionnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => positionnumber.GetHashCode();

		public System.Type GetType()
			 => positionnumber.GetType();





    }


    public sealed class Prefix 
    {

        

        dynamic prefix;
        
        public Prefix()
        {
            this.prefix =  new Tekla.Structures.Filtering.Categories.Prefix();
        }

        public Prefix(dynamic tsObject)
        {
            this.prefix = tsObject;

        }


        public dynamic GetTSObject() => prefix;

		public System.String ToString()
			 => prefix.ToString();

		public System.Boolean Equals(System.Object obj)
			 => prefix.Equals(obj);

		public System.Int32 GetHashCode()
			 => prefix.GetHashCode();

		public System.Type GetType()
			 => prefix.GetType();





    }


    public sealed class Series 
    {

        

        dynamic series;
        
        public Series()
        {
            this.series =  new Tekla.Structures.Filtering.Categories.Series();
        }

        public Series(dynamic tsObject)
        {
            this.series = tsObject;

        }


        public dynamic GetTSObject() => series;

		public System.String ToString()
			 => series.ToString();

		public System.Boolean Equals(System.Object obj)
			 => series.Equals(obj);

		public System.Int32 GetHashCode()
			 => series.GetHashCode();

		public System.Type GetType()
			 => series.GetType();





    }


    public sealed class StartNumber 
    {

        

        dynamic startnumber;
        
        public StartNumber()
        {
            this.startnumber =  new Tekla.Structures.Filtering.Categories.StartNumber();
        }

        public StartNumber(dynamic tsObject)
        {
            this.startnumber = tsObject;

        }


        public dynamic GetTSObject() => startnumber;

		public System.String ToString()
			 => startnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => startnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => startnumber.GetHashCode();

		public System.Type GetType()
			 => startnumber.GetType();





    }


    public sealed class Type 
    {

        

        dynamic type;
        
        public Type()
        {
            this.type =  new Tekla.Structures.Filtering.Categories.Type();
        }

        public Type(dynamic tsObject)
        {
            this.type = tsObject;

        }


        public dynamic GetTSObject() => type;

		public System.String ToString()
			 => type.ToString();

		public System.Boolean Equals(System.Object obj)
			 => type.Equals(obj);

		public System.Int32 GetHashCode()
			 => type.GetHashCode();

		public System.Type GetType()
			 => type.GetType();





    }



    }

}
    
