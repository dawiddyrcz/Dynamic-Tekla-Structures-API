
//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file



namespace Dynamic.Tekla.Structures.Model
{
    public sealed class Beam 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Point StartPoint {get; set; }
		public Dynamic.Tekla.Structures.Geometry3d.Point EndPoint {get; set; }
		public Dynamic.Tekla.Structures.Model.Offset StartPointOffset {get; set; }
		public Dynamic.Tekla.Structures.Model.Offset EndPointOffset {get; set; }
		public Dynamic.Tekla.Structures.Model.BeamTypeEnum Type {get; set; }
		public Dynamic.Tekla.Structures.Model.Profile Profile {get; set; }
		public Dynamic.Tekla.Structures.Model.Material Material {get; set; }
		public Dynamic.Tekla.Structures.Model.DeformingData DeformingData {get; set; }
		public Dynamic.Tekla.Structures.Model.NumberingSeries PartNumber {get; set; }
		public Dynamic.Tekla.Structures.Model.NumberingSeries AssemblyNumber {get; set; }
		public System.String Name {get; set; }
		public System.String Class {get; set; }
		public System.String Finish {get; set; }
		public Dynamic.Tekla.Structures.Model.CastUnitTypeEnum CastUnitType {get; set; }
		public System.Int32 PourPhase {get; set; }
		public Dynamic.Tekla.Structures.Model.Position Position {get; set; }
		public System.Nullable<System.DateTime> ModificationTime {get; set; }
		public System.Boolean IsUpToDate {get; set; }
		public Dynamic.Tekla.Structures.Identifier Identifier {get; set; }
        

        dynamic beam;
        
        public Beam()
        {
            this.beam =  new Tekla.Structures.Model.Beam();
        }

        public Beam(dynamic tsObject)
        {
            this.beam = tsObject;
			this.StartPoint = new Dynamic.Tekla.Structures.Geometry3d.Point(tsObject);
			this.EndPoint = new Dynamic.Tekla.Structures.Geometry3d.Point(tsObject);
			this.StartPointOffset = new Dynamic.Tekla.Structures.Model.Offset(tsObject);
			this.EndPointOffset = new Dynamic.Tekla.Structures.Model.Offset(tsObject);
			this.Type = new Dynamic.Tekla.Structures.Model.BeamTypeEnum(tsObject);
			this.Profile = new Dynamic.Tekla.Structures.Model.Profile(tsObject);
			this.Material = new Dynamic.Tekla.Structures.Model.Material(tsObject);
			this.DeformingData = new Dynamic.Tekla.Structures.Model.DeformingData(tsObject);
			this.PartNumber = new Dynamic.Tekla.Structures.Model.NumberingSeries(tsObject);
			this.AssemblyNumber = new Dynamic.Tekla.Structures.Model.NumberingSeries(tsObject);
			this.Name = tsObject.Name;
			this.Class = tsObject.Class;
			this.Finish = tsObject.Finish;
			this.CastUnitType = new Dynamic.Tekla.Structures.Model.CastUnitTypeEnum(tsObject);
			this.PourPhase = tsObject.PourPhase;
			this.Position = new Dynamic.Tekla.Structures.Model.Position(tsObject);
			this.ModificationTime = tsObject.ModificationTime;
			this.IsUpToDate = tsObject.IsUpToDate;
			this.Identifier = new Dynamic.Tekla.Structures.Identifier(tsObject);

        }


		public void Insert() => beam.Insert();
		public void Select() => beam.Select();
		public void Modify() => beam.Modify();
		public void Delete() => beam.Delete();
		public void GetSolid() => beam.GetSolid();
		public void GetSolid() => beam.GetSolid();
		public void GetSolid() => beam.GetSolid();
		public void GetAssembly() => beam.GetAssembly();
		public void GetPartMark() => beam.GetPartMark();
		public void GetCenterLine() => beam.GetCenterLine();
		public void GetReferenceLine() => beam.GetReferenceLine();
		public void GetComponents() => beam.GetComponents();
		public void GetBooleans() => beam.GetBooleans();
		public void GetBolts() => beam.GetBolts();
		public void GetWelds() => beam.GetWelds();
		public void GetReinforcements() => beam.GetReinforcements();
		public void GetSurfaceTreatments() => beam.GetSurfaceTreatments();
		public void GetSurfaceObjects() => beam.GetSurfaceObjects();
		public void GetPours() => beam.GetPours();
		public void CompareTo() => beam.CompareTo();
		public void GetDSTVCoordinateSystem() => beam.GetDSTVCoordinateSystem();
		public void GetChildren() => beam.GetChildren();
		public void GetFatherComponent() => beam.GetFatherComponent();
		public void GetHierarchicObjects() => beam.GetHierarchicObjects();
		public void GetAllUserProperties() => beam.GetAllUserProperties();
		public void GetIntegerUserProperties() => beam.GetIntegerUserProperties();
		public void GetDoubleUserProperties() => beam.GetDoubleUserProperties();
		public void GetStringUserProperties() => beam.GetStringUserProperties();
		public void GetAllReportProperties() => beam.GetAllReportProperties();
		public void GetIntegerReportProperties() => beam.GetIntegerReportProperties();
		public void GetDoubleReportProperties() => beam.GetDoubleReportProperties();
		public void GetStringReportProperties() => beam.GetStringReportProperties();
		public void GetUserProperty() => beam.GetUserProperty();
		public void GetReportProperty() => beam.GetReportProperty();
		public void GetUserProperty() => beam.GetUserProperty();
		public void GetReportProperty() => beam.GetReportProperty();
		public void GetUserProperty() => beam.GetUserProperty();
		public void GetReportProperty() => beam.GetReportProperty();
		public void GetDynamicStringProperty() => beam.GetDynamicStringProperty();
		public void SetDynamicStringProperty() => beam.SetDynamicStringProperty();
		public void SetUserProperty() => beam.SetUserProperty();
		public void SetUserProperty() => beam.SetUserProperty();
		public void SetUserProperty() => beam.SetUserProperty();
		public void GetCoordinateSystem() => beam.GetCoordinateSystem();
		public void SetPhase() => beam.SetPhase();
		public void GetPhase() => beam.GetPhase();
		public void SetLabel() => beam.SetLabel();
		public void CompareTo() => beam.CompareTo();
		public void Equals() => beam.Equals();
		public void Equals() => beam.Equals();
		public void GetHashCode() => beam.GetHashCode();
		public void GetType() => beam.GetType();
		public void ToString() => beam.ToString();


    }
}

            