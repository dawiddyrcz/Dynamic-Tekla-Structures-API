//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class BoltFilterExpressions 
    {

        

        dynamic boltfilterexpressions;
        
        public BoltFilterExpressions()
        {
            this.boltfilterexpressions =  new Tekla.Structures.Filtering.Categories.BoltFilterExpressions();
        }

        public BoltFilterExpressions(dynamic tsObject)
        {
            this.boltfilterexpressions = tsObject;

        }


        public dynamic GetTSObject() => boltfilterexpressions;




    public sealed class CustomBoolean 
    {

        

        dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  new Tekla.Structures.Filtering.Categories.CustomBoolean();
        }

        public CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;

        }


        public dynamic GetTSObject() => customboolean;





    }


    public sealed class CustomDateTime 
    {

        

        dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  new Tekla.Structures.Filtering.Categories.CustomDateTime();
        }

        public CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;

        }


        public dynamic GetTSObject() => customdatetime;





    }


    public sealed class CustomNumber 
    {

        

        dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  new Tekla.Structures.Filtering.Categories.CustomNumber();
        }

        public CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;

        }


        public dynamic GetTSObject() => customnumber;





    }


    public sealed class CustomString 
    {

        

        dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  new Tekla.Structures.Filtering.Categories.CustomString();
        }

        public CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;

        }


        public dynamic GetTSObject() => customstring;





    }


    public sealed class Length 
    {

        

        dynamic length;
        
        public Length()
        {
            this.length =  new Tekla.Structures.Filtering.Categories.Length();
        }

        public Length(dynamic tsObject)
        {
            this.length = tsObject;

        }


        public dynamic GetTSObject() => length;





    }


    public sealed class Phase 
    {

        

        dynamic phase;
        
        public Phase()
        {
            this.phase =  new Tekla.Structures.Filtering.Categories.Phase();
        }

        public Phase(dynamic tsObject)
        {
            this.phase = tsObject;

        }


        public dynamic GetTSObject() => phase;





    }


    public sealed class SiteWorkshop 
    {

        

        dynamic siteworkshop;
        
        public SiteWorkshop()
        {
            this.siteworkshop =  new Tekla.Structures.Filtering.Categories.SiteWorkshop();
        }

        public SiteWorkshop(dynamic tsObject)
        {
            this.siteworkshop = tsObject;

        }


        public dynamic GetTSObject() => siteworkshop;





    }


    public sealed class Size 
    {

        

        dynamic size;
        
        public Size()
        {
            this.size =  new Tekla.Structures.Filtering.Categories.Size();
        }

        public Size(dynamic tsObject)
        {
            this.size = tsObject;

        }


        public dynamic GetTSObject() => size;





    }


    public sealed class Standard 
    {

        

        dynamic standard;
        
        public Standard()
        {
            this.standard =  new Tekla.Structures.Filtering.Categories.Standard();
        }

        public Standard(dynamic tsObject)
        {
            this.standard = tsObject;

        }


        public dynamic GetTSObject() => standard;





    }



    }

}
    
