//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class BoltFilterExpressions 
    {

        

        dynamic boltfilterexpressions;
        
        public BoltFilterExpressions()
        {
            this.boltfilterexpressions =  new Tekla.Structures.Filtering.Categories.BoltFilterExpressions();
        }

        public BoltFilterExpressions(dynamic tsObject)
        {
            this.boltfilterexpressions = tsObject;

        }


        public dynamic GetTSObject() => boltfilterexpressions;

		public System.Boolean Equals(System.Object obj)
			 => boltfilterexpressions.Equals(obj);

		public System.Int32 GetHashCode()
			 => boltfilterexpressions.GetHashCode();

		public System.Type GetType()
			 => boltfilterexpressions.GetType();

		public System.String ToString()
			 => boltfilterexpressions.ToString();




    public sealed class CustomBoolean 
    {

        

        dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  new Tekla.Structures.Filtering.Categories.CustomBoolean();
        }

        public CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;

        }


        public dynamic GetTSObject() => customboolean;

		public System.String ToString()
			 => customboolean.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customboolean.Equals(obj);

		public System.Int32 GetHashCode()
			 => customboolean.GetHashCode();

		public System.Type GetType()
			 => customboolean.GetType();





    }


    public sealed class CustomDateTime 
    {

        

        dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  new Tekla.Structures.Filtering.Categories.CustomDateTime();
        }

        public CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;

        }


        public dynamic GetTSObject() => customdatetime;

		public System.String ToString()
			 => customdatetime.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customdatetime.Equals(obj);

		public System.Int32 GetHashCode()
			 => customdatetime.GetHashCode();

		public System.Type GetType()
			 => customdatetime.GetType();





    }


    public sealed class CustomNumber 
    {

        

        dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  new Tekla.Structures.Filtering.Categories.CustomNumber();
        }

        public CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;

        }


        public dynamic GetTSObject() => customnumber;

		public System.String ToString()
			 => customnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => customnumber.GetHashCode();

		public System.Type GetType()
			 => customnumber.GetType();





    }


    public sealed class CustomString 
    {

        

        dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  new Tekla.Structures.Filtering.Categories.CustomString();
        }

        public CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;

        }


        public dynamic GetTSObject() => customstring;

		public System.String ToString()
			 => customstring.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customstring.Equals(obj);

		public System.Int32 GetHashCode()
			 => customstring.GetHashCode();

		public System.Type GetType()
			 => customstring.GetType();





    }


    public sealed class Length 
    {

        

        dynamic length;
        
        public Length()
        {
            this.length =  new Tekla.Structures.Filtering.Categories.Length();
        }

        public Length(dynamic tsObject)
        {
            this.length = tsObject;

        }


        public dynamic GetTSObject() => length;

		public System.String ToString()
			 => length.ToString();

		public System.Boolean Equals(System.Object obj)
			 => length.Equals(obj);

		public System.Int32 GetHashCode()
			 => length.GetHashCode();

		public System.Type GetType()
			 => length.GetType();





    }


    public sealed class Phase 
    {

        

        dynamic phase;
        
        public Phase()
        {
            this.phase =  new Tekla.Structures.Filtering.Categories.Phase();
        }

        public Phase(dynamic tsObject)
        {
            this.phase = tsObject;

        }


        public dynamic GetTSObject() => phase;

		public System.String ToString()
			 => phase.ToString();

		public System.Boolean Equals(System.Object obj)
			 => phase.Equals(obj);

		public System.Int32 GetHashCode()
			 => phase.GetHashCode();

		public System.Type GetType()
			 => phase.GetType();





    }


    public sealed class SiteWorkshop 
    {

        

        dynamic siteworkshop;
        
        public SiteWorkshop()
        {
            this.siteworkshop =  new Tekla.Structures.Filtering.Categories.SiteWorkshop();
        }

        public SiteWorkshop(dynamic tsObject)
        {
            this.siteworkshop = tsObject;

        }


        public dynamic GetTSObject() => siteworkshop;

		public System.String ToString()
			 => siteworkshop.ToString();

		public System.Boolean Equals(System.Object obj)
			 => siteworkshop.Equals(obj);

		public System.Int32 GetHashCode()
			 => siteworkshop.GetHashCode();

		public System.Type GetType()
			 => siteworkshop.GetType();





    }


    public sealed class Size 
    {

        

        dynamic size;
        
        public Size()
        {
            this.size =  new Tekla.Structures.Filtering.Categories.Size();
        }

        public Size(dynamic tsObject)
        {
            this.size = tsObject;

        }


        public dynamic GetTSObject() => size;

		public System.String ToString()
			 => size.ToString();

		public System.Boolean Equals(System.Object obj)
			 => size.Equals(obj);

		public System.Int32 GetHashCode()
			 => size.GetHashCode();

		public System.Type GetType()
			 => size.GetType();





    }


    public sealed class Standard 
    {

        

        dynamic standard;
        
        public Standard()
        {
            this.standard =  new Tekla.Structures.Filtering.Categories.Standard();
        }

        public Standard(dynamic tsObject)
        {
            this.standard = tsObject;

        }


        public dynamic GetTSObject() => standard;

		public System.String ToString()
			 => standard.ToString();

		public System.Boolean Equals(System.Object obj)
			 => standard.Equals(obj);

		public System.Int32 GetHashCode()
			 => standard.GetHashCode();

		public System.Type GetType()
			 => standard.GetType();





    }



    }

}
    
