//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class ComponentFilterExpressions 
    {

        

        dynamic componentfilterexpressions;
        
        public ComponentFilterExpressions()
        {
            this.componentfilterexpressions =  new Tekla.Structures.Filtering.Categories.ComponentFilterExpressions();
        }

        public ComponentFilterExpressions(dynamic tsObject)
        {
            this.componentfilterexpressions = tsObject;

        }


        public dynamic GetTSObject() => componentfilterexpressions;

		public System.Boolean Equals(System.Object obj)
			 => componentfilterexpressions.Equals(obj);

		public System.Int32 GetHashCode()
			 => componentfilterexpressions.GetHashCode();

		public System.Type GetType()
			 => componentfilterexpressions.GetType();

		public System.String ToString()
			 => componentfilterexpressions.ToString();




    public sealed class CustomBoolean 
    {

        

        dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  new Tekla.Structures.Filtering.Categories.CustomBoolean();
        }

        public CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;

        }


        public dynamic GetTSObject() => customboolean;

		public System.String ToString()
			 => customboolean.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customboolean.Equals(obj);

		public System.Int32 GetHashCode()
			 => customboolean.GetHashCode();

		public System.Type GetType()
			 => customboolean.GetType();





    }


    public sealed class CustomDateTime 
    {

        

        dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  new Tekla.Structures.Filtering.Categories.CustomDateTime();
        }

        public CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;

        }


        public dynamic GetTSObject() => customdatetime;

		public System.String ToString()
			 => customdatetime.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customdatetime.Equals(obj);

		public System.Int32 GetHashCode()
			 => customdatetime.GetHashCode();

		public System.Type GetType()
			 => customdatetime.GetType();





    }


    public sealed class CustomNumber 
    {

        

        dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  new Tekla.Structures.Filtering.Categories.CustomNumber();
        }

        public CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;

        }


        public dynamic GetTSObject() => customnumber;

		public System.String ToString()
			 => customnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => customnumber.GetHashCode();

		public System.Type GetType()
			 => customnumber.GetType();





    }


    public sealed class CustomString 
    {

        

        dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  new Tekla.Structures.Filtering.Categories.CustomString();
        }

        public CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;

        }


        public dynamic GetTSObject() => customstring;

		public System.String ToString()
			 => customstring.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customstring.Equals(obj);

		public System.Int32 GetHashCode()
			 => customstring.GetHashCode();

		public System.Type GetType()
			 => customstring.GetType();





    }


    public sealed class ConnectionCode 
    {

        

        dynamic connectioncode;
        
        public ConnectionCode()
        {
            this.connectioncode =  new Tekla.Structures.Filtering.Categories.ConnectionCode();
        }

        public ConnectionCode(dynamic tsObject)
        {
            this.connectioncode = tsObject;

        }


        public dynamic GetTSObject() => connectioncode;

		public System.String ToString()
			 => connectioncode.ToString();

		public System.Boolean Equals(System.Object obj)
			 => connectioncode.Equals(obj);

		public System.Int32 GetHashCode()
			 => connectioncode.GetHashCode();

		public System.Type GetType()
			 => connectioncode.GetType();





    }


    public sealed class Name 
    {

        

        dynamic name;
        
        public Name()
        {
            this.name =  new Tekla.Structures.Filtering.Categories.Name();
        }

        public Name(dynamic tsObject)
        {
            this.name = tsObject;

        }


        public dynamic GetTSObject() => name;

		public System.String ToString()
			 => name.ToString();

		public System.Boolean Equals(System.Object obj)
			 => name.Equals(obj);

		public System.Int32 GetHashCode()
			 => name.GetHashCode();

		public System.Type GetType()
			 => name.GetType();





    }


    public sealed class Phase 
    {

        

        dynamic phase;
        
        public Phase()
        {
            this.phase =  new Tekla.Structures.Filtering.Categories.Phase();
        }

        public Phase(dynamic tsObject)
        {
            this.phase = tsObject;

        }


        public dynamic GetTSObject() => phase;

		public System.String ToString()
			 => phase.ToString();

		public System.Boolean Equals(System.Object obj)
			 => phase.Equals(obj);

		public System.Int32 GetHashCode()
			 => phase.GetHashCode();

		public System.Type GetType()
			 => phase.GetType();





    }


    public sealed class RunningNumber 
    {

        

        dynamic runningnumber;
        
        public RunningNumber()
        {
            this.runningnumber =  new Tekla.Structures.Filtering.Categories.RunningNumber();
        }

        public RunningNumber(dynamic tsObject)
        {
            this.runningnumber = tsObject;

        }


        public dynamic GetTSObject() => runningnumber;

		public System.String ToString()
			 => runningnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => runningnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => runningnumber.GetHashCode();

		public System.Type GetType()
			 => runningnumber.GetType();





    }



    }

}
    
