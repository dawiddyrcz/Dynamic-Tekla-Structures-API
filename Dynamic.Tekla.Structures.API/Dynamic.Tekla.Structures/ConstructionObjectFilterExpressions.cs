//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class ConstructionObjectFilterExpressions 
    {

        

        dynamic constructionobjectfilterexpressions;
        
        public ConstructionObjectFilterExpressions()
        {
            this.constructionobjectfilterexpressions =  new Tekla.Structures.Filtering.Categories.ConstructionObjectFilterExpressions();
        }

        public ConstructionObjectFilterExpressions(dynamic tsObject)
        {
            this.constructionobjectfilterexpressions = tsObject;

        }


        public dynamic GetTSObject() => constructionobjectfilterexpressions;

		public System.Boolean Equals(System.Object obj)
			 => constructionobjectfilterexpressions.Equals(obj);

		public System.Int32 GetHashCode()
			 => constructionobjectfilterexpressions.GetHashCode();

		public System.Type GetType()
			 => constructionobjectfilterexpressions.GetType();

		public System.String ToString()
			 => constructionobjectfilterexpressions.ToString();




    public sealed class CustomBoolean 
    {

        

        dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  new Tekla.Structures.Filtering.Categories.CustomBoolean();
        }

        public CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;

        }


        public dynamic GetTSObject() => customboolean;

		public System.String ToString()
			 => customboolean.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customboolean.Equals(obj);

		public System.Int32 GetHashCode()
			 => customboolean.GetHashCode();

		public System.Type GetType()
			 => customboolean.GetType();





    }


    public sealed class CustomDateTime 
    {

        

        dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  new Tekla.Structures.Filtering.Categories.CustomDateTime();
        }

        public CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;

        }


        public dynamic GetTSObject() => customdatetime;

		public System.String ToString()
			 => customdatetime.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customdatetime.Equals(obj);

		public System.Int32 GetHashCode()
			 => customdatetime.GetHashCode();

		public System.Type GetType()
			 => customdatetime.GetType();





    }


    public sealed class CustomNumber 
    {

        

        dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  new Tekla.Structures.Filtering.Categories.CustomNumber();
        }

        public CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;

        }


        public dynamic GetTSObject() => customnumber;

		public System.String ToString()
			 => customnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => customnumber.GetHashCode();

		public System.Type GetType()
			 => customnumber.GetType();





    }


    public sealed class CustomString 
    {

        

        dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  new Tekla.Structures.Filtering.Categories.CustomString();
        }

        public CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;

        }


        public dynamic GetTSObject() => customstring;

		public System.String ToString()
			 => customstring.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customstring.Equals(obj);

		public System.Int32 GetHashCode()
			 => customstring.GetHashCode();

		public System.Type GetType()
			 => customstring.GetType();





    }


    public sealed class Phase 
    {

        

        dynamic phase;
        
        public Phase()
        {
            this.phase =  new Tekla.Structures.Filtering.Categories.Phase();
        }

        public Phase(dynamic tsObject)
        {
            this.phase = tsObject;

        }


        public dynamic GetTSObject() => phase;

		public System.String ToString()
			 => phase.ToString();

		public System.Boolean Equals(System.Object obj)
			 => phase.Equals(obj);

		public System.Int32 GetHashCode()
			 => phase.GetHashCode();

		public System.Type GetType()
			 => phase.GetType();





    }


    public sealed class Type 
    {

        

        dynamic type;
        
        public Type()
        {
            this.type =  new Tekla.Structures.Filtering.Categories.Type();
        }

        public Type(dynamic tsObject)
        {
            this.type = tsObject;

        }


        public dynamic GetTSObject() => type;

		public System.String ToString()
			 => type.ToString();

		public System.Boolean Equals(System.Object obj)
			 => type.Equals(obj);

		public System.Int32 GetHashCode()
			 => type.GetHashCode();

		public System.Type GetType()
			 => type.GetType();





    }



    }

}
    
