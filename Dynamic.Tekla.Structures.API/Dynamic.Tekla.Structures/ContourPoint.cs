//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class ContourPoint 
    {

		public Dynamic.Tekla.Structures.Model.Chamfer Chamfer
		{
			get => new Dynamic.Tekla.Structures.Model.Chamfer(contourpoint.Chamfer.GetTSObject());
			set { contourpoint.Chamfer = value.GetTSObject(); }
		}

        

        dynamic contourpoint;
        
        public ContourPoint()
        {
            this.contourpoint =  new Tekla.Structures.Model.ContourPoint();
        }

        public ContourPoint(dynamic tsObject)
        {
            this.contourpoint = tsObject;
			this.Chamfer = new Dynamic.Tekla.Structures.Model.Chamfer(contourpoint.Chamfer);

        }


        public dynamic GetTSObject() => contourpoint;

		public void SetPoint(Dynamic.Tekla.Structures.Geometry3d.Point P)
			 => contourpoint.SetPoint(P.GetTSObject());

		public void Zero()
			 => contourpoint.Zero();

		public System.String ToString()
			 => contourpoint.ToString();

		public void Translate(System.Double X, System.Double Y, System.Double Z)
			 => contourpoint.Translate(X, Y, Z);

		public System.Boolean Equals(System.Object obj)
			 => contourpoint.Equals(obj);

		public System.Int32 GetHashCode()
			 => contourpoint.GetHashCode();

		public System.Int32 CompareTo(System.Object obj)
			 => contourpoint.CompareTo(obj);

		public System.Type GetType()
			 => contourpoint.GetType();





    }

}
    
