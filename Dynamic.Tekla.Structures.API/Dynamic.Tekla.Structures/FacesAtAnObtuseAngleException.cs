//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class FacesAtAnObtuseAngleException 
    {

		public System.String Message
		{
			get => facesatanobtuseangleexception.Message;
			set { facesatanobtuseangleexception.Message = value; }
		}

		public System.Collections.IDictionary Data
		{
			get => facesatanobtuseangleexception.Data;
			set { facesatanobtuseangleexception.Data = value; }
		}

		public System.Exception InnerException
		{
			get => facesatanobtuseangleexception.InnerException;
			set { facesatanobtuseangleexception.InnerException = value; }
		}

		public System.Reflection.MethodBase TargetSite
		{
			get => facesatanobtuseangleexception.TargetSite;
			set { facesatanobtuseangleexception.TargetSite = value; }
		}

		public System.String StackTrace
		{
			get => facesatanobtuseangleexception.StackTrace;
			set { facesatanobtuseangleexception.StackTrace = value; }
		}

		public System.String HelpLink
		{
			get => facesatanobtuseangleexception.HelpLink;
			set { facesatanobtuseangleexception.HelpLink = value; }
		}

		public System.String Source
		{
			get => facesatanobtuseangleexception.Source;
			set { facesatanobtuseangleexception.Source = value; }
		}

		public System.Int32 HResult
		{
			get => facesatanobtuseangleexception.HResult;
			set { facesatanobtuseangleexception.HResult = value; }
		}

        

        dynamic facesatanobtuseangleexception;
        
        public FacesAtAnObtuseAngleException()
        {
            this.facesatanobtuseangleexception =  new Tekla.Structures.Model.FacesAtAnObtuseAngleException();
        }

        public FacesAtAnObtuseAngleException(dynamic tsObject)
        {
            this.facesatanobtuseangleexception = tsObject;
			this.Message = facesatanobtuseangleexception.Message;
			this.Data = facesatanobtuseangleexception.Data;
			this.InnerException = facesatanobtuseangleexception.InnerException;
			this.TargetSite = facesatanobtuseangleexception.TargetSite;
			this.StackTrace = facesatanobtuseangleexception.StackTrace;
			this.HelpLink = facesatanobtuseangleexception.HelpLink;
			this.Source = facesatanobtuseangleexception.Source;
			this.HResult = facesatanobtuseangleexception.HResult;

        }


        public dynamic GetTSObject() => facesatanobtuseangleexception;

		public System.Exception GetBaseException()
			 => facesatanobtuseangleexception.GetBaseException();

		public System.String ToString()
			 => facesatanobtuseangleexception.ToString();

		public System.Type GetType()
			 => facesatanobtuseangleexception.GetType();

		public void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
			 => facesatanobtuseangleexception.GetObjectData(info, context);

		public System.Boolean Equals(System.Object obj)
			 => facesatanobtuseangleexception.Equals(obj);

		public System.Int32 GetHashCode()
			 => facesatanobtuseangleexception.GetHashCode();

		public System.Type GetType()
			 => facesatanobtuseangleexception.GetType();





    }

}
    
