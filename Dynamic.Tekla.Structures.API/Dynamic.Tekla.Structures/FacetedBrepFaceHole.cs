//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public sealed class FacetedBrepFaceHole 
    {

		public System.Int32 Count
		{
			get => facetedbrepfacehole.Count;
			set { facetedbrepfacehole.Count = value; }
		}

		public System.Boolean IsReadOnly
		{
			get => facetedbrepfacehole.IsReadOnly;
			set { facetedbrepfacehole.IsReadOnly = value; }
		}

		public System.Collections.Generic.IListSystem.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089<System.Int32> VerticeIndexes
		{
			get => facetedbrepfacehole.VerticeIndexes;
			set { facetedbrepfacehole.VerticeIndexes = value; }
		}

		public System.Collections.Generic.IListTekla.Structures.Geometry3d.Vector, Tekla.Structures, Version=2019.1.0.0, Culture=neutral, PublicKeyToken=2f04dbe497b71114<Dynamic.Tekla.Structures.Geometry3d.Vector> Vertices
		{
			get => facetedbrepfacehole.Vertices;
			set { facetedbrepfacehole.Vertices = value; }
		}

        

        dynamic facetedbrepfacehole;
        
        public FacetedBrepFaceHole()
        {
            this.facetedbrepfacehole =  new Tekla.Structures.Geometry3d.FacetedBrepFaceHole();
        }

        public FacetedBrepFaceHole(dynamic tsObject)
        {
            this.facetedbrepfacehole = tsObject;
			this.Count = facetedbrepfacehole.Count;
			this.IsReadOnly = facetedbrepfacehole.IsReadOnly;
			this.VerticeIndexes = facetedbrepfacehole.VerticeIndexes;
			this.Vertices = facetedbrepfacehole.Vertices;

        }


        public dynamic GetTSObject() => facetedbrepfacehole;

		public System.Boolean Equals(System.Object obj)
			 => facetedbrepfacehole.Equals(obj);

		public System.Int32 GetHashCode()
			 => facetedbrepfacehole.GetHashCode();

		public System.Type GetType()
			 => facetedbrepfacehole.GetType();

		public System.String ToString()
			 => facetedbrepfacehole.ToString();





    }

}
    
