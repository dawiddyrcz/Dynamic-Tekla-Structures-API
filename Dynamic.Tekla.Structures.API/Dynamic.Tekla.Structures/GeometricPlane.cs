//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public sealed class GeometricPlane 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Point Origin
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Point(geometricplane.Origin.GetTSObject());
			set { geometricplane.Origin = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector Normal
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Vector(geometricplane.Normal.GetTSObject());
			set { geometricplane.Normal = value.GetTSObject(); }
		}

        

        dynamic geometricplane;
        
        public GeometricPlane()
        {
            this.geometricplane =  new Tekla.Structures.Geometry3d.GeometricPlane();
        }

        public GeometricPlane(dynamic tsObject)
        {
            this.geometricplane = tsObject;
			this.Origin = new Dynamic.Tekla.Structures.Geometry3d.Point(geometricplane.Origin);
			this.Normal = new Dynamic.Tekla.Structures.Geometry3d.Vector(geometricplane.Normal);

        }


        public dynamic GetTSObject() => geometricplane;

		public Dynamic.Tekla.Structures.Geometry3d.Vector GetNormal()
			 => new Dynamic.Tekla.Structures.Geometry3d.Vector(geometricplane.GetNormal());

		public System.Boolean Equals(System.Object obj)
			 => geometricplane.Equals(obj);

		public System.Int32 GetHashCode()
			 => geometricplane.GetHashCode();

		public System.Type GetType()
			 => geometricplane.GetType();

		public System.String ToString()
			 => geometricplane.ToString();





    }

}
    
