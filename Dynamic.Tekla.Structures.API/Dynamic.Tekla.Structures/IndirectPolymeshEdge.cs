//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public sealed class IndirectPolymeshEdge 
    {

		public Dynamic.Tekla.Structures.Geometry3d.PolymeshEdgeTypeEnum EdgeType
		{
			get => Dynamic.Tekla.Structures.Geometry3d.PolymeshEdgeTypeEnum_.FromTSObject(indirectpolymeshedge.EdgeType);
			set { indirectpolymeshedge.EdgeType = Dynamic.Tekla.Structures.Geometry3d.PolymeshEdgeTypeEnum_.FromTSObject(value); }
		}

		public System.Int32 StartPoint
		{
			get => indirectpolymeshedge.StartPoint;
			set { indirectpolymeshedge.StartPoint = value; }
		}

		public System.Int32 EndPoint
		{
			get => indirectpolymeshedge.EndPoint;
			set { indirectpolymeshedge.EndPoint = value; }
		}

		public System.Int32 ShellIndex
		{
			get => indirectpolymeshedge.ShellIndex;
			set { indirectpolymeshedge.ShellIndex = value; }
		}

        

        dynamic indirectpolymeshedge;
        
        public IndirectPolymeshEdge()
        {
            this.indirectpolymeshedge =  new Tekla.Structures.Geometry3d.IndirectPolymeshEdge();
        }

        public IndirectPolymeshEdge(dynamic tsObject)
        {
            this.indirectpolymeshedge = tsObject;
			this.EdgeType = Dynamic.Tekla.Structures.Geometry3d.PolymeshEdgeTypeEnum_.FromTSObject(indirectpolymeshedge.EdgeType);
			this.StartPoint = indirectpolymeshedge.StartPoint;
			this.EndPoint = indirectpolymeshedge.EndPoint;
			this.ShellIndex = indirectpolymeshedge.ShellIndex;

        }


        public dynamic GetTSObject() => indirectpolymeshedge;





    }

}
    
