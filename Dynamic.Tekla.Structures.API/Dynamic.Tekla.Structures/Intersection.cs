//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public sealed class Intersection 
    {

        

        dynamic intersection;
        
        public Intersection()
        {
            this.intersection =  new Tekla.Structures.Geometry3d.Intersection();
        }

        public Intersection(dynamic tsObject)
        {
            this.intersection = tsObject;

        }


        public dynamic GetTSObject() => intersection;

		public Dynamic.Tekla.Structures.Geometry3d.LineSegment LineToLine(Dynamic.Tekla.Structures.Geometry3d.Line line1, Dynamic.Tekla.Structures.Geometry3d.Line line2)
			 => new Dynamic.Tekla.Structures.Geometry3d.LineSegment(intersection.LineToLine(line1.GetTSObject(), line2.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.Point LineToPlane(Dynamic.Tekla.Structures.Geometry3d.Line line, Dynamic.Tekla.Structures.Geometry3d.GeometricPlane plane)
			 => new Dynamic.Tekla.Structures.Geometry3d.Point(intersection.LineToPlane(line.GetTSObject(), plane.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.Point LineSegmentToPlane(Dynamic.Tekla.Structures.Geometry3d.LineSegment lineSegment, Dynamic.Tekla.Structures.Geometry3d.GeometricPlane plane)
			 => new Dynamic.Tekla.Structures.Geometry3d.Point(intersection.LineSegmentToPlane(lineSegment.GetTSObject(), plane.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.Line PlaneToPlane(Dynamic.Tekla.Structures.Geometry3d.GeometricPlane plane1, Dynamic.Tekla.Structures.Geometry3d.GeometricPlane plane2)
			 => new Dynamic.Tekla.Structures.Geometry3d.Line(intersection.PlaneToPlane(plane1.GetTSObject(), plane2.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.LineSegment LineToObb(Dynamic.Tekla.Structures.Geometry3d.Line line, Dynamic.Tekla.Structures.Geometry3d.OBB obb)
			 => new Dynamic.Tekla.Structures.Geometry3d.LineSegment(intersection.LineToObb(line.GetTSObject(), obb.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.LineSegment LineSegmentToObb(Dynamic.Tekla.Structures.Geometry3d.LineSegment lineSegment, Dynamic.Tekla.Structures.Geometry3d.OBB obb)
			 => new Dynamic.Tekla.Structures.Geometry3d.LineSegment(intersection.LineSegmentToObb(lineSegment.GetTSObject(), obb.GetTSObject()));

		public System.Boolean Equals(System.Object obj)
			 => intersection.Equals(obj);

		public System.Int32 GetHashCode()
			 => intersection.GetHashCode();

		public System.Type GetType()
			 => intersection.GetType();

		public System.String ToString()
			 => intersection.ToString();





    }

}
    
