//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Solid
{

    public sealed class LoopEnumerator 
    {

		public Dynamic.Tekla.Structures.Solid.Loop Current
		{
			get => new Dynamic.Tekla.Structures.Solid.Loop(loopenumerator.Current.GetTSObject());
			set { loopenumerator.Current = value.GetTSObject(); }
		}

        

        dynamic loopenumerator;
        
        public LoopEnumerator()
        {
            this.loopenumerator =  new Tekla.Structures.Solid.LoopEnumerator();
        }

        public LoopEnumerator(dynamic tsObject)
        {
            this.loopenumerator = tsObject;
			this.Current = new Dynamic.Tekla.Structures.Solid.Loop(loopenumerator.Current);

        }


        public dynamic GetTSObject() => loopenumerator;

		public System.Boolean MoveNext()
			 => loopenumerator.MoveNext();

		public void Reset()
			 => loopenumerator.Reset();

		public System.Boolean Equals(System.Object obj)
			 => loopenumerator.Equals(obj);

		public System.Int32 GetHashCode()
			 => loopenumerator.GetHashCode();

		public System.Type GetType()
			 => loopenumerator.GetType();

		public System.String ToString()
			 => loopenumerator.ToString();





    }

}
    
