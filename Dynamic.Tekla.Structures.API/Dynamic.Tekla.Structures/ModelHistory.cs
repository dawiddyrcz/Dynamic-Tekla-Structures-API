//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model.History
{

    public sealed class ModelHistory 
    {

        

        dynamic modelhistory;
        
        public ModelHistory()
        {
            this.modelhistory =  new Tekla.Structures.Model.History.ModelHistory();
        }

        public ModelHistory(dynamic tsObject)
        {
            this.modelhistory = tsObject;

        }


        public dynamic GetTSObject() => modelhistory;

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetModifiedObjects(Dynamic.Tekla.Structures.Model.History.ModificationStamp ModStamp)
			 => new Dynamic.Tekla.Structures.Model.ModelObjectEnumerator(modelhistory.GetModifiedObjects(ModStamp.GetTSObject()));

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetModifiedObjectsWithType(Dynamic.Tekla.Structures.Model.History.ModificationStamp ModStamp, Dynamic.Tekla.Structures.Model.ModelObject.ModelObjectEnum Enum)
			 => new Dynamic.Tekla.Structures.Model.ModelObjectEnumerator(modelhistory.GetModifiedObjectsWithType(ModStamp.GetTSObject(), Enum.GetTSObject()));

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetDeletedObjects(Dynamic.Tekla.Structures.Model.History.ModificationStamp ModStamp)
			 => new Dynamic.Tekla.Structures.Model.ModelObjectEnumerator(modelhistory.GetDeletedObjects(ModStamp.GetTSObject()));

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetDeletedObjectsWithType(Dynamic.Tekla.Structures.Model.History.ModificationStamp ModStamp, Dynamic.Tekla.Structures.Model.ModelObject.ModelObjectEnum Enum)
			 => new Dynamic.Tekla.Structures.Model.ModelObjectEnumerator(modelhistory.GetDeletedObjectsWithType(ModStamp.GetTSObject(), Enum.GetTSObject()));

		public Dynamic.Tekla.Structures.Model.History.ModificationStamp GetCurrentModificationStamp()
			 => new Dynamic.Tekla.Structures.Model.History.ModificationStamp(modelhistory.GetCurrentModificationStamp());

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetNotSharedObjects()
			 => new Dynamic.Tekla.Structures.Model.ModelObjectEnumerator(modelhistory.GetNotSharedObjects());

		public Dynamic.Tekla.Structures.Model.History.ModificationInfo GetLocalChanges()
			 => new Dynamic.Tekla.Structures.Model.History.ModificationInfo(modelhistory.GetLocalChanges());

		public Dynamic.Tekla.Structures.Model.History.ModificationInfo TakeModifications(System.String Name, Dynamic.Tekla.Structures.Model.History.ModificationStamp PrevStamp)
			 => new Dynamic.Tekla.Structures.Model.History.ModificationInfo(modelhistory.TakeModifications(Name, PrevStamp.GetTSObject()));

		public Dynamic.Tekla.Structures.Model.History.ModificationInfo TakeModifications(System.String Name, System.Collections.Generic.IEnumerableTekla.Structures.Model.ModelObject.ModelObjectEnum, Tekla.Structures.Model, Version=2019.1.0.0, Culture=neutral, PublicKeyToken=2f04dbe497b71114<Dynamic.Tekla.Structures.Model.ModelObject.ModelObjectEnum> ObjectTypes, Dynamic.Tekla.Structures.Model.History.ModificationStamp PrevStamp)
			 => new Dynamic.Tekla.Structures.Model.History.ModificationInfo(modelhistory.TakeModifications(Name, ObjectTypes, PrevStamp.GetTSObject()));

		public void UpdateModificationStampToLatest(System.String modificationStampKey)
			 => modelhistory.UpdateModificationStampToLatest(modificationStampKey);

		public Dynamic.Tekla.Structures.Model.History.ModificationInfo GetModifications(System.String Name, Dynamic.Tekla.Structures.Model.History.ModificationStamp PrevStamp)
			 => new Dynamic.Tekla.Structures.Model.History.ModificationInfo(modelhistory.GetModifications(Name, PrevStamp.GetTSObject()));

		public Dynamic.Tekla.Structures.Model.History.ModificationInfo GetModifications(System.String Name, System.Collections.Generic.IEnumerableTekla.Structures.Model.ModelObject.ModelObjectEnum, Tekla.Structures.Model, Version=2019.1.0.0, Culture=neutral, PublicKeyToken=2f04dbe497b71114<Dynamic.Tekla.Structures.Model.ModelObject.ModelObjectEnum> ObjectTypes, Dynamic.Tekla.Structures.Model.History.ModificationStamp PrevStamp)
			 => new Dynamic.Tekla.Structures.Model.History.ModificationInfo(modelhistory.GetModifications(Name, ObjectTypes, PrevStamp.GetTSObject()));

		public System.Boolean Equals(System.Object obj)
			 => modelhistory.Equals(obj);

		public System.Int32 GetHashCode()
			 => modelhistory.GetHashCode();

		public System.Type GetType()
			 => modelhistory.GetType();

		public System.String ToString()
			 => modelhistory.ToString();





    }

}
    
