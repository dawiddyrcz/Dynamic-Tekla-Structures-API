//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class PartFilterExpressions 
    {

        

        dynamic partfilterexpressions;
        
        public PartFilterExpressions()
        {
            this.partfilterexpressions =  new Tekla.Structures.Filtering.Categories.PartFilterExpressions();
        }

        public PartFilterExpressions(dynamic tsObject)
        {
            this.partfilterexpressions = tsObject;

        }


        public dynamic GetTSObject() => partfilterexpressions;

		public System.Boolean Equals(System.Object obj)
			 => partfilterexpressions.Equals(obj);

		public System.Int32 GetHashCode()
			 => partfilterexpressions.GetHashCode();

		public System.Type GetType()
			 => partfilterexpressions.GetType();

		public System.String ToString()
			 => partfilterexpressions.ToString();




    public sealed class CustomBoolean 
    {

        

        dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  new Tekla.Structures.Filtering.Categories.CustomBoolean();
        }

        public CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;

        }


        public dynamic GetTSObject() => customboolean;

		public System.String ToString()
			 => customboolean.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customboolean.Equals(obj);

		public System.Int32 GetHashCode()
			 => customboolean.GetHashCode();

		public System.Type GetType()
			 => customboolean.GetType();





    }


    public sealed class CustomDateTime 
    {

        

        dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  new Tekla.Structures.Filtering.Categories.CustomDateTime();
        }

        public CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;

        }


        public dynamic GetTSObject() => customdatetime;

		public System.String ToString()
			 => customdatetime.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customdatetime.Equals(obj);

		public System.Int32 GetHashCode()
			 => customdatetime.GetHashCode();

		public System.Type GetType()
			 => customdatetime.GetType();





    }


    public sealed class CustomNumber 
    {

        

        dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  new Tekla.Structures.Filtering.Categories.CustomNumber();
        }

        public CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;

        }


        public dynamic GetTSObject() => customnumber;

		public System.String ToString()
			 => customnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => customnumber.GetHashCode();

		public System.Type GetType()
			 => customnumber.GetType();





    }


    public sealed class CustomString 
    {

        

        dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  new Tekla.Structures.Filtering.Categories.CustomString();
        }

        public CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;

        }


        public dynamic GetTSObject() => customstring;

		public System.String ToString()
			 => customstring.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customstring.Equals(obj);

		public System.Int32 GetHashCode()
			 => customstring.GetHashCode();

		public System.Type GetType()
			 => customstring.GetType();





    }


    public sealed class Class 
    {

        

        dynamic @class;
        
        public Class()
        {
            this.@class =  new Tekla.Structures.Filtering.Categories.Class();
        }

        public Class(dynamic tsObject)
        {
            this.@class = tsObject;

        }


        public dynamic GetTSObject() => @class;

		public System.String ToString()
			 => @class.ToString();

		public System.Boolean Equals(System.Object obj)
			 => @class.Equals(obj);

		public System.Int32 GetHashCode()
			 => @class.GetHashCode();

		public System.Type GetType()
			 => @class.GetType();





    }


    public sealed class Finish 
    {

        

        dynamic finish;
        
        public Finish()
        {
            this.finish =  new Tekla.Structures.Filtering.Categories.Finish();
        }

        public Finish(dynamic tsObject)
        {
            this.finish = tsObject;

        }


        public dynamic GetTSObject() => finish;

		public System.String ToString()
			 => finish.ToString();

		public System.Boolean Equals(System.Object obj)
			 => finish.Equals(obj);

		public System.Int32 GetHashCode()
			 => finish.GetHashCode();

		public System.Type GetType()
			 => finish.GetType();





    }


    public sealed class Lot 
    {

        

        dynamic lot;
        
        public Lot()
        {
            this.lot =  new Tekla.Structures.Filtering.Categories.Lot();
        }

        public Lot(dynamic tsObject)
        {
            this.lot = tsObject;

        }


        public dynamic GetTSObject() => lot;

		public System.String ToString()
			 => lot.ToString();

		public System.Boolean Equals(System.Object obj)
			 => lot.Equals(obj);

		public System.Int32 GetHashCode()
			 => lot.GetHashCode();

		public System.Type GetType()
			 => lot.GetType();





    }


    public sealed class Material 
    {

        

        dynamic material;
        
        public Material()
        {
            this.material =  new Tekla.Structures.Filtering.Categories.Material();
        }

        public Material(dynamic tsObject)
        {
            this.material = tsObject;

        }


        public dynamic GetTSObject() => material;

		public System.String ToString()
			 => material.ToString();

		public System.Boolean Equals(System.Object obj)
			 => material.Equals(obj);

		public System.Int32 GetHashCode()
			 => material.GetHashCode();

		public System.Type GetType()
			 => material.GetType();





    }


    public sealed class Name 
    {

        

        dynamic name;
        
        public Name()
        {
            this.name =  new Tekla.Structures.Filtering.Categories.Name();
        }

        public Name(dynamic tsObject)
        {
            this.name = tsObject;

        }


        public dynamic GetTSObject() => name;

		public System.String ToString()
			 => name.ToString();

		public System.Boolean Equals(System.Object obj)
			 => name.Equals(obj);

		public System.Int32 GetHashCode()
			 => name.GetHashCode();

		public System.Type GetType()
			 => name.GetType();





    }


    public sealed class NumberingSeries 
    {

        

        dynamic numberingseries;
        
        public NumberingSeries()
        {
            this.numberingseries =  new Tekla.Structures.Filtering.Categories.NumberingSeries();
        }

        public NumberingSeries(dynamic tsObject)
        {
            this.numberingseries = tsObject;

        }


        public dynamic GetTSObject() => numberingseries;

		public System.String ToString()
			 => numberingseries.ToString();

		public System.Boolean Equals(System.Object obj)
			 => numberingseries.Equals(obj);

		public System.Int32 GetHashCode()
			 => numberingseries.GetHashCode();

		public System.Type GetType()
			 => numberingseries.GetType();





    }


    public sealed class Phase 
    {

        

        dynamic phase;
        
        public Phase()
        {
            this.phase =  new Tekla.Structures.Filtering.Categories.Phase();
        }

        public Phase(dynamic tsObject)
        {
            this.phase = tsObject;

        }


        public dynamic GetTSObject() => phase;

		public System.String ToString()
			 => phase.ToString();

		public System.Boolean Equals(System.Object obj)
			 => phase.Equals(obj);

		public System.Int32 GetHashCode()
			 => phase.GetHashCode();

		public System.Type GetType()
			 => phase.GetType();





    }


    public sealed class PositionNumber 
    {

        

        dynamic positionnumber;
        
        public PositionNumber()
        {
            this.positionnumber =  new Tekla.Structures.Filtering.Categories.PositionNumber();
        }

        public PositionNumber(dynamic tsObject)
        {
            this.positionnumber = tsObject;

        }


        public dynamic GetTSObject() => positionnumber;

		public System.String ToString()
			 => positionnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => positionnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => positionnumber.GetHashCode();

		public System.Type GetType()
			 => positionnumber.GetType();





    }


    public sealed class Prefix 
    {

        

        dynamic prefix;
        
        public Prefix()
        {
            this.prefix =  new Tekla.Structures.Filtering.Categories.Prefix();
        }

        public Prefix(dynamic tsObject)
        {
            this.prefix = tsObject;

        }


        public dynamic GetTSObject() => prefix;

		public System.String ToString()
			 => prefix.ToString();

		public System.Boolean Equals(System.Object obj)
			 => prefix.Equals(obj);

		public System.Int32 GetHashCode()
			 => prefix.GetHashCode();

		public System.Type GetType()
			 => prefix.GetType();





    }


    public sealed class PrimaryPart 
    {

        

        dynamic primarypart;
        
        public PrimaryPart()
        {
            this.primarypart =  new Tekla.Structures.Filtering.Categories.PrimaryPart();
        }

        public PrimaryPart(dynamic tsObject)
        {
            this.primarypart = tsObject;

        }


        public dynamic GetTSObject() => primarypart;

		public System.String ToString()
			 => primarypart.ToString();

		public System.Boolean Equals(System.Object obj)
			 => primarypart.Equals(obj);

		public System.Int32 GetHashCode()
			 => primarypart.GetHashCode();

		public System.Type GetType()
			 => primarypart.GetType();





    }


    public sealed class Profile 
    {

        

        dynamic profile;
        
        public Profile()
        {
            this.profile =  new Tekla.Structures.Filtering.Categories.Profile();
        }

        public Profile(dynamic tsObject)
        {
            this.profile = tsObject;

        }


        public dynamic GetTSObject() => profile;

		public System.String ToString()
			 => profile.ToString();

		public System.Boolean Equals(System.Object obj)
			 => profile.Equals(obj);

		public System.Int32 GetHashCode()
			 => profile.GetHashCode();

		public System.Type GetType()
			 => profile.GetType();





    }


    public sealed class StartNumber 
    {

        

        dynamic startnumber;
        
        public StartNumber()
        {
            this.startnumber =  new Tekla.Structures.Filtering.Categories.StartNumber();
        }

        public StartNumber(dynamic tsObject)
        {
            this.startnumber = tsObject;

        }


        public dynamic GetTSObject() => startnumber;

		public System.String ToString()
			 => startnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => startnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => startnumber.GetHashCode();

		public System.Type GetType()
			 => startnumber.GetType();





    }


    public sealed class PourPhase 
    {

        

        dynamic pourphase;
        
        public PourPhase()
        {
            this.pourphase =  new Tekla.Structures.Filtering.Categories.PourPhase();
        }

        public PourPhase(dynamic tsObject)
        {
            this.pourphase = tsObject;

        }


        public dynamic GetTSObject() => pourphase;

		public System.String ToString()
			 => pourphase.ToString();

		public System.Boolean Equals(System.Object obj)
			 => pourphase.Equals(obj);

		public System.Int32 GetHashCode()
			 => pourphase.GetHashCode();

		public System.Type GetType()
			 => pourphase.GetType();





    }



    }

}
    
