//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class PhaseCollection 
    {

		public System.Int32 Count
		{
			get => phasecollection.Count;
			set { phasecollection.Count = value; }
		}

		public System.Boolean IsSynchronized
		{
			get => phasecollection.IsSynchronized;
			set { phasecollection.IsSynchronized = value; }
		}

		public System.Object SyncRoot
		{
			get => phasecollection.SyncRoot;
			set { phasecollection.SyncRoot = value; }
		}

        

        dynamic phasecollection;
        
        public PhaseCollection()
        {
            this.phasecollection =  new Tekla.Structures.Model.PhaseCollection();
        }

        public PhaseCollection(dynamic tsObject)
        {
            this.phasecollection = tsObject;
			this.Count = phasecollection.Count;
			this.IsSynchronized = phasecollection.IsSynchronized;
			this.SyncRoot = phasecollection.SyncRoot;

        }


        public dynamic GetTSObject() => phasecollection;

		public void CopyTo(System.Array Array, System.Int32 Index)
			 => phasecollection.CopyTo(Array, Index);

		public System.Collections.IEnumerator GetEnumerator()
			 => phasecollection.GetEnumerator();





    }

}
    
