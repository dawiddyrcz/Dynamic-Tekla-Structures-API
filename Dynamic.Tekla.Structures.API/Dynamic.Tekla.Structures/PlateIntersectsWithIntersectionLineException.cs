//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class PlateIntersectsWithIntersectionLineException 
    {

		public System.String Message
		{
			get => plateintersectswithintersectionlineexception.Message;
			set { plateintersectswithintersectionlineexception.Message = value; }
		}

		public System.Collections.IDictionary Data
		{
			get => plateintersectswithintersectionlineexception.Data;
			set { plateintersectswithintersectionlineexception.Data = value; }
		}

		public System.Exception InnerException
		{
			get => plateintersectswithintersectionlineexception.InnerException;
			set { plateintersectswithintersectionlineexception.InnerException = value; }
		}

		public System.Reflection.MethodBase TargetSite
		{
			get => plateintersectswithintersectionlineexception.TargetSite;
			set { plateintersectswithintersectionlineexception.TargetSite = value; }
		}

		public System.String StackTrace
		{
			get => plateintersectswithintersectionlineexception.StackTrace;
			set { plateintersectswithintersectionlineexception.StackTrace = value; }
		}

		public System.String HelpLink
		{
			get => plateintersectswithintersectionlineexception.HelpLink;
			set { plateintersectswithintersectionlineexception.HelpLink = value; }
		}

		public System.String Source
		{
			get => plateintersectswithintersectionlineexception.Source;
			set { plateintersectswithintersectionlineexception.Source = value; }
		}

		public System.Int32 HResult
		{
			get => plateintersectswithintersectionlineexception.HResult;
			set { plateintersectswithintersectionlineexception.HResult = value; }
		}

        

        dynamic plateintersectswithintersectionlineexception;
        
        public PlateIntersectsWithIntersectionLineException()
        {
            this.plateintersectswithintersectionlineexception =  new Tekla.Structures.Model.PlateIntersectsWithIntersectionLineException();
        }

        public PlateIntersectsWithIntersectionLineException(dynamic tsObject)
        {
            this.plateintersectswithintersectionlineexception = tsObject;
			this.Message = plateintersectswithintersectionlineexception.Message;
			this.Data = plateintersectswithintersectionlineexception.Data;
			this.InnerException = plateintersectswithintersectionlineexception.InnerException;
			this.TargetSite = plateintersectswithintersectionlineexception.TargetSite;
			this.StackTrace = plateintersectswithintersectionlineexception.StackTrace;
			this.HelpLink = plateintersectswithintersectionlineexception.HelpLink;
			this.Source = plateintersectswithintersectionlineexception.Source;
			this.HResult = plateintersectswithintersectionlineexception.HResult;

        }


        public dynamic GetTSObject() => plateintersectswithintersectionlineexception;

		public System.Exception GetBaseException()
			 => plateintersectswithintersectionlineexception.GetBaseException();

		public void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
			 => plateintersectswithintersectionlineexception.GetObjectData(info, context);





    }

}
    
