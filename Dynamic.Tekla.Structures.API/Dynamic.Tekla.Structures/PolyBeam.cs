
//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file



namespace Dynamic.Tekla.Structures.Model
{
    public sealed class PolyBeam 
    {

		public Dynamic.Tekla.Structures.Model.PolyBeamTypeEnum Type {get; set; }
		public Dynamic.Tekla.Structures.Model.Contour Contour {get; set; }
		public Dynamic.Tekla.Structures.Model.Profile Profile {get; set; }
		public Dynamic.Tekla.Structures.Model.Material Material {get; set; }
		public Dynamic.Tekla.Structures.Model.DeformingData DeformingData {get; set; }
		public Dynamic.Tekla.Structures.Model.NumberingSeries PartNumber {get; set; }
		public Dynamic.Tekla.Structures.Model.NumberingSeries AssemblyNumber {get; set; }
		public System.String Name {get; set; }
		public System.String Class {get; set; }
		public System.String Finish {get; set; }
		public Dynamic.Tekla.Structures.Model.CastUnitTypeEnum CastUnitType {get; set; }
		public System.Int32 PourPhase {get; set; }
		public Dynamic.Tekla.Structures.Model.Position Position {get; set; }
		public System.Nullable<System.DateTime> ModificationTime {get; set; }
		public System.Boolean IsUpToDate {get; set; }
		public Dynamic.Tekla.Structures.Identifier Identifier {get; set; }
        

        dynamic polybeam;
        
        public PolyBeam()
        {
            this.polybeam =  new Tekla.Structures.Model.PolyBeam();
        }

        public PolyBeam(dynamic tsObject)
        {
            this.polybeam = tsObject;
			this.Type = new Dynamic.Tekla.Structures.Model.PolyBeamTypeEnum(tsObject);
			this.Contour = new Dynamic.Tekla.Structures.Model.Contour(tsObject);
			this.Profile = new Dynamic.Tekla.Structures.Model.Profile(tsObject);
			this.Material = new Dynamic.Tekla.Structures.Model.Material(tsObject);
			this.DeformingData = new Dynamic.Tekla.Structures.Model.DeformingData(tsObject);
			this.PartNumber = new Dynamic.Tekla.Structures.Model.NumberingSeries(tsObject);
			this.AssemblyNumber = new Dynamic.Tekla.Structures.Model.NumberingSeries(tsObject);
			this.Name = tsObject.Name;
			this.Class = tsObject.Class;
			this.Finish = tsObject.Finish;
			this.CastUnitType = new Dynamic.Tekla.Structures.Model.CastUnitTypeEnum(tsObject);
			this.PourPhase = tsObject.PourPhase;
			this.Position = new Dynamic.Tekla.Structures.Model.Position(tsObject);
			this.ModificationTime = tsObject.ModificationTime;
			this.IsUpToDate = tsObject.IsUpToDate;
			this.Identifier = new Dynamic.Tekla.Structures.Identifier(tsObject);

        }


		public void AddContourPoint() => polybeam.AddContourPoint();
		public void Insert() => polybeam.Insert();
		public void Select() => polybeam.Select();
		public void Modify() => polybeam.Modify();
		public void Delete() => polybeam.Delete();
		public void GetPolybeamCoordinateSystems() => polybeam.GetPolybeamCoordinateSystems();
		public void GetSolid() => polybeam.GetSolid();
		public void GetSolid() => polybeam.GetSolid();
		public void GetSolid() => polybeam.GetSolid();
		public void GetAssembly() => polybeam.GetAssembly();
		public void GetPartMark() => polybeam.GetPartMark();
		public void GetCenterLine() => polybeam.GetCenterLine();
		public void GetReferenceLine() => polybeam.GetReferenceLine();
		public void GetComponents() => polybeam.GetComponents();
		public void GetBooleans() => polybeam.GetBooleans();
		public void GetBolts() => polybeam.GetBolts();
		public void GetWelds() => polybeam.GetWelds();
		public void GetReinforcements() => polybeam.GetReinforcements();
		public void GetSurfaceTreatments() => polybeam.GetSurfaceTreatments();
		public void GetSurfaceObjects() => polybeam.GetSurfaceObjects();
		public void GetPours() => polybeam.GetPours();
		public void CompareTo() => polybeam.CompareTo();
		public void GetDSTVCoordinateSystem() => polybeam.GetDSTVCoordinateSystem();
		public void GetChildren() => polybeam.GetChildren();
		public void GetFatherComponent() => polybeam.GetFatherComponent();
		public void GetHierarchicObjects() => polybeam.GetHierarchicObjects();
		public void GetAllUserProperties() => polybeam.GetAllUserProperties();
		public void GetIntegerUserProperties() => polybeam.GetIntegerUserProperties();
		public void GetDoubleUserProperties() => polybeam.GetDoubleUserProperties();
		public void GetStringUserProperties() => polybeam.GetStringUserProperties();
		public void GetAllReportProperties() => polybeam.GetAllReportProperties();
		public void GetIntegerReportProperties() => polybeam.GetIntegerReportProperties();
		public void GetDoubleReportProperties() => polybeam.GetDoubleReportProperties();
		public void GetStringReportProperties() => polybeam.GetStringReportProperties();
		public void GetUserProperty() => polybeam.GetUserProperty();
		public void GetReportProperty() => polybeam.GetReportProperty();
		public void GetUserProperty() => polybeam.GetUserProperty();
		public void GetReportProperty() => polybeam.GetReportProperty();
		public void GetUserProperty() => polybeam.GetUserProperty();
		public void GetReportProperty() => polybeam.GetReportProperty();
		public void GetDynamicStringProperty() => polybeam.GetDynamicStringProperty();
		public void SetDynamicStringProperty() => polybeam.SetDynamicStringProperty();
		public void SetUserProperty() => polybeam.SetUserProperty();
		public void SetUserProperty() => polybeam.SetUserProperty();
		public void SetUserProperty() => polybeam.SetUserProperty();
		public void GetCoordinateSystem() => polybeam.GetCoordinateSystem();
		public void SetPhase() => polybeam.SetPhase();
		public void GetPhase() => polybeam.GetPhase();
		public void SetLabel() => polybeam.SetLabel();
		public void CompareTo() => polybeam.CompareTo();
		public void Equals() => polybeam.Equals();
		public void Equals() => polybeam.Equals();
		public void GetHashCode() => polybeam.GetHashCode();
		public void GetType() => polybeam.GetType();
		public void ToString() => polybeam.ToString();


    }
}

            