//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public sealed class PolycurveGeometryBuilder 
    {

        

        dynamic polycurvegeometrybuilder;
        
        public PolycurveGeometryBuilder()
        {
            this.polycurvegeometrybuilder =  new Tekla.Structures.Geometry3d.PolycurveGeometryBuilder();
        }

        public PolycurveGeometryBuilder(dynamic tsObject)
        {
            this.polycurvegeometrybuilder = tsObject;

        }


        public dynamic GetTSObject() => polycurvegeometrybuilder;

		public Dynamic.Tekla.Structures.Geometry3d.Polycurve GetPolycurve()
			 => new Dynamic.Tekla.Structures.Geometry3d.Polycurve(polycurvegeometrybuilder.GetPolycurve());

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder Append(Dynamic.Tekla.Structures.Geometry3d.Arc arc)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.Append(arc.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder Append(Dynamic.Tekla.Structures.Geometry3d.LineSegment segment)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.Append(segment.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder Append(Dynamic.Tekla.Structures.Geometry3d.Polycurve otherPolycurve)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.Append(otherPolycurve.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder AppendArc(Dynamic.Tekla.Structures.Geometry3d.Point middlePoint, Dynamic.Tekla.Structures.Geometry3d.Point endPoint)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.AppendArc(middlePoint.GetTSObject(), endPoint.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder AppendSegment(Dynamic.Tekla.Structures.Geometry3d.Point endPoint)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.AppendSegment(endPoint.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder AppendTangentArc(Dynamic.Tekla.Structures.Geometry3d.Point endPoint)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.AppendTangentArc(endPoint.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder AppendTangentSegment(System.Double length)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.AppendTangentSegment(length));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder Prepend(Dynamic.Tekla.Structures.Geometry3d.Arc arc)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.Prepend(arc.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder Prepend(Dynamic.Tekla.Structures.Geometry3d.LineSegment segment)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.Prepend(segment.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder PrependArc(Dynamic.Tekla.Structures.Geometry3d.Point startPoint, Dynamic.Tekla.Structures.Geometry3d.Point middlePoint)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.PrependArc(startPoint.GetTSObject(), middlePoint.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder PrependSegment(Dynamic.Tekla.Structures.Geometry3d.Point startPoint)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.PrependSegment(startPoint.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder PrependTangentArc(Dynamic.Tekla.Structures.Geometry3d.Point startPoint)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.PrependTangentArc(startPoint.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder PrependTangentSegment(System.Double length)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.PrependTangentSegment(length));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder Replace(System.Int32 index, Dynamic.Tekla.Structures.Geometry3d.Arc arc)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.Replace(index, arc.GetTSObject()));

		public Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder Replace(System.Int32 index, Dynamic.Tekla.Structures.Geometry3d.LineSegment segment)
			 => new Dynamic.Tekla.Structures.Geometry3d.PolycurveGeometryBuilder(polycurvegeometrybuilder.Replace(index, segment.GetTSObject()));





    }

}
    
