//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class PourObjectFilterExpressions 
    {

        

        dynamic pourobjectfilterexpressions;
        
        public PourObjectFilterExpressions()
        {
            this.pourobjectfilterexpressions =  new Tekla.Structures.Filtering.Categories.PourObjectFilterExpressions();
        }

        public PourObjectFilterExpressions(dynamic tsObject)
        {
            this.pourobjectfilterexpressions = tsObject;

        }


        public dynamic GetTSObject() => pourobjectfilterexpressions;

		public System.Boolean Equals(System.Object obj)
			 => pourobjectfilterexpressions.Equals(obj);

		public System.Int32 GetHashCode()
			 => pourobjectfilterexpressions.GetHashCode();

		public System.Type GetType()
			 => pourobjectfilterexpressions.GetType();

		public System.String ToString()
			 => pourobjectfilterexpressions.ToString();




    public sealed class CustomBoolean 
    {

        

        dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  new Tekla.Structures.Filtering.Categories.CustomBoolean();
        }

        public CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;

        }


        public dynamic GetTSObject() => customboolean;

		public System.String ToString()
			 => customboolean.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customboolean.Equals(obj);

		public System.Int32 GetHashCode()
			 => customboolean.GetHashCode();

		public System.Type GetType()
			 => customboolean.GetType();





    }


    public sealed class CustomDateTime 
    {

        

        dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  new Tekla.Structures.Filtering.Categories.CustomDateTime();
        }

        public CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;

        }


        public dynamic GetTSObject() => customdatetime;

		public System.String ToString()
			 => customdatetime.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customdatetime.Equals(obj);

		public System.Int32 GetHashCode()
			 => customdatetime.GetHashCode();

		public System.Type GetType()
			 => customdatetime.GetType();





    }


    public sealed class CustomNumber 
    {

        

        dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  new Tekla.Structures.Filtering.Categories.CustomNumber();
        }

        public CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;

        }


        public dynamic GetTSObject() => customnumber;

		public System.String ToString()
			 => customnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => customnumber.GetHashCode();

		public System.Type GetType()
			 => customnumber.GetType();





    }


    public sealed class CustomString 
    {

        

        dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  new Tekla.Structures.Filtering.Categories.CustomString();
        }

        public CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;

        }


        public dynamic GetTSObject() => customstring;

		public System.String ToString()
			 => customstring.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customstring.Equals(obj);

		public System.Int32 GetHashCode()
			 => customstring.GetHashCode();

		public System.Type GetType()
			 => customstring.GetType();





    }


    public sealed class PourNumber 
    {

        

        dynamic pournumber;
        
        public PourNumber()
        {
            this.pournumber =  new Tekla.Structures.Filtering.Categories.PourNumber();
        }

        public PourNumber(dynamic tsObject)
        {
            this.pournumber = tsObject;

        }


        public dynamic GetTSObject() => pournumber;

		public System.String ToString()
			 => pournumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => pournumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => pournumber.GetHashCode();

		public System.Type GetType()
			 => pournumber.GetType();





    }


    public sealed class PourType 
    {

        

        dynamic pourtype;
        
        public PourType()
        {
            this.pourtype =  new Tekla.Structures.Filtering.Categories.PourType();
        }

        public PourType(dynamic tsObject)
        {
            this.pourtype = tsObject;

        }


        public dynamic GetTSObject() => pourtype;

		public System.String ToString()
			 => pourtype.ToString();

		public System.Boolean Equals(System.Object obj)
			 => pourtype.Equals(obj);

		public System.Int32 GetHashCode()
			 => pourtype.GetHashCode();

		public System.Type GetType()
			 => pourtype.GetType();





    }


    public sealed class ConcreteMixture 
    {

        

        dynamic concretemixture;
        
        public ConcreteMixture()
        {
            this.concretemixture =  new Tekla.Structures.Filtering.Categories.ConcreteMixture();
        }

        public ConcreteMixture(dynamic tsObject)
        {
            this.concretemixture = tsObject;

        }


        public dynamic GetTSObject() => concretemixture;

		public System.String ToString()
			 => concretemixture.ToString();

		public System.Boolean Equals(System.Object obj)
			 => concretemixture.Equals(obj);

		public System.Int32 GetHashCode()
			 => concretemixture.GetHashCode();

		public System.Type GetType()
			 => concretemixture.GetType();





    }


    public sealed class Material 
    {

        

        dynamic material;
        
        public Material()
        {
            this.material =  new Tekla.Structures.Filtering.Categories.Material();
        }

        public Material(dynamic tsObject)
        {
            this.material = tsObject;

        }


        public dynamic GetTSObject() => material;

		public System.String ToString()
			 => material.ToString();

		public System.Boolean Equals(System.Object obj)
			 => material.Equals(obj);

		public System.Int32 GetHashCode()
			 => material.GetHashCode();

		public System.Type GetType()
			 => material.GetType();





    }


    public sealed class PourPhase 
    {

        

        dynamic pourphase;
        
        public PourPhase()
        {
            this.pourphase =  new Tekla.Structures.Filtering.Categories.PourPhase();
        }

        public PourPhase(dynamic tsObject)
        {
            this.pourphase = tsObject;

        }


        public dynamic GetTSObject() => pourphase;

		public System.String ToString()
			 => pourphase.ToString();

		public System.Boolean Equals(System.Object obj)
			 => pourphase.Equals(obj);

		public System.Int32 GetHashCode()
			 => pourphase.GetHashCode();

		public System.Type GetType()
			 => pourphase.GetType();





    }



    }

}
    
