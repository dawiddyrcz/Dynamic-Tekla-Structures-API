//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class ProjectInfo 
    {

		public System.String Description
		{
			get => projectinfo.Description;
			set { projectinfo.Description = value; }
		}

		public System.String StartDate
		{
			get => projectinfo.StartDate;
			set { projectinfo.StartDate = value; }
		}

		public System.String EndDate
		{
			get => projectinfo.EndDate;
			set { projectinfo.EndDate = value; }
		}

		public System.String Object
		{
			get => projectinfo.Object;
			set { projectinfo.Object = value; }
		}

		public System.String Designer
		{
			get => projectinfo.Designer;
			set { projectinfo.Designer = value; }
		}

		public System.String Location
		{
			get => projectinfo.Location;
			set { projectinfo.Location = value; }
		}

		public System.String Address
		{
			get => projectinfo.Address;
			set { projectinfo.Address = value; }
		}

		public System.String PostalBox
		{
			get => projectinfo.PostalBox;
			set { projectinfo.PostalBox = value; }
		}

		public System.String Town
		{
			get => projectinfo.Town;
			set { projectinfo.Town = value; }
		}

		public System.String Region
		{
			get => projectinfo.Region;
			set { projectinfo.Region = value; }
		}

		public System.String PostalCode
		{
			get => projectinfo.PostalCode;
			set { projectinfo.PostalCode = value; }
		}

		public System.String Country
		{
			get => projectinfo.Country;
			set { projectinfo.Country = value; }
		}

		public System.String Builder
		{
			get => projectinfo.Builder;
			set { projectinfo.Builder = value; }
		}

		public System.String Name
		{
			get => projectinfo.Name;
			set { projectinfo.Name = value; }
		}

		public System.String ProjectNumber
		{
			get => projectinfo.ProjectNumber;
			set { projectinfo.ProjectNumber = value; }
		}

		public System.IO.DirectoryInfo ModelSharingLocalPath
		{
			get => projectinfo.ModelSharingLocalPath;
			set { projectinfo.ModelSharingLocalPath = value; }
		}

		public System.Uri ModelSharingServerPath
		{
			get => projectinfo.ModelSharingServerPath;
			set { projectinfo.ModelSharingServerPath = value; }
		}

		public System.String Info1
		{
			get => projectinfo.Info1;
			set { projectinfo.Info1 = value; }
		}

		public System.String Info2
		{
			get => projectinfo.Info2;
			set { projectinfo.Info2 = value; }
		}

		public System.String GUID
		{
			get => projectinfo.GUID;
			set { projectinfo.GUID = value; }
		}

        

        dynamic projectinfo;
        
        public ProjectInfo()
        {
            this.projectinfo =  new Tekla.Structures.Model.ProjectInfo();
        }

        public ProjectInfo(dynamic tsObject)
        {
            this.projectinfo = tsObject;
			this.Description = projectinfo.Description;
			this.StartDate = projectinfo.StartDate;
			this.EndDate = projectinfo.EndDate;
			this.Object = projectinfo.Object;
			this.Designer = projectinfo.Designer;
			this.Location = projectinfo.Location;
			this.Address = projectinfo.Address;
			this.PostalBox = projectinfo.PostalBox;
			this.Town = projectinfo.Town;
			this.Region = projectinfo.Region;
			this.PostalCode = projectinfo.PostalCode;
			this.Country = projectinfo.Country;
			this.Builder = projectinfo.Builder;
			this.Name = projectinfo.Name;
			this.ProjectNumber = projectinfo.ProjectNumber;
			this.ModelSharingLocalPath = projectinfo.ModelSharingLocalPath;
			this.ModelSharingServerPath = projectinfo.ModelSharingServerPath;
			this.Info1 = projectinfo.Info1;
			this.Info2 = projectinfo.Info2;
			this.GUID = projectinfo.GUID;

        }


        public dynamic GetTSObject() => projectinfo;

		public System.Boolean Modify()
			 => projectinfo.Modify();

		public System.Boolean GetUserProperty(System.String Name, ref System.String Value)
			 => projectinfo.GetUserProperty(Name, ref Value);

		public System.Boolean GetUserProperty(System.String Name, ref System.Int32 Value)
			 => projectinfo.GetUserProperty(Name, ref Value);

		public System.Boolean GetUserProperty(System.String Name, ref System.Double Value)
			 => projectinfo.GetUserProperty(Name, ref Value);

		public System.Boolean SetUserProperty(System.String Name, System.String Value)
			 => projectinfo.SetUserProperty(Name, Value);

		public System.Boolean SetUserProperty(System.String Name, System.Double Value)
			 => projectinfo.SetUserProperty(Name, Value);

		public System.Boolean SetUserProperty(System.String Name, System.Int32 Value)
			 => projectinfo.SetUserProperty(Name, Value);

		public System.Boolean GetIntegerUserProperties(ref System.Collections.Hashtable Values)
			 => projectinfo.GetIntegerUserProperties(ref Values);

		public System.Boolean GetDoubleUserProperties(ref System.Collections.Hashtable Values)
			 => projectinfo.GetDoubleUserProperties(ref Values);

		public System.Boolean GetStringUserProperties(ref System.Collections.Hashtable Values)
			 => projectinfo.GetStringUserProperties(ref Values);

		public System.Boolean GetDynamicStringProperty(System.String Name, ref System.String Value)
			 => projectinfo.GetDynamicStringProperty(Name, ref Value);

		public System.Boolean SetDynamicStringProperty(System.String Name, System.String Value)
			 => projectinfo.SetDynamicStringProperty(Name, Value);

		public System.Collections.Generic.ListTekla.Structures.Model.BasePoint, Tekla.Structures.Model, Version=2019.1.0.0, Culture=neutral, PublicKeyToken=2f04dbe497b71114<Dynamic.Tekla.Structures.Model.BasePoint> GetBasePoints()
			 => projectinfo.GetBasePoints();

		public Dynamic.Tekla.Structures.Model.BasePoint GetBasePointByName(System.String name)
			 => new Dynamic.Tekla.Structures.Model.BasePoint(projectinfo.GetBasePointByName(name));

		public Dynamic.Tekla.Structures.Model.BasePoint GetBasePointByGuid(System.Guid guid)
			 => new Dynamic.Tekla.Structures.Model.BasePoint(projectinfo.GetBasePointByGuid(guid));

		public Dynamic.Tekla.Structures.Model.BasePoint GetCurrentCoordsysBasePoint()
			 => new Dynamic.Tekla.Structures.Model.BasePoint(projectinfo.GetCurrentCoordsysBasePoint());

		public System.Boolean SetCurrentCoordsysToBasePoint(Dynamic.Tekla.Structures.Model.BasePoint basePoint)
			 => projectinfo.SetCurrentCoordsysToBasePoint(basePoint.GetTSObject());

		public Dynamic.Tekla.Structures.Model.BasePoint GetProjectBasePoint()
			 => new Dynamic.Tekla.Structures.Model.BasePoint(projectinfo.GetProjectBasePoint());

		public System.Boolean Equals(System.Object obj)
			 => projectinfo.Equals(obj);

		public System.Int32 GetHashCode()
			 => projectinfo.GetHashCode();

		public System.Type GetType()
			 => projectinfo.GetType();

		public System.String ToString()
			 => projectinfo.ToString();





    }

}
    
