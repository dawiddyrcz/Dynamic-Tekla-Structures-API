//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class RebarGeometry 
    {

		public Dynamic.Tekla.Structures.Geometry3d.PolyLine Shape
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.PolyLine(rebargeometry.Shape.GetTSObject());
			set { rebargeometry.Shape = value.GetTSObject(); }
		}

		public System.Double Diameter
		{
			get => rebargeometry.Diameter;
			set { rebargeometry.Diameter = value; }
		}

		public System.Collections.ArrayList BendingRadiuses
		{
			get => rebargeometry.BendingRadiuses;
			set { rebargeometry.BendingRadiuses = value; }
		}

        

        dynamic rebargeometry;
        
        public RebarGeometry()
        {
            this.rebargeometry =  new Tekla.Structures.Model.RebarGeometry();
        }

        public RebarGeometry(dynamic tsObject)
        {
            this.rebargeometry = tsObject;
			this.Shape = new Dynamic.Tekla.Structures.Geometry3d.PolyLine(rebargeometry.Shape);
			this.Diameter = rebargeometry.Diameter;
			this.BendingRadiuses = rebargeometry.BendingRadiuses;

        }


        public dynamic GetTSObject() => rebargeometry;

		public System.Boolean Equals(System.Object obj)
			 => rebargeometry.Equals(obj);

		public System.Int32 GetHashCode()
			 => rebargeometry.GetHashCode();

		public System.Type GetType()
			 => rebargeometry.GetType();

		public System.String ToString()
			 => rebargeometry.ToString();





    }

}
    
