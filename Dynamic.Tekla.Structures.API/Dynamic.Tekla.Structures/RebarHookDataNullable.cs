//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class RebarHookDataNullable 
    {

		public System.Nullable<Dynamic.Tekla.Structures.Model.RebarHookShapeEnum> Shape
		{
			get => rebarhookdatanullable.Shape;
			set { rebarhookdatanullable.Shape = value; }
		}

		public System.Nullable<System.Double> Angle
		{
			get => rebarhookdatanullable.Angle;
			set { rebarhookdatanullable.Angle = value; }
		}

		public System.Nullable<System.Double> Radius
		{
			get => rebarhookdatanullable.Radius;
			set { rebarhookdatanullable.Radius = value; }
		}

		public System.Nullable<System.Double> Length
		{
			get => rebarhookdatanullable.Length;
			set { rebarhookdatanullable.Length = value; }
		}

		public System.Nullable<System.Double> Rotation
		{
			get => rebarhookdatanullable.Rotation;
			set { rebarhookdatanullable.Rotation = value; }
		}

        

        dynamic rebarhookdatanullable;
        
        public RebarHookDataNullable()
        {
            this.rebarhookdatanullable =  new Tekla.Structures.Model.RebarHookDataNullable();
        }

        public RebarHookDataNullable(dynamic tsObject)
        {
            this.rebarhookdatanullable = tsObject;
			this.Shape = rebarhookdatanullable.Shape;
			this.Angle = rebarhookdatanullable.Angle;
			this.Radius = rebarhookdatanullable.Radius;
			this.Length = rebarhookdatanullable.Length;
			this.Rotation = rebarhookdatanullable.Rotation;

        }


        public dynamic GetTSObject() => rebarhookdatanullable;

		public System.Boolean Equals(System.Object obj)
			 => rebarhookdatanullable.Equals(obj);

		public System.Int32 GetHashCode()
			 => rebarhookdatanullable.GetHashCode();

		public System.Type GetType()
			 => rebarhookdatanullable.GetType();

		public System.String ToString()
			 => rebarhookdatanullable.ToString();





    }

}
    
