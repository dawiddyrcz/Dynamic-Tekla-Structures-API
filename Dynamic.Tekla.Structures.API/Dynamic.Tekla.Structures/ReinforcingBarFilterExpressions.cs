//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class ReinforcingBarFilterExpressions 
    {

        

        dynamic reinforcingbarfilterexpressions;
        
        public ReinforcingBarFilterExpressions()
        {
            this.reinforcingbarfilterexpressions =  new Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions();
        }

        public ReinforcingBarFilterExpressions(dynamic tsObject)
        {
            this.reinforcingbarfilterexpressions = tsObject;

        }


        public dynamic GetTSObject() => reinforcingbarfilterexpressions;

		public System.Boolean Equals(System.Object obj)
			 => reinforcingbarfilterexpressions.Equals(obj);

		public System.Int32 GetHashCode()
			 => reinforcingbarfilterexpressions.GetHashCode();

		public System.Type GetType()
			 => reinforcingbarfilterexpressions.GetType();

		public System.String ToString()
			 => reinforcingbarfilterexpressions.ToString();




    public sealed class CustomBoolean 
    {

        

        dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  new Tekla.Structures.Filtering.Categories.CustomBoolean();
        }

        public CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;

        }


        public dynamic GetTSObject() => customboolean;

		public System.String ToString()
			 => customboolean.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customboolean.Equals(obj);

		public System.Int32 GetHashCode()
			 => customboolean.GetHashCode();

		public System.Type GetType()
			 => customboolean.GetType();





    }


    public sealed class CustomDateTime 
    {

        

        dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  new Tekla.Structures.Filtering.Categories.CustomDateTime();
        }

        public CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;

        }


        public dynamic GetTSObject() => customdatetime;

		public System.String ToString()
			 => customdatetime.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customdatetime.Equals(obj);

		public System.Int32 GetHashCode()
			 => customdatetime.GetHashCode();

		public System.Type GetType()
			 => customdatetime.GetType();





    }


    public sealed class CustomNumber 
    {

        

        dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  new Tekla.Structures.Filtering.Categories.CustomNumber();
        }

        public CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;

        }


        public dynamic GetTSObject() => customnumber;

		public System.String ToString()
			 => customnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => customnumber.GetHashCode();

		public System.Type GetType()
			 => customnumber.GetType();





    }


    public sealed class CustomString 
    {

        

        dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  new Tekla.Structures.Filtering.Categories.CustomString();
        }

        public CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;

        }


        public dynamic GetTSObject() => customstring;

		public System.String ToString()
			 => customstring.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customstring.Equals(obj);

		public System.Int32 GetHashCode()
			 => customstring.GetHashCode();

		public System.Type GetType()
			 => customstring.GetType();





    }


    public sealed class Class 
    {

        

        dynamic @class;
        
        public Class()
        {
            this.@class =  new Tekla.Structures.Filtering.Categories.Class();
        }

        public Class(dynamic tsObject)
        {
            this.@class = tsObject;

        }


        public dynamic GetTSObject() => @class;

		public System.String ToString()
			 => @class.ToString();

		public System.Boolean Equals(System.Object obj)
			 => @class.Equals(obj);

		public System.Int32 GetHashCode()
			 => @class.GetHashCode();

		public System.Type GetType()
			 => @class.GetType();





    }


    public sealed class Diameter 
    {

        

        dynamic diameter;
        
        public Diameter()
        {
            this.diameter =  new Tekla.Structures.Filtering.Categories.Diameter();
        }

        public Diameter(dynamic tsObject)
        {
            this.diameter = tsObject;

        }


        public dynamic GetTSObject() => diameter;

		public System.String ToString()
			 => diameter.ToString();

		public System.Boolean Equals(System.Object obj)
			 => diameter.Equals(obj);

		public System.Int32 GetHashCode()
			 => diameter.GetHashCode();

		public System.Type GetType()
			 => diameter.GetType();





    }


    public sealed class JoinType 
    {

        

        dynamic jointype;
        
        public JoinType()
        {
            this.jointype =  new Tekla.Structures.Filtering.Categories.JoinType();
        }

        public JoinType(dynamic tsObject)
        {
            this.jointype = tsObject;

        }


        public dynamic GetTSObject() => jointype;

		public System.String ToString()
			 => jointype.ToString();

		public System.Boolean Equals(System.Object obj)
			 => jointype.Equals(obj);

		public System.Int32 GetHashCode()
			 => jointype.GetHashCode();

		public System.Type GetType()
			 => jointype.GetType();





    }


    public sealed class Length 
    {

        

        dynamic length;
        
        public Length()
        {
            this.length =  new Tekla.Structures.Filtering.Categories.Length();
        }

        public Length(dynamic tsObject)
        {
            this.length = tsObject;

        }


        public dynamic GetTSObject() => length;

		public System.String ToString()
			 => length.ToString();

		public System.Boolean Equals(System.Object obj)
			 => length.Equals(obj);

		public System.Int32 GetHashCode()
			 => length.GetHashCode();

		public System.Type GetType()
			 => length.GetType();





    }


    public sealed class Material 
    {

        

        dynamic material;
        
        public Material()
        {
            this.material =  new Tekla.Structures.Filtering.Categories.Material();
        }

        public Material(dynamic tsObject)
        {
            this.material = tsObject;

        }


        public dynamic GetTSObject() => material;

		public System.String ToString()
			 => material.ToString();

		public System.Boolean Equals(System.Object obj)
			 => material.Equals(obj);

		public System.Int32 GetHashCode()
			 => material.GetHashCode();

		public System.Type GetType()
			 => material.GetType();





    }


    public sealed class Name 
    {

        

        dynamic name;
        
        public Name()
        {
            this.name =  new Tekla.Structures.Filtering.Categories.Name();
        }

        public Name(dynamic tsObject)
        {
            this.name = tsObject;

        }


        public dynamic GetTSObject() => name;

		public System.String ToString()
			 => name.ToString();

		public System.Boolean Equals(System.Object obj)
			 => name.Equals(obj);

		public System.Int32 GetHashCode()
			 => name.GetHashCode();

		public System.Type GetType()
			 => name.GetType();





    }


    public sealed class NumberingSeries 
    {

        

        dynamic numberingseries;
        
        public NumberingSeries()
        {
            this.numberingseries =  new Tekla.Structures.Filtering.Categories.NumberingSeries();
        }

        public NumberingSeries(dynamic tsObject)
        {
            this.numberingseries = tsObject;

        }


        public dynamic GetTSObject() => numberingseries;

		public System.String ToString()
			 => numberingseries.ToString();

		public System.Boolean Equals(System.Object obj)
			 => numberingseries.Equals(obj);

		public System.Int32 GetHashCode()
			 => numberingseries.GetHashCode();

		public System.Type GetType()
			 => numberingseries.GetType();





    }


    public sealed class Phase 
    {

        

        dynamic phase;
        
        public Phase()
        {
            this.phase =  new Tekla.Structures.Filtering.Categories.Phase();
        }

        public Phase(dynamic tsObject)
        {
            this.phase = tsObject;

        }


        public dynamic GetTSObject() => phase;

		public System.String ToString()
			 => phase.ToString();

		public System.Boolean Equals(System.Object obj)
			 => phase.Equals(obj);

		public System.Int32 GetHashCode()
			 => phase.GetHashCode();

		public System.Type GetType()
			 => phase.GetType();





    }


    public sealed class Position 
    {

        

        dynamic position;
        
        public Position()
        {
            this.position =  new Tekla.Structures.Filtering.Categories.Position();
        }

        public Position(dynamic tsObject)
        {
            this.position = tsObject;

        }


        public dynamic GetTSObject() => position;

		public System.String ToString()
			 => position.ToString();

		public System.Boolean Equals(System.Object obj)
			 => position.Equals(obj);

		public System.Int32 GetHashCode()
			 => position.GetHashCode();

		public System.Type GetType()
			 => position.GetType();





    }


    public sealed class PositionNumber 
    {

        

        dynamic positionnumber;
        
        public PositionNumber()
        {
            this.positionnumber =  new Tekla.Structures.Filtering.Categories.PositionNumber();
        }

        public PositionNumber(dynamic tsObject)
        {
            this.positionnumber = tsObject;

        }


        public dynamic GetTSObject() => positionnumber;

		public System.String ToString()
			 => positionnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => positionnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => positionnumber.GetHashCode();

		public System.Type GetType()
			 => positionnumber.GetType();





    }


    public sealed class Prefix 
    {

        

        dynamic prefix;
        
        public Prefix()
        {
            this.prefix =  new Tekla.Structures.Filtering.Categories.Prefix();
        }

        public Prefix(dynamic tsObject)
        {
            this.prefix = tsObject;

        }


        public dynamic GetTSObject() => prefix;

		public System.String ToString()
			 => prefix.ToString();

		public System.Boolean Equals(System.Object obj)
			 => prefix.Equals(obj);

		public System.Int32 GetHashCode()
			 => prefix.GetHashCode();

		public System.Type GetType()
			 => prefix.GetType();





    }


    public sealed class Shape 
    {

        

        dynamic shape;
        
        public Shape()
        {
            this.shape =  new Tekla.Structures.Filtering.Categories.Shape();
        }

        public Shape(dynamic tsObject)
        {
            this.shape = tsObject;

        }


        public dynamic GetTSObject() => shape;

		public System.String ToString()
			 => shape.ToString();

		public System.Boolean Equals(System.Object obj)
			 => shape.Equals(obj);

		public System.Int32 GetHashCode()
			 => shape.GetHashCode();

		public System.Type GetType()
			 => shape.GetType();





    }


    public sealed class Size 
    {

        

        dynamic size;
        
        public Size()
        {
            this.size =  new Tekla.Structures.Filtering.Categories.Size();
        }

        public Size(dynamic tsObject)
        {
            this.size = tsObject;

        }


        public dynamic GetTSObject() => size;

		public System.String ToString()
			 => size.ToString();

		public System.Boolean Equals(System.Object obj)
			 => size.Equals(obj);

		public System.Int32 GetHashCode()
			 => size.GetHashCode();

		public System.Type GetType()
			 => size.GetType();





    }


    public sealed class StartNumber 
    {

        

        dynamic startnumber;
        
        public StartNumber()
        {
            this.startnumber =  new Tekla.Structures.Filtering.Categories.StartNumber();
        }

        public StartNumber(dynamic tsObject)
        {
            this.startnumber = tsObject;

        }


        public dynamic GetTSObject() => startnumber;

		public System.String ToString()
			 => startnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => startnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => startnumber.GetHashCode();

		public System.Type GetType()
			 => startnumber.GetType();





    }



    }

}
    
