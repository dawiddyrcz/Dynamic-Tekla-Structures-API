//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class TaskFilterExpressions 
    {

        

        dynamic taskfilterexpressions;
        
        public TaskFilterExpressions()
        {
            this.taskfilterexpressions =  new Tekla.Structures.Filtering.Categories.TaskFilterExpressions();
        }

        public TaskFilterExpressions(dynamic tsObject)
        {
            this.taskfilterexpressions = tsObject;

        }


        public dynamic GetTSObject() => taskfilterexpressions;

		public System.Boolean Equals(System.Object obj)
			 => taskfilterexpressions.Equals(obj);

		public System.Int32 GetHashCode()
			 => taskfilterexpressions.GetHashCode();

		public System.Type GetType()
			 => taskfilterexpressions.GetType();

		public System.String ToString()
			 => taskfilterexpressions.ToString();




    public sealed class CustomBoolean 
    {

        

        dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  new Tekla.Structures.Filtering.Categories.CustomBoolean();
        }

        public CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;

        }


        public dynamic GetTSObject() => customboolean;

		public System.String ToString()
			 => customboolean.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customboolean.Equals(obj);

		public System.Int32 GetHashCode()
			 => customboolean.GetHashCode();

		public System.Type GetType()
			 => customboolean.GetType();





    }


    public sealed class CustomDateTime 
    {

        

        dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  new Tekla.Structures.Filtering.Categories.CustomDateTime();
        }

        public CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;

        }


        public dynamic GetTSObject() => customdatetime;

		public System.String ToString()
			 => customdatetime.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customdatetime.Equals(obj);

		public System.Int32 GetHashCode()
			 => customdatetime.GetHashCode();

		public System.Type GetType()
			 => customdatetime.GetType();





    }


    public sealed class CustomNumber 
    {

        

        dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  new Tekla.Structures.Filtering.Categories.CustomNumber();
        }

        public CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;

        }


        public dynamic GetTSObject() => customnumber;

		public System.String ToString()
			 => customnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => customnumber.GetHashCode();

		public System.Type GetType()
			 => customnumber.GetType();





    }


    public sealed class CustomString 
    {

        

        dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  new Tekla.Structures.Filtering.Categories.CustomString();
        }

        public CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;

        }


        public dynamic GetTSObject() => customstring;

		public System.String ToString()
			 => customstring.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customstring.Equals(obj);

		public System.Int32 GetHashCode()
			 => customstring.GetHashCode();

		public System.Type GetType()
			 => customstring.GetType();





    }


    public sealed class ActualEndDate 
    {

        

        dynamic actualenddate;
        
        public ActualEndDate()
        {
            this.actualenddate =  new Tekla.Structures.Filtering.Categories.ActualEndDate();
        }

        public ActualEndDate(dynamic tsObject)
        {
            this.actualenddate = tsObject;

        }


        public dynamic GetTSObject() => actualenddate;

		public System.String ToString()
			 => actualenddate.ToString();

		public System.Boolean Equals(System.Object obj)
			 => actualenddate.Equals(obj);

		public System.Int32 GetHashCode()
			 => actualenddate.GetHashCode();

		public System.Type GetType()
			 => actualenddate.GetType();





    }


    public sealed class ActualStartDate 
    {

        

        dynamic actualstartdate;
        
        public ActualStartDate()
        {
            this.actualstartdate =  new Tekla.Structures.Filtering.Categories.ActualStartDate();
        }

        public ActualStartDate(dynamic tsObject)
        {
            this.actualstartdate = tsObject;

        }


        public dynamic GetTSObject() => actualstartdate;

		public System.String ToString()
			 => actualstartdate.ToString();

		public System.Boolean Equals(System.Object obj)
			 => actualstartdate.Equals(obj);

		public System.Int32 GetHashCode()
			 => actualstartdate.GetHashCode();

		public System.Type GetType()
			 => actualstartdate.GetType();





    }


    public sealed class Completeness 
    {

        

        dynamic completeness;
        
        public Completeness()
        {
            this.completeness =  new Tekla.Structures.Filtering.Categories.Completeness();
        }

        public Completeness(dynamic tsObject)
        {
            this.completeness = tsObject;

        }


        public dynamic GetTSObject() => completeness;

		public System.String ToString()
			 => completeness.ToString();

		public System.Boolean Equals(System.Object obj)
			 => completeness.Equals(obj);

		public System.Int32 GetHashCode()
			 => completeness.GetHashCode();

		public System.Type GetType()
			 => completeness.GetType();





    }


    public sealed class Critical 
    {

        

        dynamic critical;
        
        public Critical()
        {
            this.critical =  new Tekla.Structures.Filtering.Categories.Critical();
        }

        public Critical(dynamic tsObject)
        {
            this.critical = tsObject;

        }


        public dynamic GetTSObject() => critical;

		public System.String ToString()
			 => critical.ToString();

		public System.Boolean Equals(System.Object obj)
			 => critical.Equals(obj);

		public System.Int32 GetHashCode()
			 => critical.GetHashCode();

		public System.Type GetType()
			 => critical.GetType();





    }


    public sealed class Local 
    {

        

        dynamic local;
        
        public Local()
        {
            this.local =  new Tekla.Structures.Filtering.Categories.Local();
        }

        public Local(dynamic tsObject)
        {
            this.local = tsObject;

        }


        public dynamic GetTSObject() => local;

		public System.String ToString()
			 => local.ToString();

		public System.Boolean Equals(System.Object obj)
			 => local.Equals(obj);

		public System.Int32 GetHashCode()
			 => local.GetHashCode();

		public System.Type GetType()
			 => local.GetType();





    }


    public sealed class Name 
    {

        

        dynamic name;
        
        public Name()
        {
            this.name =  new Tekla.Structures.Filtering.Categories.Name();
        }

        public Name(dynamic tsObject)
        {
            this.name = tsObject;

        }


        public dynamic GetTSObject() => name;

		public System.String ToString()
			 => name.ToString();

		public System.Boolean Equals(System.Object obj)
			 => name.Equals(obj);

		public System.Int32 GetHashCode()
			 => name.GetHashCode();

		public System.Type GetType()
			 => name.GetType();





    }


    public sealed class PlannedEndDate 
    {

        

        dynamic plannedenddate;
        
        public PlannedEndDate()
        {
            this.plannedenddate =  new Tekla.Structures.Filtering.Categories.PlannedEndDate();
        }

        public PlannedEndDate(dynamic tsObject)
        {
            this.plannedenddate = tsObject;

        }


        public dynamic GetTSObject() => plannedenddate;

		public System.String ToString()
			 => plannedenddate.ToString();

		public System.Boolean Equals(System.Object obj)
			 => plannedenddate.Equals(obj);

		public System.Int32 GetHashCode()
			 => plannedenddate.GetHashCode();

		public System.Type GetType()
			 => plannedenddate.GetType();





    }


    public sealed class PlannedStartDate 
    {

        

        dynamic plannedstartdate;
        
        public PlannedStartDate()
        {
            this.plannedstartdate =  new Tekla.Structures.Filtering.Categories.PlannedStartDate();
        }

        public PlannedStartDate(dynamic tsObject)
        {
            this.plannedstartdate = tsObject;

        }


        public dynamic GetTSObject() => plannedstartdate;

		public System.String ToString()
			 => plannedstartdate.ToString();

		public System.Boolean Equals(System.Object obj)
			 => plannedstartdate.Equals(obj);

		public System.Int32 GetHashCode()
			 => plannedstartdate.GetHashCode();

		public System.Type GetType()
			 => plannedstartdate.GetType();





    }



    }

}
    
