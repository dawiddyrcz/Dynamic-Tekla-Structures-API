//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class AssemblyFilterExpressions 
    {

        

        internal dynamic assemblyfilterexpressions;
        
        public AssemblyFilterExpressions()
        {
            this.assemblyfilterexpressions =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions");
        }

        internal AssemblyFilterExpressions(dynamic tsObject)
        {
            this.assemblyfilterexpressions = tsObject;
        }




    public sealed class CustomBoolean 
    {

        

        internal dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.CustomBoolean");
        }

        internal CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;
        }





    }

    internal static class CustomBoolean_
    {
        public static dynamic GetTSObject(CustomBoolean dynObject)
        {
            return dynObject.customboolean;
        }

        public static CustomBoolean FromTSObject(dynamic tsObject)
        {
            return new CustomBoolean(tsObject);
        }
    }



    public sealed class CustomDateTime 
    {

        

        internal dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.CustomDateTime");
        }

        internal CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;
        }





    }

    internal static class CustomDateTime_
    {
        public static dynamic GetTSObject(CustomDateTime dynObject)
        {
            return dynObject.customdatetime;
        }

        public static CustomDateTime FromTSObject(dynamic tsObject)
        {
            return new CustomDateTime(tsObject);
        }
    }



    public sealed class CustomNumber 
    {

        

        internal dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.CustomNumber");
        }

        internal CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;
        }





    }

    internal static class CustomNumber_
    {
        public static dynamic GetTSObject(CustomNumber dynObject)
        {
            return dynObject.customnumber;
        }

        public static CustomNumber FromTSObject(dynamic tsObject)
        {
            return new CustomNumber(tsObject);
        }
    }



    public sealed class CustomString 
    {

        

        internal dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.CustomString");
        }

        internal CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;
        }





    }

    internal static class CustomString_
    {
        public static dynamic GetTSObject(CustomString dynObject)
        {
            return dynObject.customstring;
        }

        public static CustomString FromTSObject(dynamic tsObject)
        {
            return new CustomString(tsObject);
        }
    }



    public sealed class IdNumber 
    {

        

        internal dynamic idnumber;
        
        public IdNumber()
        {
            this.idnumber =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.IdNumber");
        }

        internal IdNumber(dynamic tsObject)
        {
            this.idnumber = tsObject;
        }





    }

    internal static class IdNumber_
    {
        public static dynamic GetTSObject(IdNumber dynObject)
        {
            return dynObject.idnumber;
        }

        public static IdNumber FromTSObject(dynamic tsObject)
        {
            return new IdNumber(tsObject);
        }
    }



    public sealed class Guid 
    {

        

        internal dynamic guid;
        
        public Guid()
        {
            this.guid =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.Guid");
        }

        internal Guid(dynamic tsObject)
        {
            this.guid = tsObject;
        }





    }

    internal static class Guid_
    {
        public static dynamic GetTSObject(Guid dynObject)
        {
            return dynObject.guid;
        }

        public static Guid FromTSObject(dynamic tsObject)
        {
            return new Guid(tsObject);
        }
    }



    public sealed class Level 
    {

        

        internal dynamic level;
        
        public Level()
        {
            this.level =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.Level");
        }

        internal Level(dynamic tsObject)
        {
            this.level = tsObject;
        }





    }

    internal static class Level_
    {
        public static dynamic GetTSObject(Level dynObject)
        {
            return dynObject.level;
        }

        public static Level FromTSObject(dynamic tsObject)
        {
            return new Level(tsObject);
        }
    }



    public sealed class Name 
    {

        

        internal dynamic name;
        
        public Name()
        {
            this.name =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.Name");
        }

        internal Name(dynamic tsObject)
        {
            this.name = tsObject;
        }





    }

    internal static class Name_
    {
        public static dynamic GetTSObject(Name dynObject)
        {
            return dynObject.name;
        }

        public static Name FromTSObject(dynamic tsObject)
        {
            return new Name(tsObject);
        }
    }



    public sealed class Phase 
    {

        

        internal dynamic phase;
        
        public Phase()
        {
            this.phase =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.Phase");
        }

        internal Phase(dynamic tsObject)
        {
            this.phase = tsObject;
        }





    }

    internal static class Phase_
    {
        public static dynamic GetTSObject(Phase dynObject)
        {
            return dynObject.phase;
        }

        public static Phase FromTSObject(dynamic tsObject)
        {
            return new Phase(tsObject);
        }
    }



    public sealed class PositionNumber 
    {

        

        internal dynamic positionnumber;
        
        public PositionNumber()
        {
            this.positionnumber =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.PositionNumber");
        }

        internal PositionNumber(dynamic tsObject)
        {
            this.positionnumber = tsObject;
        }





    }

    internal static class PositionNumber_
    {
        public static dynamic GetTSObject(PositionNumber dynObject)
        {
            return dynObject.positionnumber;
        }

        public static PositionNumber FromTSObject(dynamic tsObject)
        {
            return new PositionNumber(tsObject);
        }
    }



    public sealed class Prefix 
    {

        

        internal dynamic prefix;
        
        public Prefix()
        {
            this.prefix =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.Prefix");
        }

        internal Prefix(dynamic tsObject)
        {
            this.prefix = tsObject;
        }





    }

    internal static class Prefix_
    {
        public static dynamic GetTSObject(Prefix dynObject)
        {
            return dynObject.prefix;
        }

        public static Prefix FromTSObject(dynamic tsObject)
        {
            return new Prefix(tsObject);
        }
    }



    public sealed class Series 
    {

        

        internal dynamic series;
        
        public Series()
        {
            this.series =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.Series");
        }

        internal Series(dynamic tsObject)
        {
            this.series = tsObject;
        }





    }

    internal static class Series_
    {
        public static dynamic GetTSObject(Series dynObject)
        {
            return dynObject.series;
        }

        public static Series FromTSObject(dynamic tsObject)
        {
            return new Series(tsObject);
        }
    }



    public sealed class StartNumber 
    {

        

        internal dynamic startnumber;
        
        public StartNumber()
        {
            this.startnumber =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.StartNumber");
        }

        internal StartNumber(dynamic tsObject)
        {
            this.startnumber = tsObject;
        }





    }

    internal static class StartNumber_
    {
        public static dynamic GetTSObject(StartNumber dynObject)
        {
            return dynObject.startnumber;
        }

        public static StartNumber FromTSObject(dynamic tsObject)
        {
            return new StartNumber(tsObject);
        }
    }



    public sealed class Type 
    {

        

        internal dynamic type;
        
        public Type()
        {
            this.type =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.Type");
        }

        internal Type(dynamic tsObject)
        {
            this.type = tsObject;
        }





    }

    internal static class Type_
    {
        public static dynamic GetTSObject(Type dynObject)
        {
            return dynObject.type;
        }

        public static Type FromTSObject(dynamic tsObject)
        {
            return new Type(tsObject);
        }
    }




    }

    internal static class AssemblyFilterExpressions_
    {
        public static dynamic GetTSObject(AssemblyFilterExpressions dynObject)
        {
            return dynObject.assemblyfilterexpressions;
        }

        public static AssemblyFilterExpressions FromTSObject(dynamic tsObject)
        {
            return new AssemblyFilterExpressions(tsObject);
        }
    }


}
    
