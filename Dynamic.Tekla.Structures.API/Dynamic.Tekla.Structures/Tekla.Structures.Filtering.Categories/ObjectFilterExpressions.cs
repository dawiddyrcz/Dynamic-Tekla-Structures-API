//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class ObjectFilterExpressions 
    {

        

        dynamic objectfilterexpressions;
        
        public ObjectFilterExpressions()
        {
            this.objectfilterexpressions =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.ObjectFilterExpressions");
        }

        public ObjectFilterExpressions(dynamic tsObject)
        {
            this.objectfilterexpressions = tsObject;
        }

        internal dynamic GetTSObject() => objectfilterexpressions;




    public sealed class CustomBoolean 
    {

        

        dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.CustomBoolean");
        }

        public CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;
        }

        internal dynamic GetTSObject() => customboolean;





    }


    public sealed class CustomDateTime 
    {

        

        dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.CustomDateTime");
        }

        public CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;
        }

        internal dynamic GetTSObject() => customdatetime;





    }


    public sealed class CustomNumber 
    {

        

        dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.CustomNumber");
        }

        public CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;
        }

        internal dynamic GetTSObject() => customnumber;





    }


    public sealed class CustomString 
    {

        

        dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.CustomString");
        }

        public CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;
        }

        internal dynamic GetTSObject() => customstring;





    }


    public sealed class Guid 
    {

        

        dynamic guid;
        
        public Guid()
        {
            this.guid =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.Guid");
        }

        public Guid(dynamic tsObject)
        {
            this.guid = tsObject;
        }

        internal dynamic GetTSObject() => guid;





    }


    public sealed class IdNumber 
    {

        

        dynamic idnumber;
        
        public IdNumber()
        {
            this.idnumber =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.IdNumber");
        }

        public IdNumber(dynamic tsObject)
        {
            this.idnumber = tsObject;
        }

        internal dynamic GetTSObject() => idnumber;





    }


    public sealed class IsComponent 
    {

        

        dynamic iscomponent;
        
        public IsComponent()
        {
            this.iscomponent =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.IsComponent");
        }

        public IsComponent(dynamic tsObject)
        {
            this.iscomponent = tsObject;
        }

        internal dynamic GetTSObject() => iscomponent;





    }


    public sealed class Phase 
    {

        

        dynamic phase;
        
        public Phase()
        {
            this.phase =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.Phase");
        }

        public Phase(dynamic tsObject)
        {
            this.phase = tsObject;
        }

        internal dynamic GetTSObject() => phase;





    }


    public sealed class Type 
    {

        

        dynamic type;
        
        public Type()
        {
            this.type =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.Type");
        }

        public Type(dynamic tsObject)
        {
            this.type = tsObject;
        }

        internal dynamic GetTSObject() => type;





    }



    }

}
    
