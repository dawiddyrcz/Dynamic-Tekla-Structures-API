//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class PourObjectFilterExpressions 
    {

        

        dynamic pourobjectfilterexpressions;
        
        public PourObjectFilterExpressions()
        {
            this.pourobjectfilterexpressions =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.PourObjectFilterExpressions");
        }

        public PourObjectFilterExpressions(dynamic tsObject)
        {
            this.pourobjectfilterexpressions = tsObject;

        }


        public dynamic GetTSObject() => pourobjectfilterexpressions;




    public sealed class CustomBoolean 
    {

        

        dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.CustomBoolean");
        }

        public CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;

        }


        public dynamic GetTSObject() => customboolean;





    }


    public sealed class CustomDateTime 
    {

        

        dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.CustomDateTime");
        }

        public CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;

        }


        public dynamic GetTSObject() => customdatetime;





    }


    public sealed class CustomNumber 
    {

        

        dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.CustomNumber");
        }

        public CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;

        }


        public dynamic GetTSObject() => customnumber;





    }


    public sealed class CustomString 
    {

        

        dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.CustomString");
        }

        public CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;

        }


        public dynamic GetTSObject() => customstring;





    }


    public sealed class PourNumber 
    {

        

        dynamic pournumber;
        
        public PourNumber()
        {
            this.pournumber =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.PourNumber");
        }

        public PourNumber(dynamic tsObject)
        {
            this.pournumber = tsObject;

        }


        public dynamic GetTSObject() => pournumber;





    }


    public sealed class PourType 
    {

        

        dynamic pourtype;
        
        public PourType()
        {
            this.pourtype =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.PourType");
        }

        public PourType(dynamic tsObject)
        {
            this.pourtype = tsObject;

        }


        public dynamic GetTSObject() => pourtype;





    }


    public sealed class ConcreteMixture 
    {

        

        dynamic concretemixture;
        
        public ConcreteMixture()
        {
            this.concretemixture =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.ConcreteMixture");
        }

        public ConcreteMixture(dynamic tsObject)
        {
            this.concretemixture = tsObject;

        }


        public dynamic GetTSObject() => concretemixture;





    }


    public sealed class Material 
    {

        

        dynamic material;
        
        public Material()
        {
            this.material =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.Material");
        }

        public Material(dynamic tsObject)
        {
            this.material = tsObject;

        }


        public dynamic GetTSObject() => material;





    }


    public sealed class PourPhase 
    {

        

        dynamic pourphase;
        
        public PourPhase()
        {
            this.pourphase =  TSActivator.CreateInstance("Tekla.Structures.Filtering.Categories.PourPhase");
        }

        public PourPhase(dynamic tsObject)
        {
            this.pourphase = tsObject;

        }


        public dynamic GetTSObject() => pourphase;





    }



    }

}
    
