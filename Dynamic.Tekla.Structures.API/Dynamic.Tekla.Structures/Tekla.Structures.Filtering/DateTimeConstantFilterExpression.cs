//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering
{

    public  class DateTimeConstantFilterExpression  : Dynamic.Tekla.Structures.Filtering.DataFilterExpression
    {

        

        

		public DateTimeConstantFilterExpression() {}
		public DateTimeConstantFilterExpression(System.DateTime Value)
		{
			var args = new object[1];
			args[0] = Value;
			this.teklaObject = TSActivator.CreateInstance("Tekla.Structures.Filtering.DateTimeConstantFilterExpression", args);
		}
		public DateTimeConstantFilterExpression(System.Collections.Generic.IEnumerable<System.DateTime> Values)
		{
			var args = new object[1];
			args[0] = Values;
			this.teklaObject = TSActivator.CreateInstance("Tekla.Structures.Filtering.DateTimeConstantFilterExpression", args);
		}
		public DateTimeConstantFilterExpression(System.DateTime Value, System.IFormatProvider Provider)
		{
			var args = new object[2];
			args[0] = Value;
			args[1] = Provider;
			this.teklaObject = TSActivator.CreateInstance("Tekla.Structures.Filtering.DateTimeConstantFilterExpression", args);
		}
		public DateTimeConstantFilterExpression(System.Collections.Generic.IEnumerable<System.DateTime> Values, System.IFormatProvider Provider)
		{
			var args = new object[2];
			args[0] = Values;
			args[1] = Provider;
			this.teklaObject = TSActivator.CreateInstance("Tekla.Structures.Filtering.DateTimeConstantFilterExpression", args);
		}





    }

    internal static class DateTimeConstantFilterExpression_
    {
        public static dynamic GetTSObject(DateTimeConstantFilterExpression dynObject)
        {
            return dynObject.teklaObject;
        }

        public static DateTimeConstantFilterExpression FromTSObject(dynamic tsObject)
        {
            var typeName = "Dynamic." + tsObject.GetType().FullName;
            var type = System.Reflection.Assembly.GetExecutingAssembly().GetType(typeName);
            var dynObject = (Tekla.Structures.Filtering.DateTimeConstantFilterExpression)System.Activator.CreateInstance(type);
            dynObject.teklaObject = tsObject;
            return dynObject;
        }
    }


}
    
