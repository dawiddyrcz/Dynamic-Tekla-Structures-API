//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public sealed class Arc 
    {

		public System.Double Length
		{
			get => arc.Length;
			set { arc.Length = value; }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point StartPoint
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(arc.StartPoint);
			set { arc.StartPoint = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point EndPoint
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(arc.EndPoint);
			set { arc.EndPoint = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point CenterPoint
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(arc.CenterPoint);
			set { arc.CenterPoint = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point ArcMiddlePoint
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(arc.ArcMiddlePoint);
			set { arc.ArcMiddlePoint = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector Normal
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(arc.Normal);
			set { arc.Normal = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

		public System.Double Angle
		{
			get => arc.Angle;
			set { arc.Angle = value; }
		}

		public System.Double Radius
		{
			get => arc.Radius;
			set { arc.Radius = value; }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector StartTangent
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(arc.StartTangent);
			set { arc.StartTangent = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector StartDirection
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(arc.StartDirection);
			set { arc.StartDirection = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

        

        internal dynamic arc;
        
        public Arc()
        {
            this.arc =  TSActivator.CreateInstance("Tekla.Structures.Geometry3d.Arc");
        }

        internal Arc(dynamic tsObject)
        {
            this.arc = tsObject;
        }





    }

    internal static class Arc_
    {
        public static dynamic GetTSObject(Arc dynObject)
        {
            return dynObject.arc;
        }

        public static Arc FromTSObject(dynamic tsObject)
        {
            return new Arc(tsObject);
        }
    }


}
    
