//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public sealed class GeometricPlane 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Point Origin
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(geometricplane.Origin);
			set { geometricplane.Origin = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector Normal
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(geometricplane.Normal);
			set { geometricplane.Normal = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

        

        internal dynamic geometricplane;
        
        public GeometricPlane()
        {
            this.geometricplane =  TSActivator.CreateInstance("Tekla.Structures.Geometry3d.GeometricPlane");
        }

        internal GeometricPlane(dynamic tsObject)
        {
            this.geometricplane = tsObject;
        }

		public Dynamic.Tekla.Structures.Geometry3d.Vector GetNormal()
			 => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(geometricplane.GetNormal());





    }

    internal static class GeometricPlane_
    {
        public static dynamic GetTSObject(GeometricPlane dynObject)
        {
            return dynObject.geometricplane;
        }

        public static GeometricPlane FromTSObject(dynamic tsObject)
        {
            return new GeometricPlane(tsObject);
        }
    }


}
    
