//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public sealed class IndirectPolymeshEdge 
    {

		public Dynamic.Tekla.Structures.Geometry3d.PolymeshEdgeTypeEnum EdgeType
		{
			get => Dynamic.Tekla.Structures.Geometry3d.PolymeshEdgeTypeEnum_.FromTSObject(indirectpolymeshedge.EdgeType);
			set { indirectpolymeshedge.EdgeType = Dynamic.Tekla.Structures.Geometry3d.PolymeshEdgeTypeEnum_.GetTSObject(value); }
		}

		public System.Int32 StartPoint
		{
			get => indirectpolymeshedge.StartPoint;
			set { indirectpolymeshedge.StartPoint = value; }
		}

		public System.Int32 EndPoint
		{
			get => indirectpolymeshedge.EndPoint;
			set { indirectpolymeshedge.EndPoint = value; }
		}

		public System.Int32 ShellIndex
		{
			get => indirectpolymeshedge.ShellIndex;
			set { indirectpolymeshedge.ShellIndex = value; }
		}

        

        internal dynamic indirectpolymeshedge;
        
        public IndirectPolymeshEdge()
        {
            this.indirectpolymeshedge =  TSActivator.CreateInstance("Tekla.Structures.Geometry3d.IndirectPolymeshEdge");
        }

        internal IndirectPolymeshEdge(dynamic tsObject)
        {
            this.indirectpolymeshedge = tsObject;
        }





    }

    internal static class IndirectPolymeshEdge_
    {
        public static dynamic GetTSObject(IndirectPolymeshEdge dynObject)
        {
            return dynObject.indirectpolymeshedge;
        }

        public static IndirectPolymeshEdge FromTSObject(dynamic tsObject)
        {
            return new IndirectPolymeshEdge(tsObject);
        }
    }


}
    
