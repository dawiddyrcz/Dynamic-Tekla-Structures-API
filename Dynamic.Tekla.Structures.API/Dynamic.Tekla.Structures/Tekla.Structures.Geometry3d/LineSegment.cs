//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public sealed class LineSegment 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Point Point1
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(linesegment.Point1);
			set { linesegment.Point1 = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point Point2
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(linesegment.Point2);
			set { linesegment.Point2 = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point StartPoint
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(linesegment.StartPoint);
			set { linesegment.StartPoint = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point EndPoint
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(linesegment.EndPoint);
			set { linesegment.EndPoint = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

        

        internal dynamic linesegment;
        
        public LineSegment()
        {
            this.linesegment =  TSActivator.CreateInstance("Tekla.Structures.Geometry3d.LineSegment");
        }

        internal LineSegment(dynamic tsObject)
        {
            this.linesegment = tsObject;
        }
		public LineSegment(Dynamic.Tekla.Structures.Geometry3d.Point Point1, Dynamic.Tekla.Structures.Geometry3d.Point Point2)
		{
			var args = new object[2];
			args[0] = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(Point1);
			args[1] = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(Point2);
			this.linesegment = TSActivator.CreateInstance("Tekla.Structures.Geometry3d.LineSegment", args);
		}

		public System.Double Length()
			 => linesegment.Length();

		public Dynamic.Tekla.Structures.Geometry3d.Vector GetDirectionVector()
			 => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(linesegment.GetDirectionVector());

		public System.Boolean op_Equality(Dynamic.Tekla.Structures.Geometry3d.LineSegment Segment1, Dynamic.Tekla.Structures.Geometry3d.LineSegment Segment2)
			 => linesegment.op_Equality(Dynamic.Tekla.Structures.Geometry3d.LineSegment_.GetTSObject(Segment1), Dynamic.Tekla.Structures.Geometry3d.LineSegment_.GetTSObject(Segment2));

		public System.Boolean op_Inequality(Dynamic.Tekla.Structures.Geometry3d.LineSegment Segment1, Dynamic.Tekla.Structures.Geometry3d.LineSegment Segment2)
			 => linesegment.op_Inequality(Dynamic.Tekla.Structures.Geometry3d.LineSegment_.GetTSObject(Segment1), Dynamic.Tekla.Structures.Geometry3d.LineSegment_.GetTSObject(Segment2));





    }

    internal static class LineSegment_
    {
        public static dynamic GetTSObject(LineSegment dynObject)
        {
            return dynObject.linesegment;
        }

        public static LineSegment FromTSObject(dynamic tsObject)
        {
            return new LineSegment(tsObject);
        }
    }


}
    
