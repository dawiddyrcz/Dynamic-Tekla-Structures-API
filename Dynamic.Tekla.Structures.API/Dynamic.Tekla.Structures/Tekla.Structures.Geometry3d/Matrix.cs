//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public  class Matrix 
    {

		public System.Double Item
		{
			get => teklaObject.Item;
			set { teklaObject.Item = value; }
		}

        

        internal dynamic teklaObject;

		public Matrix()
		{
			this.teklaObject = TSActivator.CreateInstance("Tekla.Structures.Geometry3d.Matrix");
		}
		public Matrix(Dynamic.Tekla.Structures.Geometry3d.Matrix m)
		{
			var args = new object[1];
			args[0] = Dynamic.Tekla.Structures.Geometry3d.Matrix_.GetTSObject(m);
			this.teklaObject = TSActivator.CreateInstance("Tekla.Structures.Geometry3d.Matrix", args);
		}

		public void Transpose()
			 => teklaObject.Transpose();

		public Dynamic.Tekla.Structures.Geometry3d.Matrix GetTranspose()
			 => Dynamic.Tekla.Structures.Geometry3d.Matrix_.FromTSObject(teklaObject.GetTranspose());

		public Dynamic.Tekla.Structures.Geometry3d.Matrix op_Multiply(Dynamic.Tekla.Structures.Geometry3d.Matrix B, Dynamic.Tekla.Structures.Geometry3d.Matrix A)
			 => Dynamic.Tekla.Structures.Geometry3d.Matrix_.FromTSObject(teklaObject.op_Multiply(Dynamic.Tekla.Structures.Geometry3d.Matrix_.GetTSObject(B), Dynamic.Tekla.Structures.Geometry3d.Matrix_.GetTSObject(A)));

		public Dynamic.Tekla.Structures.Geometry3d.Point Transform(Dynamic.Tekla.Structures.Geometry3d.Point p)
			 => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(teklaObject.Transform(Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(p)));

		public Dynamic.Tekla.Structures.Geometry3d.Point op_Multiply(Dynamic.Tekla.Structures.Geometry3d.Matrix A, Dynamic.Tekla.Structures.Geometry3d.Point p)
			 => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(teklaObject.op_Multiply(Dynamic.Tekla.Structures.Geometry3d.Matrix_.GetTSObject(A), Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(p)));





    }

    internal static class Matrix_
    {
        public static dynamic GetTSObject(Matrix dynObject)
        {
            return dynObject.teklaObject;
        }

        public static Matrix FromTSObject(dynamic tsObject)
        {
            return new Matrix() { teklaObject = tsObject };
        }
    }


}
    
