//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public sealed class OBB 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Point Center
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(obb.Center);
			set { obb.Center = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector Axis0
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(obb.Axis0);
			set { obb.Axis0 = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector Axis1
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(obb.Axis1);
			set { obb.Axis1 = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector Axis2
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(obb.Axis2);
			set { obb.Axis2 = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

		public System.Double Extent0
		{
			get => obb.Extent0;
			set { obb.Extent0 = value; }
		}

		public System.Double Extent1
		{
			get => obb.Extent1;
			set { obb.Extent1 = value; }
		}

		public System.Double Extent2
		{
			get => obb.Extent2;
			set { obb.Extent2 = value; }
		}

        

        internal dynamic obb;
        
        public OBB()
        {
            this.obb =  TSActivator.CreateInstance("Tekla.Structures.Geometry3d.OBB");
        }

        internal OBB(dynamic tsObject)
        {
            this.obb = tsObject;
        }

		public void SetAxis(Dynamic.Tekla.Structures.Geometry3d.Vector axis0, Dynamic.Tekla.Structures.Geometry3d.Vector axis1, Dynamic.Tekla.Structures.Geometry3d.Vector axis2)
			 => obb.SetAxis(Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(axis0), Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(axis1), Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(axis2));

		public void SetAxis(Dynamic.Tekla.Structures.Geometry3d.Vector axis)
			 => obb.SetAxis(Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(axis));

		public void SetExtent(System.Double extent0, System.Double extent1, System.Double extent2)
			 => obb.SetExtent(extent0, extent1, extent2);

		public void SetExtent(System.Double extent)
			 => obb.SetExtent(extent);

		public Dynamic.Tekla.Structures.Geometry3d.Point ComputeVertices()
			 => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(obb.ComputeVertices());

		public Dynamic.Tekla.Structures.Geometry3d.Point ClosestPointTo(Dynamic.Tekla.Structures.Geometry3d.Point point)
			 => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(obb.ClosestPointTo(Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(point)));

		public Dynamic.Tekla.Structures.Geometry3d.Point ClosestPointTo(Dynamic.Tekla.Structures.Geometry3d.Line line)
			 => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(obb.ClosestPointTo(Dynamic.Tekla.Structures.Geometry3d.Line_.GetTSObject(line)));

		public Dynamic.Tekla.Structures.Geometry3d.Point ClosestPointTo(Dynamic.Tekla.Structures.Geometry3d.LineSegment lineSegment)
			 => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(obb.ClosestPointTo(Dynamic.Tekla.Structures.Geometry3d.LineSegment_.GetTSObject(lineSegment)));

		public System.Double DistanceTo(Dynamic.Tekla.Structures.Geometry3d.Point point)
			 => obb.DistanceTo(Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(point));

		public System.Double DistanceTo(Dynamic.Tekla.Structures.Geometry3d.Line line)
			 => obb.DistanceTo(Dynamic.Tekla.Structures.Geometry3d.Line_.GetTSObject(line));

		public System.Double DistanceTo(Dynamic.Tekla.Structures.Geometry3d.LineSegment lineSegment)
			 => obb.DistanceTo(Dynamic.Tekla.Structures.Geometry3d.LineSegment_.GetTSObject(lineSegment));

		public Dynamic.Tekla.Structures.Geometry3d.Point IntersectionPointsWith(Dynamic.Tekla.Structures.Geometry3d.Line line)
			 => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(obb.IntersectionPointsWith(Dynamic.Tekla.Structures.Geometry3d.Line_.GetTSObject(line)));

		public Dynamic.Tekla.Structures.Geometry3d.Point IntersectionPointsWith(Dynamic.Tekla.Structures.Geometry3d.LineSegment lineSegment)
			 => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(obb.IntersectionPointsWith(Dynamic.Tekla.Structures.Geometry3d.LineSegment_.GetTSObject(lineSegment)));

		public Dynamic.Tekla.Structures.Geometry3d.LineSegment IntersectionWith(Dynamic.Tekla.Structures.Geometry3d.Line line)
			 => Dynamic.Tekla.Structures.Geometry3d.LineSegment_.FromTSObject(obb.IntersectionWith(Dynamic.Tekla.Structures.Geometry3d.Line_.GetTSObject(line)));

		public Dynamic.Tekla.Structures.Geometry3d.LineSegment IntersectionWith(Dynamic.Tekla.Structures.Geometry3d.LineSegment lineSegment)
			 => Dynamic.Tekla.Structures.Geometry3d.LineSegment_.FromTSObject(obb.IntersectionWith(Dynamic.Tekla.Structures.Geometry3d.LineSegment_.GetTSObject(lineSegment)));

		public System.Boolean Intersects(Dynamic.Tekla.Structures.Geometry3d.OBB obb)
			 => obb.Intersects(Dynamic.Tekla.Structures.Geometry3d.OBB_.GetTSObject(obb));

		public System.Boolean Intersects(Dynamic.Tekla.Structures.Geometry3d.Line line)
			 => obb.Intersects(Dynamic.Tekla.Structures.Geometry3d.Line_.GetTSObject(line));

		public System.Boolean Intersects(Dynamic.Tekla.Structures.Geometry3d.LineSegment lineSegment)
			 => obb.Intersects(Dynamic.Tekla.Structures.Geometry3d.LineSegment_.GetTSObject(lineSegment));

		public System.Boolean Intersects(Dynamic.Tekla.Structures.Geometry3d.GeometricPlane geometricPlane)
			 => obb.Intersects(Dynamic.Tekla.Structures.Geometry3d.GeometricPlane_.GetTSObject(geometricPlane));

		public Dynamic.Tekla.Structures.Geometry3d.LineSegment ShortestSegmentTo(Dynamic.Tekla.Structures.Geometry3d.Line line)
			 => Dynamic.Tekla.Structures.Geometry3d.LineSegment_.FromTSObject(obb.ShortestSegmentTo(Dynamic.Tekla.Structures.Geometry3d.Line_.GetTSObject(line)));

		public Dynamic.Tekla.Structures.Geometry3d.LineSegment ShortestSegmentTo(Dynamic.Tekla.Structures.Geometry3d.LineSegment lineSegment)
			 => Dynamic.Tekla.Structures.Geometry3d.LineSegment_.FromTSObject(obb.ShortestSegmentTo(Dynamic.Tekla.Structures.Geometry3d.LineSegment_.GetTSObject(lineSegment)));

		public Dynamic.Tekla.Structures.Geometry3d.LineSegment ShortestSegmentTo(Dynamic.Tekla.Structures.Geometry3d.Point point)
			 => Dynamic.Tekla.Structures.Geometry3d.LineSegment_.FromTSObject(obb.ShortestSegmentTo(Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(point)));





    }

    internal static class OBB_
    {
        public static dynamic GetTSObject(OBB dynObject)
        {
            return dynObject.obb;
        }

        public static OBB FromTSObject(dynamic tsObject)
        {
            return new OBB(tsObject);
        }
    }


}
    
