//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public sealed class Polycurve 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Point StartPoint
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(polycurve.StartPoint);
			set { polycurve.StartPoint = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point EndPoint
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(polycurve.EndPoint);
			set { polycurve.EndPoint = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public System.Double Length
		{
			get => polycurve.Length;
			set { polycurve.Length = value; }
		}

        

        internal dynamic polycurve;
        
        public Polycurve()
        {
            this.polycurve =  TSActivator.CreateInstance("Tekla.Structures.Geometry3d.Polycurve");
        }

        internal Polycurve(dynamic tsObject)
        {
            this.polycurve = tsObject;
        }





    }

    internal static class Polycurve_
    {
        public static dynamic GetTSObject(Polycurve dynObject)
        {
            return dynObject.polycurve;
        }

        public static Polycurve FromTSObject(dynamic tsObject)
        {
            return new Polycurve(tsObject);
        }
    }


}
    
