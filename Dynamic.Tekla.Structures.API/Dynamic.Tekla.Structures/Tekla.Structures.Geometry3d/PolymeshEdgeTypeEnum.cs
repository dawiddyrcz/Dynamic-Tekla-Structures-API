//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public enum PolymeshEdgeTypeEnum
    {
			VISIBLE_EDGE,
			INVISIBLE_EDGE        
    }

    public static class PolymeshEdgeTypeEnum_
    {
        public static dynamic GetTSObject(PolymeshEdgeTypeEnum dynEnum)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Geometry3d.PolymeshEdgeTypeEnum");

            switch (dynEnum)
            {
				case PolymeshEdgeTypeEnum.VISIBLE_EDGE:
					return System.Enum.Parse(tsType, "VISIBLE_EDGE");
				case PolymeshEdgeTypeEnum.INVISIBLE_EDGE:
					return System.Enum.Parse(tsType, "INVISIBLE_EDGE");

                default:
                    throw new System.NotImplementedException(dynEnum.ToString() + "- enum value is not implemented");
            }
        }
    
        public static PolymeshEdgeTypeEnum FromTSObject(dynamic tsEnum)
        {
            string tsEnumValue = tsEnum.ToString("G", System.Globalization.CultureInfo.InvariantCulture);
            
			if (tsEnumValue.Equals("VISIBLE_EDGE", System.StringComparison.InvariantCulture))
				return PolymeshEdgeTypeEnum.VISIBLE_EDGE;
			else if (tsEnumValue.Equals("INVISIBLE_EDGE", System.StringComparison.InvariantCulture))
				return PolymeshEdgeTypeEnum.INVISIBLE_EDGE;

            else 
                throw new System.NotImplementedException(tsEnumValue + "- enum value is not implemented");
            
        }
    }

}
    
