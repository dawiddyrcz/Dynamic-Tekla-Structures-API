//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Geometry3d
{

    public sealed class Projection 
    {

        

        internal dynamic projection;
        
        private Projection()
        {
            this.projection =  TSActivator.CreateInstance("Tekla.Structures.Geometry3d.Projection");
        }

        internal Projection(dynamic tsObject)
        {
            this.projection = tsObject;
        }

		public Dynamic.Tekla.Structures.Geometry3d.Point PointToLine(Dynamic.Tekla.Structures.Geometry3d.Point Point, Dynamic.Tekla.Structures.Geometry3d.Line Line)
			 => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(projection.PointToLine(Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(Point), Dynamic.Tekla.Structures.Geometry3d.Line_.GetTSObject(Line)));

		public Dynamic.Tekla.Structures.Geometry3d.Point PointToPlane(Dynamic.Tekla.Structures.Geometry3d.Point Point, Dynamic.Tekla.Structures.Geometry3d.GeometricPlane Plane)
			 => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(projection.PointToPlane(Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(Point), Dynamic.Tekla.Structures.Geometry3d.GeometricPlane_.GetTSObject(Plane)));

		public Dynamic.Tekla.Structures.Geometry3d.Line LineToPlane(Dynamic.Tekla.Structures.Geometry3d.Line Line, Dynamic.Tekla.Structures.Geometry3d.GeometricPlane Plane)
			 => Dynamic.Tekla.Structures.Geometry3d.Line_.FromTSObject(projection.LineToPlane(Dynamic.Tekla.Structures.Geometry3d.Line_.GetTSObject(Line), Dynamic.Tekla.Structures.Geometry3d.GeometricPlane_.GetTSObject(Plane)));

		public Dynamic.Tekla.Structures.Geometry3d.LineSegment LineSegmentToPlane(Dynamic.Tekla.Structures.Geometry3d.LineSegment LineSegment, Dynamic.Tekla.Structures.Geometry3d.GeometricPlane Plane)
			 => Dynamic.Tekla.Structures.Geometry3d.LineSegment_.FromTSObject(projection.LineSegmentToPlane(Dynamic.Tekla.Structures.Geometry3d.LineSegment_.GetTSObject(LineSegment), Dynamic.Tekla.Structures.Geometry3d.GeometricPlane_.GetTSObject(Plane)));





    }

    internal static class Projection_
    {
        public static dynamic GetTSObject(Projection dynObject)
        {
            return dynObject.projection;
        }

        public static Projection FromTSObject(dynamic tsObject)
        {
            return new Projection(tsObject);
        }
    }


}
    
