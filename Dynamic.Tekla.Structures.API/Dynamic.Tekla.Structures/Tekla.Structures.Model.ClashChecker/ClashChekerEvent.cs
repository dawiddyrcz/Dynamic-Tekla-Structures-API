//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model.ClashChecker
{

    public sealed class ClashChekerEvent 
    {

        

        internal dynamic clashchekerevent;
        
        private ClashChekerEvent()
        {
            this.clashchekerevent =  TSActivator.CreateInstance("Tekla.Structures.Model.ClashChecker.ClashChekerEvent");
        }

        internal ClashChekerEvent(dynamic tsObject)
        {
            this.clashchekerevent = tsObject;
        }

		public Dynamic.Tekla.Structures.Model.ClashCheckHandler GetClashCheckHandler()
			 => Dynamic.Tekla.Structures.Model.ClashCheckHandler_.FromTSObject(clashchekerevent.GetClashCheckHandler());




    public sealed class ClashCheckDoneDelegate 
    {

		public System.Reflection.MethodInfo Method
		{
			get => clashcheckdonedelegate.Method;
			set { clashcheckdonedelegate.Method = value; }
		}

		public System.Object Target
		{
			get => clashcheckdonedelegate.Target;
			set { clashcheckdonedelegate.Target = value; }
		}

        

        internal dynamic clashcheckdonedelegate;
        
        public ClashCheckDoneDelegate()
        {
            this.clashcheckdonedelegate =  TSActivator.CreateInstance("Tekla.Structures.Model.ClashChecker.ClashChekerEvent.ClashCheckDoneDelegate");
        }

        internal ClashCheckDoneDelegate(dynamic tsObject)
        {
            this.clashcheckdonedelegate = tsObject;
        }
		public ClashCheckDoneDelegate(System.Object @object, System.IntPtr method)
		{
			var args = new object[2];
			args[0] = @object;
			args[1] = method;
			this.clashcheckdonedelegate = TSActivator.CreateInstance("Tekla.Structures.Model.ClashChecker.ClashChekerEvent.ClashCheckDoneDelegate", args);
		}

		public void Invoke(System.Int32 nClashes)
			 => clashcheckdonedelegate.Invoke(nClashes);

		public void EndInvoke(System.IAsyncResult result)
			 => clashcheckdonedelegate.EndInvoke(result);

		public void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
			 => clashcheckdonedelegate.GetObjectData(info, context);

		public System.Delegate GetInvocationList()
			 => clashcheckdonedelegate.GetInvocationList();

		public System.Object DynamicInvoke(System.Object args)
			 => clashcheckdonedelegate.DynamicInvoke(args);

		public System.Object Clone()
			 => clashcheckdonedelegate.Clone();





    }

    internal static class ClashCheckDoneDelegate_
    {
        public static dynamic GetTSObject(ClashCheckDoneDelegate dynObject)
        {
            return dynObject.clashcheckdonedelegate;
        }

        public static ClashCheckDoneDelegate FromTSObject(dynamic tsObject)
        {
            return new ClashCheckDoneDelegate(tsObject);
        }
    }



    public sealed class ClashDetectedDelegate 
    {

		public System.Reflection.MethodInfo Method
		{
			get => clashdetecteddelegate.Method;
			set { clashdetecteddelegate.Method = value; }
		}

		public System.Object Target
		{
			get => clashdetecteddelegate.Target;
			set { clashdetecteddelegate.Target = value; }
		}

        

        internal dynamic clashdetecteddelegate;
        
        public ClashDetectedDelegate()
        {
            this.clashdetecteddelegate =  TSActivator.CreateInstance("Tekla.Structures.Model.ClashChecker.ClashChekerEvent.ClashDetectedDelegate");
        }

        internal ClashDetectedDelegate(dynamic tsObject)
        {
            this.clashdetecteddelegate = tsObject;
        }
		public ClashDetectedDelegate(System.Object @object, System.IntPtr method)
		{
			var args = new object[2];
			args[0] = @object;
			args[1] = method;
			this.clashdetecteddelegate = TSActivator.CreateInstance("Tekla.Structures.Model.ClashChecker.ClashChekerEvent.ClashDetectedDelegate", args);
		}

		public void Invoke(Dynamic.Tekla.Structures.Model.ClashCheckData ClashData)
			 => clashdetecteddelegate.Invoke(Dynamic.Tekla.Structures.Model.ClashCheckData_.GetTSObject(ClashData));

		public void EndInvoke(System.IAsyncResult result)
			 => clashdetecteddelegate.EndInvoke(result);

		public void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
			 => clashdetecteddelegate.GetObjectData(info, context);

		public System.Delegate GetInvocationList()
			 => clashdetecteddelegate.GetInvocationList();

		public System.Object DynamicInvoke(System.Object args)
			 => clashdetecteddelegate.DynamicInvoke(args);

		public System.Object Clone()
			 => clashdetecteddelegate.Clone();





    }

    internal static class ClashDetectedDelegate_
    {
        public static dynamic GetTSObject(ClashDetectedDelegate dynObject)
        {
            return dynObject.clashdetecteddelegate;
        }

        public static ClashDetectedDelegate FromTSObject(dynamic tsObject)
        {
            return new ClashDetectedDelegate(tsObject);
        }
    }




    }

    internal static class ClashChekerEvent_
    {
        public static dynamic GetTSObject(ClashChekerEvent dynObject)
        {
            return dynObject.clashchekerevent;
        }

        public static ClashChekerEvent FromTSObject(dynamic tsObject)
        {
            return new ClashChekerEvent(tsObject);
        }
    }


}
    
