//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model.Collaboration
{

    public sealed class IFC2X3_ParametricObject_IShapeProfile 
    {

		public System.Double OverallWidth
		{
			get => ifc2x3_parametricobject_ishapeprofile.OverallWidth;
			set { ifc2x3_parametricobject_ishapeprofile.OverallWidth = value; }
		}

		public System.Double OverallDepth
		{
			get => ifc2x3_parametricobject_ishapeprofile.OverallDepth;
			set { ifc2x3_parametricobject_ishapeprofile.OverallDepth = value; }
		}

		public System.Double WebThickness
		{
			get => ifc2x3_parametricobject_ishapeprofile.WebThickness;
			set { ifc2x3_parametricobject_ishapeprofile.WebThickness = value; }
		}

		public System.Double FlangeThickness
		{
			get => ifc2x3_parametricobject_ishapeprofile.FlangeThickness;
			set { ifc2x3_parametricobject_ishapeprofile.FlangeThickness = value; }
		}

		public System.Double FilletRadius
		{
			get => ifc2x3_parametricobject_ishapeprofile.FilletRadius;
			set { ifc2x3_parametricobject_ishapeprofile.FilletRadius = value; }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point Origin
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Point(ifc2x3_parametricobject_ishapeprofile.Origin);
			set { ifc2x3_parametricobject_ishapeprofile.Origin = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector xDir
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Vector(ifc2x3_parametricobject_ishapeprofile.xDir);
			set { ifc2x3_parametricobject_ishapeprofile.xDir = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector Extrusion
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Vector(ifc2x3_parametricobject_ishapeprofile.Extrusion);
			set { ifc2x3_parametricobject_ishapeprofile.Extrusion = value.GetTSObject(); }
		}

		public System.String ProfileName
		{
			get => ifc2x3_parametricobject_ishapeprofile.ProfileName;
			set { ifc2x3_parametricobject_ishapeprofile.ProfileName = value; }
		}

		public System.String Name
		{
			get => ifc2x3_parametricobject_ishapeprofile.Name;
			set { ifc2x3_parametricobject_ishapeprofile.Name = value; }
		}

		public System.String Description
		{
			get => ifc2x3_parametricobject_ishapeprofile.Description;
			set { ifc2x3_parametricobject_ishapeprofile.Description = value; }
		}

		public System.String ObjectType
		{
			get => ifc2x3_parametricobject_ishapeprofile.ObjectType;
			set { ifc2x3_parametricobject_ishapeprofile.ObjectType = value; }
		}

        

        dynamic ifc2x3_parametricobject_ishapeprofile;
        
        public IFC2X3_ParametricObject_IShapeProfile()
        {
            this.ifc2x3_parametricobject_ishapeprofile =  TSActivator.CreateInstance("Tekla.Structures.Model.Collaboration.IFC2X3_ParametricObject_IShapeProfile");
        }

        public IFC2X3_ParametricObject_IShapeProfile(dynamic tsObject)
        {
            this.ifc2x3_parametricobject_ishapeprofile = tsObject;
			this.OverallWidth = ifc2x3_parametricobject_ishapeprofile.OverallWidth;
			this.OverallDepth = ifc2x3_parametricobject_ishapeprofile.OverallDepth;
			this.WebThickness = ifc2x3_parametricobject_ishapeprofile.WebThickness;
			this.FlangeThickness = ifc2x3_parametricobject_ishapeprofile.FlangeThickness;
			this.FilletRadius = ifc2x3_parametricobject_ishapeprofile.FilletRadius;
			this.Origin = new Dynamic.Tekla.Structures.Geometry3d.Point(ifc2x3_parametricobject_ishapeprofile.Origin);
			this.xDir = new Dynamic.Tekla.Structures.Geometry3d.Vector(ifc2x3_parametricobject_ishapeprofile.xDir);
			this.Extrusion = new Dynamic.Tekla.Structures.Geometry3d.Vector(ifc2x3_parametricobject_ishapeprofile.Extrusion);
			this.ProfileName = ifc2x3_parametricobject_ishapeprofile.ProfileName;
			this.Name = ifc2x3_parametricobject_ishapeprofile.Name;
			this.Description = ifc2x3_parametricobject_ishapeprofile.Description;
			this.ObjectType = ifc2x3_parametricobject_ishapeprofile.ObjectType;

        }


        public dynamic GetTSObject() => ifc2x3_parametricobject_ishapeprofile;





    }

}
    
