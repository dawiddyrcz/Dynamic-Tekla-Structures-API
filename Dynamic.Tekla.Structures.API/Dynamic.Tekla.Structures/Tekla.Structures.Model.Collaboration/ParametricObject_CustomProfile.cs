//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model.Collaboration
{

    public sealed class ParametricObject_CustomProfile 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Point Origin
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Point(parametricobject_customprofile.Origin);
			set { parametricobject_customprofile.Origin = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector xDir
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Vector(parametricobject_customprofile.xDir);
			set { parametricobject_customprofile.xDir = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector Extrusion
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Vector(parametricobject_customprofile.Extrusion);
			set { parametricobject_customprofile.Extrusion = value.GetTSObject(); }
		}

		public System.String ProfileName
		{
			get => parametricobject_customprofile.ProfileName;
			set { parametricobject_customprofile.ProfileName = value; }
		}

		public System.String Name
		{
			get => parametricobject_customprofile.Name;
			set { parametricobject_customprofile.Name = value; }
		}

		public System.String Description
		{
			get => parametricobject_customprofile.Description;
			set { parametricobject_customprofile.Description = value; }
		}

		public System.String ObjectType
		{
			get => parametricobject_customprofile.ObjectType;
			set { parametricobject_customprofile.ObjectType = value; }
		}

        

        dynamic parametricobject_customprofile;
        
        public ParametricObject_CustomProfile()
        {
            this.parametricobject_customprofile =  TSActivator.CreateInstance("Tekla.Structures.Model.Collaboration.ParametricObject_CustomProfile");
        }

        public ParametricObject_CustomProfile(dynamic tsObject)
        {
            this.parametricobject_customprofile = tsObject;
        }

        internal dynamic GetTSObject() => parametricobject_customprofile;





    }

}
    
