//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model.UI
{

    public  class Color 
    {

		public System.Double Red
		{
			get => teklaObject.Red;
			set { teklaObject.Red = value; }
		}

		public System.Double Green
		{
			get => teklaObject.Green;
			set { teklaObject.Green = value; }
		}

		public System.Double Blue
		{
			get => teklaObject.Blue;
			set { teklaObject.Blue = value; }
		}

		public System.Double Transparency
		{
			get => teklaObject.Transparency;
			set { teklaObject.Transparency = value; }
		}

        

        internal dynamic teklaObject;

		public Color()
		{
			this.teklaObject = TSActivator.CreateInstance("Tekla.Structures.Model.UI.Color");
		}
		public Color(System.Double Red, System.Double Green, System.Double Blue)
		{
			var args = new object[3];
			args[0] = Red;
			args[1] = Green;
			args[2] = Blue;
			this.teklaObject = TSActivator.CreateInstance("Tekla.Structures.Model.UI.Color", args);
		}
		public Color(System.Double Red, System.Double Green, System.Double Blue, System.Double Transparency)
		{
			var args = new object[4];
			args[0] = Red;
			args[1] = Green;
			args[2] = Blue;
			args[3] = Transparency;
			this.teklaObject = TSActivator.CreateInstance("Tekla.Structures.Model.UI.Color", args);
		}





    }

    internal static class Color_
    {
        public static dynamic GetTSObject(Color dynObject)
        {
            return dynObject.teklaObject;
        }

        public static Color FromTSObject(dynamic tsObject)
        {
            return new Color() { teklaObject = tsObject };
        }
    }


}
    
