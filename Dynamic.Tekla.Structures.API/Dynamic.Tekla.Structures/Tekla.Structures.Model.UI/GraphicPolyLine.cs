//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model.UI
{

    public sealed class GraphicPolyLine 
    {

		public Dynamic.Tekla.Structures.Geometry3d.PolyLine PolyLine
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.PolyLine(graphicpolyline.PolyLine);
			set { graphicpolyline.PolyLine = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Model.UI.Color Color
		{
			get => new Dynamic.Tekla.Structures.Model.UI.Color(graphicpolyline.Color);
			set { graphicpolyline.Color = value.GetTSObject(); }
		}

		public System.Int32 Width
		{
			get => graphicpolyline.Width;
			set { graphicpolyline.Width = value; }
		}

		public Dynamic.Tekla.Structures.Model.UI.GraphicPolyLine.LineType Type
		{
			get => Dynamic.Tekla.Structures.Model.UI.GraphicPolyLine.LineType_.FromTSObject(graphicpolyline.Type);
			set { graphicpolyline.Type = Dynamic.Tekla.Structures.Model.UI.GraphicPolyLine.LineType_.FromTSObject(value); }
		}

        

        dynamic graphicpolyline;
        
        public GraphicPolyLine()
        {
            this.graphicpolyline =  TSActivator.CreateInstance("Tekla.Structures.Model.UI.GraphicPolyLine");
        }

        public GraphicPolyLine(dynamic tsObject)
        {
            this.graphicpolyline = tsObject;
        }

        internal dynamic GetTSObject() => graphicpolyline;




    public struct LineType
    {
       
    }

    internal static class LineType_
    {
        public static dynamic GetTSObject(LineType dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.UI.LineType");

            return tsType;
        }
    
        public static LineType FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new LineType();
 
            return dynStruct;
        }
    }



    }

}
    
