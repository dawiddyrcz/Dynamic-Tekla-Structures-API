//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model.UI
{

    public sealed class ViewCamera 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Point Location
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(viewcamera.Location);
			set { viewcamera.Location = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector DirectionVector
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(viewcamera.DirectionVector);
			set { viewcamera.DirectionVector = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector UpVector
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(viewcamera.UpVector);
			set { viewcamera.UpVector = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

		public System.Double FieldOfView
		{
			get => viewcamera.FieldOfView;
			set { viewcamera.FieldOfView = value; }
		}

		public System.Double ZoomFactor
		{
			get => viewcamera.ZoomFactor;
			set { viewcamera.ZoomFactor = value; }
		}

		public Dynamic.Tekla.Structures.Model.UI.View View
		{
			get => Dynamic.Tekla.Structures.Model.UI.View_.FromTSObject(viewcamera.View);
			set { viewcamera.View = Dynamic.Tekla.Structures.Model.UI.View_.GetTSObject(value); }
		}

        

        internal dynamic viewcamera;
        
        public ViewCamera()
        {
            this.viewcamera =  TSActivator.CreateInstance("Tekla.Structures.Model.UI.ViewCamera");
        }

        internal ViewCamera(dynamic tsObject)
        {
            this.viewcamera = tsObject;
        }

		public System.Boolean Select()
			 => viewcamera.Select();

		public System.Boolean Modify()
			 => viewcamera.Modify();





    }

    internal static class ViewCamera_
    {
        public static dynamic GetTSObject(ViewCamera dynObject)
        {
            return dynObject.viewcamera;
        }

        public static ViewCamera FromTSObject(dynamic tsObject)
        {
            return new ViewCamera(tsObject);
        }
    }


}
    
