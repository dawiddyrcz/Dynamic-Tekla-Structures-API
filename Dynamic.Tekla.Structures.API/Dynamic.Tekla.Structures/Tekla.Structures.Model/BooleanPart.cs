//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class BooleanPart 
    {

		public Dynamic.Tekla.Structures.Model.BooleanPart.BooleanTypeEnum Type
		{
			get => Dynamic.Tekla.Structures.Model.BooleanPart.BooleanTypeEnum_.FromTSObject(booleanpart.Type);
			set { booleanpart.Type = Dynamic.Tekla.Structures.Model.BooleanPart.BooleanTypeEnum_.FromTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Model.Part OperativePart
		{
			get => new Dynamic.Tekla.Structures.Model.Part(booleanpart.OperativePart);
			set { booleanpart.OperativePart = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Model.ModelObject Father
		{
			get => new Dynamic.Tekla.Structures.Model.ModelObject(booleanpart.Father);
			set { booleanpart.Father = value.GetTSObject(); }
		}

		public System.DateTime ModificationTime
		{
			get => booleanpart.ModificationTime;
			set { booleanpart.ModificationTime = value; }
		}

		public System.Boolean IsUpToDate
		{
			get => booleanpart.IsUpToDate;
			set { booleanpart.IsUpToDate = value; }
		}

		public Dynamic.Tekla.Structures.Identifier Identifier
		{
			get => new Dynamic.Tekla.Structures.Identifier(booleanpart.Identifier);
			set { booleanpart.Identifier = value.GetTSObject(); }
		}

        

        dynamic booleanpart;
        
        public BooleanPart()
        {
            this.booleanpart =  TSActivator.CreateInstance("Tekla.Structures.Model.BooleanPart");
        }

        public BooleanPart(dynamic tsObject)
        {
            this.booleanpart = tsObject;
        }

        internal dynamic GetTSObject() => booleanpart;

		public System.Boolean SetOperativePart(Dynamic.Tekla.Structures.Model.Part Part)
			 => booleanpart.SetOperativePart(Part.GetTSObject());

		public System.Boolean Insert()
			 => booleanpart.Insert();

		public System.Boolean Select()
			 => booleanpart.Select();

		public System.Boolean Modify()
			 => booleanpart.Modify();

		public System.Boolean Delete()
			 => booleanpart.Delete();

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetChildren()
			 => new Dynamic.Tekla.Structures.Model.ModelObjectEnumerator(booleanpart.GetChildren());

		public Dynamic.Tekla.Structures.Model.BaseComponent GetFatherComponent()
			 => new Dynamic.Tekla.Structures.Model.BaseComponent(booleanpart.GetFatherComponent());

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetHierarchicObjects()
			 => new Dynamic.Tekla.Structures.Model.ModelObjectEnumerator(booleanpart.GetHierarchicObjects());

		public System.Boolean GetAllUserProperties(System.Collections.Hashtable values)
			 => booleanpart.GetAllUserProperties(values);

		public System.Boolean GetIntegerUserProperties(System.Collections.Hashtable values)
			 => booleanpart.GetIntegerUserProperties(values);

		public System.Boolean GetDoubleUserProperties(System.Collections.Hashtable values)
			 => booleanpart.GetDoubleUserProperties(values);

		public System.Boolean GetStringUserProperties(System.Collections.Hashtable values)
			 => booleanpart.GetStringUserProperties(values);

		public System.Boolean GetAllReportProperties(System.Collections.ArrayList stringNames, System.Collections.ArrayList doubleNames, System.Collections.ArrayList integerNames, System.Collections.Hashtable values)
			 => booleanpart.GetAllReportProperties(stringNames, doubleNames, integerNames, values);

		public System.Boolean GetIntegerReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => booleanpart.GetIntegerReportProperties(names, values);

		public System.Boolean GetDoubleReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => booleanpart.GetDoubleReportProperties(names, values);

		public System.Boolean GetStringReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => booleanpart.GetStringReportProperties(names, values);

		public System.Boolean GetUserProperty(System.String name, System.String value)
			 => booleanpart.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.String value)
			 => booleanpart.GetReportProperty(name, value);

		public System.Boolean GetUserProperty(System.String name, System.Double value)
			 => booleanpart.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.Double value)
			 => booleanpart.GetReportProperty(name, value);

		public System.Boolean GetUserProperty(System.String name, System.Int32 value)
			 => booleanpart.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.Int32 value)
			 => booleanpart.GetReportProperty(name, value);

		public System.Boolean GetDynamicStringProperty(System.String name, System.String value)
			 => booleanpart.GetDynamicStringProperty(name, value);

		public System.Boolean SetDynamicStringProperty(System.String name, System.String value)
			 => booleanpart.SetDynamicStringProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.String value)
			 => booleanpart.SetUserProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.Double value)
			 => booleanpart.SetUserProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.Int32 value)
			 => booleanpart.SetUserProperty(name, value);

		public Dynamic.Tekla.Structures.Geometry3d.CoordinateSystem GetCoordinateSystem()
			 => new Dynamic.Tekla.Structures.Geometry3d.CoordinateSystem(booleanpart.GetCoordinateSystem());

		public System.Boolean SetPhase(Dynamic.Tekla.Structures.Model.Phase phase)
			 => booleanpart.SetPhase(phase.GetTSObject());

		public System.Boolean GetPhase(Dynamic.Tekla.Structures.Model.Phase phase)
			 => booleanpart.GetPhase(phase.GetTSObject());

		public System.Boolean SetLabel(System.String label)
			 => booleanpart.SetLabel(label);

		public System.Int32 CompareTo(System.Object obj)
			 => booleanpart.CompareTo(obj);




    public struct BooleanTypeEnum
    {
       
    }

    internal static class BooleanTypeEnum_
    {
        public static dynamic GetTSObject(BooleanTypeEnum dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.BooleanTypeEnum");

            return tsType;
        }
    
        public static BooleanTypeEnum FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new BooleanTypeEnum();
 
            return dynStruct;
        }
    }



    }

}
    
