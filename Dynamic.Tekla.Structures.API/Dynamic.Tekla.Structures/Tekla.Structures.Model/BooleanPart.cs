//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public  class BooleanPart  : Dynamic.Tekla.Structures.Model.Boolean
    {

		public Dynamic.Tekla.Structures.Model.BooleanPart.BooleanTypeEnum Type
		{
			get => Dynamic.Tekla.Structures.Model.BooleanPart.BooleanTypeEnum_.FromTSObject(teklaObject.Type);
			set { teklaObject.Type = Dynamic.Tekla.Structures.Model.BooleanPart.BooleanTypeEnum_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Model.Part OperativePart
		{
			get => Dynamic.Tekla.Structures.Model.Part_.FromTSObject(teklaObject.OperativePart);
			set { teklaObject.OperativePart = Dynamic.Tekla.Structures.Model.Part_.GetTSObject(value); }
		}

        

        

		public BooleanPart()
		{
			this.teklaObject = TSActivator.CreateInstance("Tekla.Structures.Model.BooleanPart");
		}

		public System.Boolean SetOperativePart(Dynamic.Tekla.Structures.Model.Part Part)
			 => teklaObject.SetOperativePart(Dynamic.Tekla.Structures.Model.Part_.GetTSObject(Part));

		public System.Boolean Insert()
			 => teklaObject.Insert();

		public System.Boolean Select()
			 => teklaObject.Select();

		public System.Boolean Modify()
			 => teklaObject.Modify();

		public System.Boolean Delete()
			 => teklaObject.Delete();




    public enum BooleanTypeEnum
    {
			BOOLEAN_ADD,
			BOOLEAN_CUT,
			BOOLEAN_WELDPREP        
    }

    internal static class BooleanTypeEnum_
    {
        public static dynamic GetTSObject(BooleanTypeEnum dynEnum)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.BooleanPart.BooleanTypeEnum").GetType();

            switch (dynEnum)
            {
				case BooleanTypeEnum.BOOLEAN_ADD:
					return System.Enum.Parse(tsType, "BOOLEAN_ADD");
				case BooleanTypeEnum.BOOLEAN_CUT:
					return System.Enum.Parse(tsType, "BOOLEAN_CUT");
				case BooleanTypeEnum.BOOLEAN_WELDPREP:
					return System.Enum.Parse(tsType, "BOOLEAN_WELDPREP");

                default:
                    throw new System.NotImplementedException(dynEnum.ToString() + "- enum value is not implemented");
            }
        }
    
        public static BooleanTypeEnum FromTSObject(dynamic tsEnum)
        {
            string tsEnumValue = tsEnum.ToString("G", System.Globalization.CultureInfo.InvariantCulture);
            
			if (tsEnumValue.Equals("BOOLEAN_ADD", System.StringComparison.InvariantCulture))
				return BooleanTypeEnum.BOOLEAN_ADD;
			else if (tsEnumValue.Equals("BOOLEAN_CUT", System.StringComparison.InvariantCulture))
				return BooleanTypeEnum.BOOLEAN_CUT;
			else if (tsEnumValue.Equals("BOOLEAN_WELDPREP", System.StringComparison.InvariantCulture))
				return BooleanTypeEnum.BOOLEAN_WELDPREP;

            else 
                throw new System.NotImplementedException(tsEnumValue + "- enum value is not implemented");
            
        }
    }



    }

    internal static class BooleanPart_
    {
        public static dynamic GetTSObject(BooleanPart dynObject)
        {
            return dynObject.teklaObject;
        }

        public static BooleanPart FromTSObject(dynamic tsObject)
        {
            var typeName = "Dynamic." + tsObject.GetType().FullName;
            var type = System.Reflection.Assembly.GetExecutingAssembly().GetType(typeName);
            var dynObject = (Tekla.Structures.Model.BooleanPart)System.Activator.CreateInstance(type);
            dynObject.teklaObject = tsObject;
            return dynObject;
        }
    }


}
    
