//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class Chamfer 
    {

		public Dynamic.Tekla.Structures.Model.Chamfer.ChamferTypeEnum Type
		{
			get => Dynamic.Tekla.Structures.Model.Chamfer.ChamferTypeEnum_.FromTSObject(chamfer.Type);
			set { chamfer.Type = Dynamic.Tekla.Structures.Model.Chamfer.ChamferTypeEnum_.FromTSObject(value); }
		}

		public System.Double X
		{
			get => chamfer.X;
			set { chamfer.X = value; }
		}

		public System.Double Y
		{
			get => chamfer.Y;
			set { chamfer.Y = value; }
		}

		public System.Double DZ1
		{
			get => chamfer.DZ1;
			set { chamfer.DZ1 = value; }
		}

		public System.Double DZ2
		{
			get => chamfer.DZ2;
			set { chamfer.DZ2 = value; }
		}

        

        dynamic chamfer;
        
        public Chamfer()
        {
            this.chamfer =  TSActivator.CreateInstance("Tekla.Structures.Model.Chamfer");
        }

        public Chamfer(dynamic tsObject)
        {
            this.chamfer = tsObject;
        }

        internal dynamic GetTSObject() => chamfer;




    public struct ChamferTypeEnum
    {
       
    }

    internal static class ChamferTypeEnum_
    {
        public static dynamic GetTSObject(ChamferTypeEnum dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.ChamferTypeEnum");

            return tsType;
        }
    
        public static ChamferTypeEnum FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new ChamferTypeEnum();
 
            return dynStruct;
        }
    }



    }

}
    
