//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class ChangeData 
    {

		public Dynamic.Tekla.Structures.Model.ModelObject Object
		{
			get => new Dynamic.Tekla.Structures.Model.ModelObject(changedata.Object);
			set { changedata.Object = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Model.ChangeData.ChangeTypeEnum Type
		{
			get => Dynamic.Tekla.Structures.Model.ChangeData.ChangeTypeEnum_.FromTSObject(changedata.Type);
			set { changedata.Type = Dynamic.Tekla.Structures.Model.ChangeData.ChangeTypeEnum_.FromTSObject(value); }
		}

        

        dynamic changedata;
        
        public ChangeData()
        {
            this.changedata =  TSActivator.CreateInstance("Tekla.Structures.Model.ChangeData");
        }

        public ChangeData(dynamic tsObject)
        {
            this.changedata = tsObject;
        }

        internal dynamic GetTSObject() => changedata;




    public struct ChangeTypeEnum
    {
       
    }

    internal static class ChangeTypeEnum_
    {
        public static dynamic GetTSObject(ChangeTypeEnum dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.ChangeTypeEnum");

            return tsType;
        }
    
        public static ChangeTypeEnum FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new ChangeTypeEnum();
 
            return dynStruct;
        }
    }



    }

}
    
