//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class ClashCheckData 
    {

		public Dynamic.Tekla.Structures.Model.ModelObject Object1
		{
			get => new Dynamic.Tekla.Structures.Model.ModelObject(clashcheckdata.Object1);
			set { clashcheckdata.Object1 = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Model.ModelObject Object2
		{
			get => new Dynamic.Tekla.Structures.Model.ModelObject(clashcheckdata.Object2);
			set { clashcheckdata.Object2 = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Model.ClashCheckData.ClashTypeEnum Type
		{
			get => Dynamic.Tekla.Structures.Model.ClashCheckData.ClashTypeEnum_.FromTSObject(clashcheckdata.Type);
			set { clashcheckdata.Type = Dynamic.Tekla.Structures.Model.ClashCheckData.ClashTypeEnum_.FromTSObject(value); }
		}

		public System.Double Overlap
		{
			get => clashcheckdata.Overlap;
			set { clashcheckdata.Overlap = value; }
		}

        

        dynamic clashcheckdata;
        
        public ClashCheckData()
        {
            this.clashcheckdata =  TSActivator.CreateInstance("Tekla.Structures.Model.ClashCheckData");
        }

        public ClashCheckData(dynamic tsObject)
        {
            this.clashcheckdata = tsObject;
        }

        internal dynamic GetTSObject() => clashcheckdata;




    public struct ClashTypeEnum
    {
       
    }

    internal static class ClashTypeEnum_
    {
        public static dynamic GetTSObject(ClashTypeEnum dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.ClashTypeEnum");

            return tsType;
        }
    
        public static ClashTypeEnum FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new ClashTypeEnum();
 
            return dynStruct;
        }
    }



    }

}
    
