//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class ComponentInput 
    {

		public System.Int32 Count
		{
			get => componentinput.Count;
			set { componentinput.Count = value; }
		}

		public System.Boolean IsSynchronized
		{
			get => componentinput.IsSynchronized;
			set { componentinput.IsSynchronized = value; }
		}

		public System.Object SyncRoot
		{
			get => componentinput.SyncRoot;
			set { componentinput.SyncRoot = value; }
		}

        

        internal dynamic componentinput;
        
        public ComponentInput()
        {
            this.componentinput =  TSActivator.CreateInstance("Tekla.Structures.Model.ComponentInput");
        }

        internal ComponentInput(dynamic tsObject)
        {
            this.componentinput = tsObject;
        }

		public System.Boolean AddOneInputPosition(Dynamic.Tekla.Structures.Geometry3d.Point P)
			 => componentinput.AddOneInputPosition(Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(P));

		public System.Boolean AddTwoInputPositions(Dynamic.Tekla.Structures.Geometry3d.Point Position1, Dynamic.Tekla.Structures.Geometry3d.Point Position2)
			 => componentinput.AddTwoInputPositions(Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(Position1), Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(Position2));

		public System.Boolean AddInputPolygon(Dynamic.Tekla.Structures.Model.Polygon P)
			 => componentinput.AddInputPolygon(Dynamic.Tekla.Structures.Model.Polygon_.GetTSObject(P));

		public System.Boolean AddInputObject(Dynamic.Tekla.Structures.Model.ModelObject M)
			 => componentinput.AddInputObject(Dynamic.Tekla.Structures.Model.ModelObject_.GetTSObject(M));

		public System.Boolean AddInputObjects(System.Collections.ArrayList Objects)
			 => componentinput.AddInputObjects(Objects);

		public void CopyTo(System.Array array, System.Int32 index)
			 => componentinput.CopyTo(array, index);





    }

    internal static class ComponentInput_
    {
        public static dynamic GetTSObject(ComponentInput dynObject)
        {
            return dynObject.componentinput;
        }

        public static ComponentInput FromTSObject(dynamic tsObject)
        {
            return new ComponentInput(tsObject);
        }
    }


}
    
