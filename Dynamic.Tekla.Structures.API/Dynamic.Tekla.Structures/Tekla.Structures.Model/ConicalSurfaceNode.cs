//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class ConicalSurfaceNode 
    {

		public Dynamic.Tekla.Structures.Model.ConicalSurface Surface
		{
			get => Dynamic.Tekla.Structures.Model.ConicalSurface_.FromTSObject(conicalsurfacenode.Surface);
			set { conicalsurfacenode.Surface = Dynamic.Tekla.Structures.Model.ConicalSurface_.GetTSObject(value); }
		}

		public System.Boolean IsAutomatic
		{
			get => conicalsurfacenode.IsAutomatic;
			set { conicalsurfacenode.IsAutomatic = value; }
		}

        

        internal dynamic conicalsurfacenode;
        
        public ConicalSurfaceNode()
        {
            this.conicalsurfacenode =  TSActivator.CreateInstance("Tekla.Structures.Model.ConicalSurfaceNode");
        }

        internal ConicalSurfaceNode(dynamic tsObject)
        {
            this.conicalsurfacenode = tsObject;
        }


    }

    internal static class ConicalSurfaceNode_
    {
        public static dynamic GetTSObject(ConicalSurfaceNode dynObject)
        {
            return dynObject.conicalsurfacenode;
        }

        public static ConicalSurfaceNode FromTSObject(dynamic tsObject)
        {
            return new ConicalSurfaceNode(tsObject);
        }
    }


}
    
