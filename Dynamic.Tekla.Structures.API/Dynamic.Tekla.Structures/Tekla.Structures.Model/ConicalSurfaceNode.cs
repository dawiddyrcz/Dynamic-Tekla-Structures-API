//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class ConicalSurfaceNode 
    {

		public Dynamic.Tekla.Structures.Model.ConicalSurface Surface
		{
			get => new Dynamic.Tekla.Structures.Model.ConicalSurface(conicalsurfacenode.Surface);
			set { conicalsurfacenode.Surface = value.GetTSObject(); }
		}

		public System.Boolean IsAutomatic
		{
			get => conicalsurfacenode.IsAutomatic;
			set { conicalsurfacenode.IsAutomatic = value; }
		}

		public Dynamic.Tekla.Structures.Model.BendSurface Surface
		{
			get => new Dynamic.Tekla.Structures.Model.BendSurface(conicalsurfacenode.Surface);
			set { conicalsurfacenode.Surface = value.GetTSObject(); }
		}

        

        dynamic conicalsurfacenode;
        
        public ConicalSurfaceNode()
        {
            this.conicalsurfacenode =  TSActivator.CreateInstance("Tekla.Structures.Model.ConicalSurfaceNode");
        }

        public ConicalSurfaceNode(dynamic tsObject)
        {
            this.conicalsurfacenode = tsObject;
			this.Surface = new Dynamic.Tekla.Structures.Model.ConicalSurface(conicalsurfacenode.Surface);
			this.IsAutomatic = conicalsurfacenode.IsAutomatic;
			this.Surface = new Dynamic.Tekla.Structures.Model.BendSurface(conicalsurfacenode.Surface);

        }


        public dynamic GetTSObject() => conicalsurfacenode;

		public void AcceptVisitor(Dynamic.Tekla.Structures.Model.IGeometryNodeVisitor visitor)
			 => conicalsurfacenode.AcceptVisitor(visitor.GetTSObject());





    }

}
    
