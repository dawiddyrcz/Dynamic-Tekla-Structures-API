//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class Contour 
    {

		public System.Collections.ArrayList ContourPoints
		{
			get => contour.ContourPoints;
			set { contour.ContourPoints = value; }
		}

        

        internal dynamic contour;
        
        public Contour()
        {
            this.contour =  TSActivator.CreateInstance("Tekla.Structures.Model.Contour");
        }

        internal Contour(dynamic tsObject)
        {
            this.contour = tsObject;
        }

		public void AddContourPoint(Dynamic.Tekla.Structures.Model.ContourPoint Point)
			 => contour.AddContourPoint(Dynamic.Tekla.Structures.Model.ContourPoint_.GetTSObject(Point));

		public System.Boolean CalculatePolygon(Dynamic.Tekla.Structures.Model.Polygon polygon)
			 => contour.CalculatePolygon(Dynamic.Tekla.Structures.Model.Polygon_.GetTSObject(polygon));





    }

    internal static class Contour_
    {
        public static dynamic GetTSObject(Contour dynObject)
        {
            return dynObject.contour;
        }

        public static Contour FromTSObject(dynamic tsObject)
        {
            return new Contour(tsObject);
        }
    }


}
    
