//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class ExtensionIntersectsWithPlateException 
    {

		public System.String Message
		{
			get => extensionintersectswithplateexception.Message;
			set { extensionintersectswithplateexception.Message = value; }
		}

		public System.Collections.IDictionary Data
		{
			get => extensionintersectswithplateexception.Data;
			set { extensionintersectswithplateexception.Data = value; }
		}

		public System.Exception InnerException
		{
			get => extensionintersectswithplateexception.InnerException;
			set { extensionintersectswithplateexception.InnerException = value; }
		}

		public System.Reflection.MethodBase TargetSite
		{
			get => extensionintersectswithplateexception.TargetSite;
			set { extensionintersectswithplateexception.TargetSite = value; }
		}

		public System.String StackTrace
		{
			get => extensionintersectswithplateexception.StackTrace;
			set { extensionintersectswithplateexception.StackTrace = value; }
		}

		public System.String HelpLink
		{
			get => extensionintersectswithplateexception.HelpLink;
			set { extensionintersectswithplateexception.HelpLink = value; }
		}

		public System.String Source
		{
			get => extensionintersectswithplateexception.Source;
			set { extensionintersectswithplateexception.Source = value; }
		}

		public System.Int32 HResult
		{
			get => extensionintersectswithplateexception.HResult;
			set { extensionintersectswithplateexception.HResult = value; }
		}

        

        internal dynamic extensionintersectswithplateexception;
        
        public ExtensionIntersectsWithPlateException()
        {
            this.extensionintersectswithplateexception =  TSActivator.CreateInstance("Tekla.Structures.Model.ExtensionIntersectsWithPlateException");
        }

        internal ExtensionIntersectsWithPlateException(dynamic tsObject)
        {
            this.extensionintersectswithplateexception = tsObject;
        }

		public System.Exception GetBaseException()
			 => extensionintersectswithplateexception.GetBaseException();

		public void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
			 => extensionintersectswithplateexception.GetObjectData(info, context);





    }

    internal static class ExtensionIntersectsWithPlateException_
    {
        public static dynamic GetTSObject(ExtensionIntersectsWithPlateException dynObject)
        {
            return dynObject.extensionintersectswithplateexception;
        }

        public static ExtensionIntersectsWithPlateException FromTSObject(dynamic tsObject)
        {
            return new ExtensionIntersectsWithPlateException(tsObject);
        }
    }


}
    
