//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class GeometrySection 
    {

		public System.Int32 Index
		{
			get => geometrysection.Index;
			set { geometrysection.Index = value; }
		}

		public Dynamic.Tekla.Structures.Model.IGeometryNode GeometryNode
		{
			get => Dynamic.Tekla.Structures.Model.IGeometryNode_.FromTSObject(geometrysection.GeometryNode);
			set { geometrysection.GeometryNode = Dynamic.Tekla.Structures.Model.IGeometryNode_.GetTSObject(value); }
		}

        

        internal dynamic geometrysection;
        
        public GeometrySection()
        {
            this.geometrysection =  TSActivator.CreateInstance("Tekla.Structures.Model.GeometrySection");
        }

        internal GeometrySection(dynamic tsObject)
        {
            this.geometrysection = tsObject;
        }





    }

    internal static class GeometrySection_
    {
        public static dynamic GetTSObject(GeometrySection dynObject)
        {
            return dynObject.geometrysection;
        }

        public static GeometrySection FromTSObject(dynamic tsObject)
        {
            return new GeometrySection(tsObject);
        }
    }


}
    
