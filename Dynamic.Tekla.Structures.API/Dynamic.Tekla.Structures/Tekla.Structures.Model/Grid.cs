//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public  class Grid  : Dynamic.Tekla.Structures.Model.GridBase
    {

		public System.String CoordinateX
		{
			get => teklaObject.CoordinateX;
			set { teklaObject.CoordinateX = value; }
		}

		public System.String CoordinateY
		{
			get => teklaObject.CoordinateY;
			set { teklaObject.CoordinateY = value; }
		}

		public System.String CoordinateZ
		{
			get => teklaObject.CoordinateZ;
			set { teklaObject.CoordinateZ = value; }
		}

		public System.String LabelX
		{
			get => teklaObject.LabelX;
			set { teklaObject.LabelX = value; }
		}

		public System.String LabelY
		{
			get => teklaObject.LabelY;
			set { teklaObject.LabelY = value; }
		}

		public System.String LabelZ
		{
			get => teklaObject.LabelZ;
			set { teklaObject.LabelZ = value; }
		}

		public System.Double ExtensionLeftX
		{
			get => teklaObject.ExtensionLeftX;
			set { teklaObject.ExtensionLeftX = value; }
		}

		public System.Double ExtensionLeftY
		{
			get => teklaObject.ExtensionLeftY;
			set { teklaObject.ExtensionLeftY = value; }
		}

		public System.Double ExtensionLeftZ
		{
			get => teklaObject.ExtensionLeftZ;
			set { teklaObject.ExtensionLeftZ = value; }
		}

		public System.Double ExtensionRightX
		{
			get => teklaObject.ExtensionRightX;
			set { teklaObject.ExtensionRightX = value; }
		}

		public System.Double ExtensionRightY
		{
			get => teklaObject.ExtensionRightY;
			set { teklaObject.ExtensionRightY = value; }
		}

		public System.Double ExtensionRightZ
		{
			get => teklaObject.ExtensionRightZ;
			set { teklaObject.ExtensionRightZ = value; }
		}

		public System.Double ExtensionForMagneticArea
		{
			get => teklaObject.ExtensionForMagneticArea;
			set { teklaObject.ExtensionForMagneticArea = value; }
		}

		public System.Int32 Color
		{
			get => teklaObject.Color;
			set { teklaObject.Color = value; }
		}

        

        

		public Grid()
		{
			this.teklaObject = TSActivator.CreateInstance("Tekla.Structures.Model.Grid");
		}





    }

    internal static class Grid_
    {
        public static dynamic GetTSObject(Grid dynObject)
        {
            return dynObject.teklaObject;
        }

        public static Grid FromTSObject(dynamic tsObject)
        {
            var typeName = "Dynamic." + tsObject.GetType().FullName;
            var type = System.Reflection.Assembly.GetExecutingAssembly().GetType(typeName);
            var dynObject = (Tekla.Structures.Model.Grid)System.Activator.CreateInstance(type);
            dynObject.teklaObject = tsObject;
            return dynObject;
        }
    }


}
    
