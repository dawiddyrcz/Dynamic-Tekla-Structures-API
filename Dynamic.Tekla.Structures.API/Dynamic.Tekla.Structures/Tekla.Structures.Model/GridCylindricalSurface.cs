//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class GridCylindricalSurface 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Arc CylinderBase
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Arc_.FromTSObject(gridcylindricalsurface.CylinderBase);
			set { gridcylindricalsurface.CylinderBase = Dynamic.Tekla.Structures.Geometry3d.Arc_.GetTSObject(value); }
		}

		public System.Double CylinderHeight
		{
			get => gridcylindricalsurface.CylinderHeight;
			set { gridcylindricalsurface.CylinderHeight = value; }
		}

		public Dynamic.Tekla.Structures.Model.GridBase Parent
		{
			get => Dynamic.Tekla.Structures.Model.GridBase_.FromTSObject(gridcylindricalsurface.Parent);
			set { gridcylindricalsurface.Parent = Dynamic.Tekla.Structures.Model.GridBase_.GetTSObject(value); }
		}

		public System.String Label
		{
			get => gridcylindricalsurface.Label;
			set { gridcylindricalsurface.Label = value; }
		}

		public System.Boolean IsMagnetic
		{
			get => gridcylindricalsurface.IsMagnetic;
			set { gridcylindricalsurface.IsMagnetic = value; }
		}

		public System.Double ExtensionLeft
		{
			get => gridcylindricalsurface.ExtensionLeft;
			set { gridcylindricalsurface.ExtensionLeft = value; }
		}

		public System.Double ExtensionRight
		{
			get => gridcylindricalsurface.ExtensionRight;
			set { gridcylindricalsurface.ExtensionRight = value; }
		}

		public System.Double ExtensionBelow
		{
			get => gridcylindricalsurface.ExtensionBelow;
			set { gridcylindricalsurface.ExtensionBelow = value; }
		}

		public System.Double ExtensionAbove
		{
			get => gridcylindricalsurface.ExtensionAbove;
			set { gridcylindricalsurface.ExtensionAbove = value; }
		}

		public System.Boolean DrawingVisibility
		{
			get => gridcylindricalsurface.DrawingVisibility;
			set { gridcylindricalsurface.DrawingVisibility = value; }
		}

		public System.Boolean IsManual
		{
			get => gridcylindricalsurface.IsManual;
			set { gridcylindricalsurface.IsManual = value; }
		}

		public System.DateTime ModificationTime
		{
			get => gridcylindricalsurface.ModificationTime;
			set { gridcylindricalsurface.ModificationTime = value; }
		}

		public System.Boolean IsUpToDate
		{
			get => gridcylindricalsurface.IsUpToDate;
			set { gridcylindricalsurface.IsUpToDate = value; }
		}

		public Dynamic.Tekla.Structures.Identifier Identifier
		{
			get => Dynamic.Tekla.Structures.Identifier_.FromTSObject(gridcylindricalsurface.Identifier);
			set { gridcylindricalsurface.Identifier = Dynamic.Tekla.Structures.Identifier_.GetTSObject(value); }
		}

        

        internal dynamic gridcylindricalsurface;
        
        public GridCylindricalSurface()
        {
            this.gridcylindricalsurface =  TSActivator.CreateInstance("Tekla.Structures.Model.GridCylindricalSurface");
        }

        internal GridCylindricalSurface(dynamic tsObject)
        {
            this.gridcylindricalsurface = tsObject;
        }

		public System.Boolean Modify()
			 => gridcylindricalsurface.Modify();

		public System.Boolean Insert()
			 => gridcylindricalsurface.Insert();

		public System.Boolean Select()
			 => gridcylindricalsurface.Select();

		public System.Boolean Delete()
			 => gridcylindricalsurface.Delete();

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetChildren()
			 => Dynamic.Tekla.Structures.Model.ModelObjectEnumerator_.FromTSObject(gridcylindricalsurface.GetChildren());

		public Dynamic.Tekla.Structures.Model.BaseComponent GetFatherComponent()
			 => Dynamic.Tekla.Structures.Model.BaseComponent_.FromTSObject(gridcylindricalsurface.GetFatherComponent());

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetHierarchicObjects()
			 => Dynamic.Tekla.Structures.Model.ModelObjectEnumerator_.FromTSObject(gridcylindricalsurface.GetHierarchicObjects());

		public System.Boolean GetAllUserProperties(System.Collections.Hashtable values)
			 => gridcylindricalsurface.GetAllUserProperties(values);

		public System.Boolean GetIntegerUserProperties(System.Collections.Hashtable values)
			 => gridcylindricalsurface.GetIntegerUserProperties(values);

		public System.Boolean GetDoubleUserProperties(System.Collections.Hashtable values)
			 => gridcylindricalsurface.GetDoubleUserProperties(values);

		public System.Boolean GetStringUserProperties(System.Collections.Hashtable values)
			 => gridcylindricalsurface.GetStringUserProperties(values);

		public System.Boolean GetAllReportProperties(System.Collections.ArrayList stringNames, System.Collections.ArrayList doubleNames, System.Collections.ArrayList integerNames, System.Collections.Hashtable values)
			 => gridcylindricalsurface.GetAllReportProperties(stringNames, doubleNames, integerNames, values);

		public System.Boolean GetIntegerReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => gridcylindricalsurface.GetIntegerReportProperties(names, values);

		public System.Boolean GetDoubleReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => gridcylindricalsurface.GetDoubleReportProperties(names, values);

		public System.Boolean GetStringReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => gridcylindricalsurface.GetStringReportProperties(names, values);

		public System.Boolean GetUserProperty(System.String name, System.String value)
			 => gridcylindricalsurface.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.String value)
			 => gridcylindricalsurface.GetReportProperty(name, value);

		public System.Boolean GetUserProperty(System.String name, System.Double value)
			 => gridcylindricalsurface.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.Double value)
			 => gridcylindricalsurface.GetReportProperty(name, value);

		public System.Boolean GetUserProperty(System.String name, System.Int32 value)
			 => gridcylindricalsurface.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.Int32 value)
			 => gridcylindricalsurface.GetReportProperty(name, value);

		public System.Boolean GetDynamicStringProperty(System.String name, System.String value)
			 => gridcylindricalsurface.GetDynamicStringProperty(name, value);

		public System.Boolean SetDynamicStringProperty(System.String name, System.String value)
			 => gridcylindricalsurface.SetDynamicStringProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.String value)
			 => gridcylindricalsurface.SetUserProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.Double value)
			 => gridcylindricalsurface.SetUserProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.Int32 value)
			 => gridcylindricalsurface.SetUserProperty(name, value);

		public Dynamic.Tekla.Structures.Geometry3d.CoordinateSystem GetCoordinateSystem()
			 => Dynamic.Tekla.Structures.Geometry3d.CoordinateSystem_.FromTSObject(gridcylindricalsurface.GetCoordinateSystem());

		public System.Boolean SetPhase(Dynamic.Tekla.Structures.Model.Phase phase)
			 => gridcylindricalsurface.SetPhase(Dynamic.Tekla.Structures.Model.Phase_.GetTSObject(phase));

		public System.Boolean GetPhase(Dynamic.Tekla.Structures.Model.Phase phase)
			 => gridcylindricalsurface.GetPhase(Dynamic.Tekla.Structures.Model.Phase_.GetTSObject(phase));

		public System.Boolean SetLabel(System.String label)
			 => gridcylindricalsurface.SetLabel(label);

		public System.Int32 CompareTo(System.Object obj)
			 => gridcylindricalsurface.CompareTo(obj);





    }

    internal static class GridCylindricalSurface_
    {
        public static dynamic GetTSObject(GridCylindricalSurface dynObject)
        {
            return dynObject.gridcylindricalsurface;
        }

        public static GridCylindricalSurface FromTSObject(dynamic tsObject)
        {
            return new GridCylindricalSurface(tsObject);
        }
    }


}
    
