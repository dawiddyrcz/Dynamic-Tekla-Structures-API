//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class HierarchicDefinition 
    {

		public System.String Name
		{
			get => hierarchicdefinition.Name;
			set { hierarchicdefinition.Name = value; }
		}

		public System.String CustomType
		{
			get => hierarchicdefinition.CustomType;
			set { hierarchicdefinition.CustomType = value; }
		}

		public Dynamic.Tekla.Structures.Model.HierarchicDefinitionTypeEnum HierarchyType
		{
			get => Dynamic.Tekla.Structures.Model.HierarchicDefinitionTypeEnum_.FromTSObject(hierarchicdefinition.HierarchyType);
			set { hierarchicdefinition.HierarchyType = Dynamic.Tekla.Structures.Model.HierarchicDefinitionTypeEnum_.FromTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Model.HierarchicDefinition Father
		{
			get => new Dynamic.Tekla.Structures.Model.HierarchicDefinition(hierarchicdefinition.Father);
			set { hierarchicdefinition.Father = value.GetTSObject(); }
		}

		public System.String HierarchyIdentifier
		{
			get => hierarchicdefinition.HierarchyIdentifier;
			set { hierarchicdefinition.HierarchyIdentifier = value; }
		}

		public System.Boolean Drawable
		{
			get => hierarchicdefinition.Drawable;
			set { hierarchicdefinition.Drawable = value; }
		}

		public System.Collections.ArrayList HierarchicChildren
		{
			get => hierarchicdefinition.HierarchicChildren;
			set { hierarchicdefinition.HierarchicChildren = value; }
		}

		public System.DateTime ModificationTime
		{
			get => hierarchicdefinition.ModificationTime;
			set { hierarchicdefinition.ModificationTime = value; }
		}

		public System.Boolean IsUpToDate
		{
			get => hierarchicdefinition.IsUpToDate;
			set { hierarchicdefinition.IsUpToDate = value; }
		}

		public Dynamic.Tekla.Structures.Identifier Identifier
		{
			get => new Dynamic.Tekla.Structures.Identifier(hierarchicdefinition.Identifier);
			set { hierarchicdefinition.Identifier = value.GetTSObject(); }
		}

        

        dynamic hierarchicdefinition;
        
        public HierarchicDefinition()
        {
            this.hierarchicdefinition =  TSActivator.CreateInstance("Tekla.Structures.Model.HierarchicDefinition");
        }

        public HierarchicDefinition(dynamic tsObject)
        {
            this.hierarchicdefinition = tsObject;
        }

        internal dynamic GetTSObject() => hierarchicdefinition;

		public System.Boolean AddObjects(System.Collections.ArrayList Objects)
			 => hierarchicdefinition.AddObjects(Objects);

		public System.Boolean RemoveObjects(System.Collections.ArrayList Objects)
			 => hierarchicdefinition.RemoveObjects(Objects);

		public System.Boolean Insert()
			 => hierarchicdefinition.Insert();

		public System.Boolean Select()
			 => hierarchicdefinition.Select();

		public System.Boolean Modify()
			 => hierarchicdefinition.Modify();

		public System.Boolean Delete()
			 => hierarchicdefinition.Delete();

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetChildren()
			 => new Dynamic.Tekla.Structures.Model.ModelObjectEnumerator(hierarchicdefinition.GetChildren());

		public Dynamic.Tekla.Structures.Model.BaseComponent GetFatherComponent()
			 => new Dynamic.Tekla.Structures.Model.BaseComponent(hierarchicdefinition.GetFatherComponent());

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetHierarchicObjects()
			 => new Dynamic.Tekla.Structures.Model.ModelObjectEnumerator(hierarchicdefinition.GetHierarchicObjects());

		public System.Boolean GetAllUserProperties(System.Collections.Hashtable values)
			 => hierarchicdefinition.GetAllUserProperties(values);

		public System.Boolean GetIntegerUserProperties(System.Collections.Hashtable values)
			 => hierarchicdefinition.GetIntegerUserProperties(values);

		public System.Boolean GetDoubleUserProperties(System.Collections.Hashtable values)
			 => hierarchicdefinition.GetDoubleUserProperties(values);

		public System.Boolean GetStringUserProperties(System.Collections.Hashtable values)
			 => hierarchicdefinition.GetStringUserProperties(values);

		public System.Boolean GetAllReportProperties(System.Collections.ArrayList stringNames, System.Collections.ArrayList doubleNames, System.Collections.ArrayList integerNames, System.Collections.Hashtable values)
			 => hierarchicdefinition.GetAllReportProperties(stringNames, doubleNames, integerNames, values);

		public System.Boolean GetIntegerReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => hierarchicdefinition.GetIntegerReportProperties(names, values);

		public System.Boolean GetDoubleReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => hierarchicdefinition.GetDoubleReportProperties(names, values);

		public System.Boolean GetStringReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => hierarchicdefinition.GetStringReportProperties(names, values);

		public System.Boolean GetUserProperty(System.String name, System.String value)
			 => hierarchicdefinition.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.String value)
			 => hierarchicdefinition.GetReportProperty(name, value);

		public System.Boolean GetUserProperty(System.String name, System.Double value)
			 => hierarchicdefinition.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.Double value)
			 => hierarchicdefinition.GetReportProperty(name, value);

		public System.Boolean GetUserProperty(System.String name, System.Int32 value)
			 => hierarchicdefinition.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.Int32 value)
			 => hierarchicdefinition.GetReportProperty(name, value);

		public System.Boolean GetDynamicStringProperty(System.String name, System.String value)
			 => hierarchicdefinition.GetDynamicStringProperty(name, value);

		public System.Boolean SetDynamicStringProperty(System.String name, System.String value)
			 => hierarchicdefinition.SetDynamicStringProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.String value)
			 => hierarchicdefinition.SetUserProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.Double value)
			 => hierarchicdefinition.SetUserProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.Int32 value)
			 => hierarchicdefinition.SetUserProperty(name, value);

		public Dynamic.Tekla.Structures.Geometry3d.CoordinateSystem GetCoordinateSystem()
			 => new Dynamic.Tekla.Structures.Geometry3d.CoordinateSystem(hierarchicdefinition.GetCoordinateSystem());

		public System.Boolean SetPhase(Dynamic.Tekla.Structures.Model.Phase phase)
			 => hierarchicdefinition.SetPhase(phase.GetTSObject());

		public System.Boolean GetPhase(Dynamic.Tekla.Structures.Model.Phase phase)
			 => hierarchicdefinition.GetPhase(phase.GetTSObject());

		public System.Boolean SetLabel(System.String label)
			 => hierarchicdefinition.SetLabel(label);

		public System.Int32 CompareTo(System.Object obj)
			 => hierarchicdefinition.CompareTo(obj);





    }

}
    
