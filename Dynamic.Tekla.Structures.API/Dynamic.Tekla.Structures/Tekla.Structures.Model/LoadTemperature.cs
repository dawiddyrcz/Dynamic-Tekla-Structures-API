//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class LoadTemperature 
    {

		public Dynamic.Tekla.Structures.Model.Load.LoadSpanningEnum Spanning
		{
			get => Dynamic.Tekla.Structures.Model.Load.LoadSpanningEnum_.FromTSObject(loadtemperature.Spanning);
			set { loadtemperature.Spanning = Dynamic.Tekla.Structures.Model.Load.LoadSpanningEnum_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector PrimaryAxisDirection
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(loadtemperature.PrimaryAxisDirection);
			set { loadtemperature.PrimaryAxisDirection = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

		public System.Boolean AutomaticPrimaryAxisWeight
		{
			get => loadtemperature.AutomaticPrimaryAxisWeight;
			set { loadtemperature.AutomaticPrimaryAxisWeight = value; }
		}

		public System.Double Weight
		{
			get => loadtemperature.Weight;
			set { loadtemperature.Weight = value; }
		}

		public System.Double LoadDispersionAngle
		{
			get => loadtemperature.LoadDispersionAngle;
			set { loadtemperature.LoadDispersionAngle = value; }
		}

		public System.Boolean CreateFixedSupportConditionsAutomatically
		{
			get => loadtemperature.CreateFixedSupportConditionsAutomatically;
			set { loadtemperature.CreateFixedSupportConditionsAutomatically = value; }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point Position1
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(loadtemperature.Position1);
			set { loadtemperature.Position1 = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point Position2
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(loadtemperature.Position2);
			set { loadtemperature.Position2 = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public System.Double TemperatureChangeForAxialElongation
		{
			get => loadtemperature.TemperatureChangeForAxialElongation;
			set { loadtemperature.TemperatureChangeForAxialElongation = value; }
		}

		public System.Double TemperatureDifferentialTopToBottom
		{
			get => loadtemperature.TemperatureDifferentialTopToBottom;
			set { loadtemperature.TemperatureDifferentialTopToBottom = value; }
		}

		public System.Double TemperatureDifferentialSideToSide
		{
			get => loadtemperature.TemperatureDifferentialSideToSide;
			set { loadtemperature.TemperatureDifferentialSideToSide = value; }
		}

		public System.Double InitialAxialElongation
		{
			get => loadtemperature.InitialAxialElongation;
			set { loadtemperature.InitialAxialElongation = value; }
		}

		public Dynamic.Tekla.Structures.Identifier FatherId
		{
			get => Dynamic.Tekla.Structures.Identifier_.FromTSObject(loadtemperature.FatherId);
			set { loadtemperature.FatherId = Dynamic.Tekla.Structures.Identifier_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Model.Load.LoadAttachmentEnum LoadAttachment
		{
			get => Dynamic.Tekla.Structures.Model.Load.LoadAttachmentEnum_.FromTSObject(loadtemperature.LoadAttachment);
			set { loadtemperature.LoadAttachment = Dynamic.Tekla.Structures.Model.Load.LoadAttachmentEnum_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Model.Load.LoadPartNamesEnum PartNames
		{
			get => Dynamic.Tekla.Structures.Model.Load.LoadPartNamesEnum_.FromTSObject(loadtemperature.PartNames);
			set { loadtemperature.PartNames = Dynamic.Tekla.Structures.Model.Load.LoadPartNamesEnum_.GetTSObject(value); }
		}

		public System.String PartFilter
		{
			get => loadtemperature.PartFilter;
			set { loadtemperature.PartFilter = value; }
		}

		public System.Double BoundingBoxDx
		{
			get => loadtemperature.BoundingBoxDx;
			set { loadtemperature.BoundingBoxDx = value; }
		}

		public System.Double BoundingBoxDy
		{
			get => loadtemperature.BoundingBoxDy;
			set { loadtemperature.BoundingBoxDy = value; }
		}

		public System.Double BoundingBoxDz
		{
			get => loadtemperature.BoundingBoxDz;
			set { loadtemperature.BoundingBoxDz = value; }
		}

		public Dynamic.Tekla.Structures.Model.LoadGroup Group
		{
			get => Dynamic.Tekla.Structures.Model.LoadGroup_.FromTSObject(loadtemperature.Group);
			set { loadtemperature.Group = Dynamic.Tekla.Structures.Model.LoadGroup_.GetTSObject(value); }
		}

		public System.DateTime ModificationTime
		{
			get => loadtemperature.ModificationTime;
			set { loadtemperature.ModificationTime = value; }
		}

		public System.Boolean IsUpToDate
		{
			get => loadtemperature.IsUpToDate;
			set { loadtemperature.IsUpToDate = value; }
		}

		public Dynamic.Tekla.Structures.Identifier Identifier
		{
			get => Dynamic.Tekla.Structures.Identifier_.FromTSObject(loadtemperature.Identifier);
			set { loadtemperature.Identifier = Dynamic.Tekla.Structures.Identifier_.GetTSObject(value); }
		}

        

        internal dynamic loadtemperature;
        
        public LoadTemperature()
        {
            this.loadtemperature =  TSActivator.CreateInstance("Tekla.Structures.Model.LoadTemperature");
        }

        internal LoadTemperature(dynamic tsObject)
        {
            this.loadtemperature = tsObject;
        }

		public System.Boolean Insert()
			 => loadtemperature.Insert();

		public System.Boolean Select()
			 => loadtemperature.Select();

		public System.Boolean Modify()
			 => loadtemperature.Modify();

		public System.Boolean Delete()
			 => loadtemperature.Delete();

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetChildren()
			 => Dynamic.Tekla.Structures.Model.ModelObjectEnumerator_.FromTSObject(loadtemperature.GetChildren());

		public Dynamic.Tekla.Structures.Model.BaseComponent GetFatherComponent()
			 => Dynamic.Tekla.Structures.Model.BaseComponent_.FromTSObject(loadtemperature.GetFatherComponent());

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetHierarchicObjects()
			 => Dynamic.Tekla.Structures.Model.ModelObjectEnumerator_.FromTSObject(loadtemperature.GetHierarchicObjects());

		public System.Boolean GetAllUserProperties(System.Collections.Hashtable values)
			 => loadtemperature.GetAllUserProperties(values);

		public System.Boolean GetIntegerUserProperties(System.Collections.Hashtable values)
			 => loadtemperature.GetIntegerUserProperties(values);

		public System.Boolean GetDoubleUserProperties(System.Collections.Hashtable values)
			 => loadtemperature.GetDoubleUserProperties(values);

		public System.Boolean GetStringUserProperties(System.Collections.Hashtable values)
			 => loadtemperature.GetStringUserProperties(values);

		public System.Boolean GetAllReportProperties(System.Collections.ArrayList stringNames, System.Collections.ArrayList doubleNames, System.Collections.ArrayList integerNames, System.Collections.Hashtable values)
			 => loadtemperature.GetAllReportProperties(stringNames, doubleNames, integerNames, values);

		public System.Boolean GetIntegerReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => loadtemperature.GetIntegerReportProperties(names, values);

		public System.Boolean GetDoubleReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => loadtemperature.GetDoubleReportProperties(names, values);

		public System.Boolean GetStringReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => loadtemperature.GetStringReportProperties(names, values);

		public System.Boolean GetUserProperty(System.String name, System.String value)
			 => loadtemperature.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.String value)
			 => loadtemperature.GetReportProperty(name, value);

		public System.Boolean GetUserProperty(System.String name, System.Double value)
			 => loadtemperature.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.Double value)
			 => loadtemperature.GetReportProperty(name, value);

		public System.Boolean GetUserProperty(System.String name, System.Int32 value)
			 => loadtemperature.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.Int32 value)
			 => loadtemperature.GetReportProperty(name, value);

		public System.Boolean GetDynamicStringProperty(System.String name, System.String value)
			 => loadtemperature.GetDynamicStringProperty(name, value);

		public System.Boolean SetDynamicStringProperty(System.String name, System.String value)
			 => loadtemperature.SetDynamicStringProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.String value)
			 => loadtemperature.SetUserProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.Double value)
			 => loadtemperature.SetUserProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.Int32 value)
			 => loadtemperature.SetUserProperty(name, value);

		public Dynamic.Tekla.Structures.Geometry3d.CoordinateSystem GetCoordinateSystem()
			 => Dynamic.Tekla.Structures.Geometry3d.CoordinateSystem_.FromTSObject(loadtemperature.GetCoordinateSystem());

		public System.Boolean SetPhase(Dynamic.Tekla.Structures.Model.Phase phase)
			 => loadtemperature.SetPhase(Dynamic.Tekla.Structures.Model.Phase_.GetTSObject(phase));

		public System.Boolean GetPhase(Dynamic.Tekla.Structures.Model.Phase phase)
			 => loadtemperature.GetPhase(Dynamic.Tekla.Structures.Model.Phase_.GetTSObject(phase));

		public System.Boolean SetLabel(System.String label)
			 => loadtemperature.SetLabel(label);

		public System.Int32 CompareTo(System.Object obj)
			 => loadtemperature.CompareTo(obj);





    }

    internal static class LoadTemperature_
    {
        public static dynamic GetTSObject(LoadTemperature dynObject)
        {
            return dynObject.loadtemperature;
        }

        public static LoadTemperature FromTSObject(dynamic tsObject)
        {
            return new LoadTemperature(tsObject);
        }
    }


}
    
