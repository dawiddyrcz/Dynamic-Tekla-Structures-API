//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class ModelObject 
    {

		public System.DateTime ModificationTime
		{
			get => modelobject.ModificationTime;
			set { modelobject.ModificationTime = value; }
		}

		public System.Boolean IsUpToDate
		{
			get => modelobject.IsUpToDate;
			set { modelobject.IsUpToDate = value; }
		}

		public Dynamic.Tekla.Structures.Identifier Identifier
		{
			get => new Dynamic.Tekla.Structures.Identifier(modelobject.Identifier);
			set { modelobject.Identifier = value.GetTSObject(); }
		}

        

        dynamic modelobject;
        
        private ModelObject()
        {
            this.modelobject =  TSActivator.CreateInstance("Tekla.Structures.Model.ModelObject");
        }

        public ModelObject(dynamic tsObject)
        {
            this.modelobject = tsObject;
        }

        internal dynamic GetTSObject() => modelobject;

		public System.Boolean Insert()
			 => modelobject.Insert();

		public System.Boolean Select()
			 => modelobject.Select();

		public System.Boolean Modify()
			 => modelobject.Modify();

		public System.Boolean Delete()
			 => modelobject.Delete();

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetChildren()
			 => new Dynamic.Tekla.Structures.Model.ModelObjectEnumerator(modelobject.GetChildren());

		public Dynamic.Tekla.Structures.Model.BaseComponent GetFatherComponent()
			 => new Dynamic.Tekla.Structures.Model.BaseComponent(modelobject.GetFatherComponent());

		public Dynamic.Tekla.Structures.Model.ModelObjectEnumerator GetHierarchicObjects()
			 => new Dynamic.Tekla.Structures.Model.ModelObjectEnumerator(modelobject.GetHierarchicObjects());

		public System.Boolean GetAllUserProperties(System.Collections.Hashtable values)
			 => modelobject.GetAllUserProperties(values);

		public System.Boolean GetIntegerUserProperties(System.Collections.Hashtable values)
			 => modelobject.GetIntegerUserProperties(values);

		public System.Boolean GetDoubleUserProperties(System.Collections.Hashtable values)
			 => modelobject.GetDoubleUserProperties(values);

		public System.Boolean GetStringUserProperties(System.Collections.Hashtable values)
			 => modelobject.GetStringUserProperties(values);

		public System.Boolean GetAllReportProperties(System.Collections.ArrayList stringNames, System.Collections.ArrayList doubleNames, System.Collections.ArrayList integerNames, System.Collections.Hashtable values)
			 => modelobject.GetAllReportProperties(stringNames, doubleNames, integerNames, values);

		public System.Boolean GetIntegerReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => modelobject.GetIntegerReportProperties(names, values);

		public System.Boolean GetDoubleReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => modelobject.GetDoubleReportProperties(names, values);

		public System.Boolean GetStringReportProperties(System.Collections.ArrayList names, System.Collections.Hashtable values)
			 => modelobject.GetStringReportProperties(names, values);

		public System.Boolean GetUserProperty(System.String name, System.String value)
			 => modelobject.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.String value)
			 => modelobject.GetReportProperty(name, value);

		public System.Boolean GetUserProperty(System.String name, System.Double value)
			 => modelobject.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.Double value)
			 => modelobject.GetReportProperty(name, value);

		public System.Boolean GetUserProperty(System.String name, System.Int32 value)
			 => modelobject.GetUserProperty(name, value);

		public System.Boolean GetReportProperty(System.String name, System.Int32 value)
			 => modelobject.GetReportProperty(name, value);

		public System.Boolean GetDynamicStringProperty(System.String name, System.String value)
			 => modelobject.GetDynamicStringProperty(name, value);

		public System.Boolean SetDynamicStringProperty(System.String name, System.String value)
			 => modelobject.SetDynamicStringProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.String value)
			 => modelobject.SetUserProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.Double value)
			 => modelobject.SetUserProperty(name, value);

		public System.Boolean SetUserProperty(System.String name, System.Int32 value)
			 => modelobject.SetUserProperty(name, value);

		public Dynamic.Tekla.Structures.Geometry3d.CoordinateSystem GetCoordinateSystem()
			 => new Dynamic.Tekla.Structures.Geometry3d.CoordinateSystem(modelobject.GetCoordinateSystem());

		public System.Boolean SetPhase(Dynamic.Tekla.Structures.Model.Phase phase)
			 => modelobject.SetPhase(phase.GetTSObject());

		public System.Boolean GetPhase(Dynamic.Tekla.Structures.Model.Phase phase)
			 => modelobject.GetPhase(phase.GetTSObject());

		public System.Boolean SetLabel(System.String label)
			 => modelobject.SetLabel(label);

		public System.Int32 CompareTo(System.Object obj)
			 => modelobject.CompareTo(obj);




    public struct ModelObjectEnum
    {
       
    }

    internal static class ModelObjectEnum_
    {
        public static dynamic GetTSObject(ModelObjectEnum dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.ModelObjectEnum");

            return tsType;
        }
    
        public static ModelObjectEnum FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new ModelObjectEnum();
 
            return dynStruct;
        }
    }



    }

}
    
