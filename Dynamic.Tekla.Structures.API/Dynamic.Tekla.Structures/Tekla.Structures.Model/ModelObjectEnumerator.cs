//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class ModelObjectEnumerator 
    {

		public System.Boolean SelectInstances
		{
			get => modelobjectenumerator.SelectInstances;
			set { modelobjectenumerator.SelectInstances = value; }
		}

		public System.Boolean AutoFetch
		{
			get => modelobjectenumerator.AutoFetch;
			set { modelobjectenumerator.AutoFetch = value; }
		}

		public Dynamic.Tekla.Structures.Model.ModelObject Current
		{
			get => new Dynamic.Tekla.Structures.Model.ModelObject(modelobjectenumerator.Current);
			set { modelobjectenumerator.Current = value.GetTSObject(); }
		}

        

        dynamic modelobjectenumerator;
        
        public ModelObjectEnumerator()
        {
            this.modelobjectenumerator =  TSActivator.CreateInstance("Tekla.Structures.Model.ModelObjectEnumerator");
        }

        public ModelObjectEnumerator(dynamic tsObject)
        {
            this.modelobjectenumerator = tsObject;
        }

        internal dynamic GetTSObject() => modelobjectenumerator;

		public System.Boolean MoveNext()
			 => modelobjectenumerator.MoveNext();

		public void Reset()
			 => modelobjectenumerator.Reset();

		public System.Int32 GetSize()
			 => modelobjectenumerator.GetSize();




    public struct EnumeratorTypeEnum
    {
       
    }

    internal static class EnumeratorTypeEnum_
    {
        public static dynamic GetTSObject(EnumeratorTypeEnum dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.EnumeratorTypeEnum");

            return tsType;
        }
    
        public static EnumeratorTypeEnum FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new EnumeratorTypeEnum();
 
            return dynStruct;
        }
    }



    }

}
    
