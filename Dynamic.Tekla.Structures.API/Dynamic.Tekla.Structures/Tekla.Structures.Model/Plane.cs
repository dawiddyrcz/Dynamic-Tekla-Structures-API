//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class Plane 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Point Origin
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Point_.FromTSObject(plane.Origin);
			set { plane.Origin = Dynamic.Tekla.Structures.Geometry3d.Point_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector AxisX
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(plane.AxisX);
			set { plane.AxisX = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Vector AxisY
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(plane.AxisY);
			set { plane.AxisY = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

        

        internal dynamic plane;
        
        public Plane()
        {
            this.plane =  TSActivator.CreateInstance("Tekla.Structures.Model.Plane");
        }

        internal Plane(dynamic tsObject)
        {
            this.plane = tsObject;
        }





    }

    internal static class Plane_
    {
        public static dynamic GetTSObject(Plane dynObject)
        {
            return dynObject.plane;
        }

        public static Plane FromTSObject(dynamic tsObject)
        {
            return new Plane(tsObject);
        }
    }


}
    
