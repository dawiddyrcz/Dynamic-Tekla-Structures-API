//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public  class ProjectInfo 
    {

		public System.String Description
		{
			get => teklaObject.Description;
			set { teklaObject.Description = value; }
		}

		public System.String StartDate
		{
			get => teklaObject.StartDate;
			set { teklaObject.StartDate = value; }
		}

		public System.String EndDate
		{
			get => teklaObject.EndDate;
			set { teklaObject.EndDate = value; }
		}

		public System.String Object
		{
			get => teklaObject.Object;
			set { teklaObject.Object = value; }
		}

		public System.String Designer
		{
			get => teklaObject.Designer;
			set { teklaObject.Designer = value; }
		}

		public System.String Location
		{
			get => teklaObject.Location;
			set { teklaObject.Location = value; }
		}

		public System.String Address
		{
			get => teklaObject.Address;
			set { teklaObject.Address = value; }
		}

		public System.String PostalBox
		{
			get => teklaObject.PostalBox;
			set { teklaObject.PostalBox = value; }
		}

		public System.String Town
		{
			get => teklaObject.Town;
			set { teklaObject.Town = value; }
		}

		public System.String Region
		{
			get => teklaObject.Region;
			set { teklaObject.Region = value; }
		}

		public System.String PostalCode
		{
			get => teklaObject.PostalCode;
			set { teklaObject.PostalCode = value; }
		}

		public System.String Country
		{
			get => teklaObject.Country;
			set { teklaObject.Country = value; }
		}

		public System.String Builder
		{
			get => teklaObject.Builder;
			set { teklaObject.Builder = value; }
		}

		public System.String Name
		{
			get => teklaObject.Name;
			set { teklaObject.Name = value; }
		}

		public System.String ProjectNumber
		{
			get => teklaObject.ProjectNumber;
			set { teklaObject.ProjectNumber = value; }
		}

		public System.IO.DirectoryInfo ModelSharingLocalPath
		{
			get => teklaObject.ModelSharingLocalPath;
			set { teklaObject.ModelSharingLocalPath = value; }
		}

		public System.Uri ModelSharingServerPath
		{
			get => teklaObject.ModelSharingServerPath;
			set { teklaObject.ModelSharingServerPath = value; }
		}

		public System.String Info1
		{
			get => teklaObject.Info1;
			set { teklaObject.Info1 = value; }
		}

		public System.String Info2
		{
			get => teklaObject.Info2;
			set { teklaObject.Info2 = value; }
		}

		public System.String GUID
		{
			get => teklaObject.GUID;
			set { teklaObject.GUID = value; }
		}

        

        internal dynamic teklaObject;

		public ProjectInfo() {}

		public System.Boolean Modify()
			 => teklaObject.Modify();

		public System.Boolean GetUserProperty(System.String Name, System.String Value)
			 => teklaObject.GetUserProperty(Name, Value);

		public System.Boolean GetUserProperty(System.String Name, System.Int32 Value)
			 => teklaObject.GetUserProperty(Name, Value);

		public System.Boolean GetUserProperty(System.String Name, System.Double Value)
			 => teklaObject.GetUserProperty(Name, Value);

		public System.Boolean SetUserProperty(System.String Name, System.String Value)
			 => teklaObject.SetUserProperty(Name, Value);

		public System.Boolean SetUserProperty(System.String Name, System.Double Value)
			 => teklaObject.SetUserProperty(Name, Value);

		public System.Boolean SetUserProperty(System.String Name, System.Int32 Value)
			 => teklaObject.SetUserProperty(Name, Value);

		public System.Boolean GetIntegerUserProperties(System.Collections.Hashtable Values)
			 => teklaObject.GetIntegerUserProperties(Values);

		public System.Boolean GetDoubleUserProperties(System.Collections.Hashtable Values)
			 => teklaObject.GetDoubleUserProperties(Values);

		public System.Boolean GetStringUserProperties(System.Collections.Hashtable Values)
			 => teklaObject.GetStringUserProperties(Values);

		public System.Boolean GetDynamicStringProperty(System.String Name, System.String Value)
			 => teklaObject.GetDynamicStringProperty(Name, Value);

		public System.Boolean SetDynamicStringProperty(System.String Name, System.String Value)
			 => teklaObject.SetDynamicStringProperty(Name, Value);

		public System.Collections.Generic.List<Dynamic.Tekla.Structures.Model.BasePoint> GetBasePoints()
			 => teklaObject.GetBasePoints();

		public Dynamic.Tekla.Structures.Model.BasePoint GetBasePointByName(System.String name)
			 => Dynamic.Tekla.Structures.Model.BasePoint_.FromTSObject(teklaObject.GetBasePointByName(name));

		public Dynamic.Tekla.Structures.Model.BasePoint GetBasePointByGuid(System.Guid guid)
			 => Dynamic.Tekla.Structures.Model.BasePoint_.FromTSObject(teklaObject.GetBasePointByGuid(guid));

		public Dynamic.Tekla.Structures.Model.BasePoint GetCurrentCoordsysBasePoint()
			 => Dynamic.Tekla.Structures.Model.BasePoint_.FromTSObject(teklaObject.GetCurrentCoordsysBasePoint());

		public System.Boolean SetCurrentCoordsysToBasePoint(Dynamic.Tekla.Structures.Model.BasePoint basePoint)
			 => teklaObject.SetCurrentCoordsysToBasePoint(Dynamic.Tekla.Structures.Model.BasePoint_.GetTSObject(basePoint));

		public Dynamic.Tekla.Structures.Model.BasePoint GetProjectBasePoint()
			 => Dynamic.Tekla.Structures.Model.BasePoint_.FromTSObject(teklaObject.GetProjectBasePoint());





    }

    internal static class ProjectInfo_
    {
        public static dynamic GetTSObject(ProjectInfo dynObject)
        {
            return dynObject.teklaObject;
        }

        public static ProjectInfo FromTSObject(dynamic tsObject)
        {
            var typeName = "Dynamic." + tsObject.GetType().FullName;
            var type = System.Reflection.Assembly.GetExecutingAssembly().GetType(typeName);
            var dynObject = (Tekla.Structures.Model.ProjectInfo)System.Activator.CreateInstance(type);
            dynObject.teklaObject = tsObject;
            return dynObject;
        }
    }


}
    
