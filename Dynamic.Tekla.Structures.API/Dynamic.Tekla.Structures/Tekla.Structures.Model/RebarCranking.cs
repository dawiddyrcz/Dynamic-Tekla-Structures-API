//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class RebarCranking 
    {

		public Dynamic.Tekla.Structures.Model.RebarCranking.CrankSideEnum CrankSide
		{
			get => Dynamic.Tekla.Structures.Model.RebarCranking.CrankSideEnum_.FromTSObject(rebarcranking.CrankSide);
			set { rebarcranking.CrankSide = Dynamic.Tekla.Structures.Model.RebarCranking.CrankSideEnum_.FromTSObject(value); }
		}

		public System.Double CrankRotation
		{
			get => rebarcranking.CrankRotation;
			set { rebarcranking.CrankRotation = value; }
		}

		public System.Double CrankStraightLength
		{
			get => rebarcranking.CrankStraightLength;
			set { rebarcranking.CrankStraightLength = value; }
		}

		public Dynamic.Tekla.Structures.Model.RebarCranking.CrankedLengthTypeEnum CrankedLengthType
		{
			get => Dynamic.Tekla.Structures.Model.RebarCranking.CrankedLengthTypeEnum_.FromTSObject(rebarcranking.CrankedLengthType);
			set { rebarcranking.CrankedLengthType = Dynamic.Tekla.Structures.Model.RebarCranking.CrankedLengthTypeEnum_.FromTSObject(value); }
		}

		public System.Double CrankedRatio
		{
			get => rebarcranking.CrankedRatio;
			set { rebarcranking.CrankedRatio = value; }
		}

		public System.Double CrankedDistance
		{
			get => rebarcranking.CrankedDistance;
			set { rebarcranking.CrankedDistance = value; }
		}

		public System.Double CrankedOffset
		{
			get => rebarcranking.CrankedOffset;
			set { rebarcranking.CrankedOffset = value; }
		}

		public Dynamic.Tekla.Structures.Model.RebarCranking.CrankingTypeEnum CrankingType
		{
			get => Dynamic.Tekla.Structures.Model.RebarCranking.CrankingTypeEnum_.FromTSObject(rebarcranking.CrankingType);
			set { rebarcranking.CrankingType = Dynamic.Tekla.Structures.Model.RebarCranking.CrankingTypeEnum_.FromTSObject(value); }
		}

        

        dynamic rebarcranking;
        
        public RebarCranking()
        {
            this.rebarcranking =  TSActivator.CreateInstance("Tekla.Structures.Model.RebarCranking");
        }

        public RebarCranking(dynamic tsObject)
        {
            this.rebarcranking = tsObject;
        }

        internal dynamic GetTSObject() => rebarcranking;




    public struct CrankSideEnum
    {
       
    }

    internal static class CrankSideEnum_
    {
        public static dynamic GetTSObject(CrankSideEnum dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.CrankSideEnum");

            return tsType;
        }
    
        public static CrankSideEnum FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new CrankSideEnum();
 
            return dynStruct;
        }
    }


    public struct CrankedLengthTypeEnum
    {
       
    }

    internal static class CrankedLengthTypeEnum_
    {
        public static dynamic GetTSObject(CrankedLengthTypeEnum dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.CrankedLengthTypeEnum");

            return tsType;
        }
    
        public static CrankedLengthTypeEnum FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new CrankedLengthTypeEnum();
 
            return dynStruct;
        }
    }


    public struct CrankingTypeEnum
    {
       
    }

    internal static class CrankingTypeEnum_
    {
        public static dynamic GetTSObject(CrankingTypeEnum dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.CrankingTypeEnum");

            return tsType;
        }
    
        public static CrankingTypeEnum FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new CrankingTypeEnum();
 
            return dynStruct;
        }
    }



    }

}
    
