//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class RebarCrankingNullable 
    {

		public System.Double CrankRotation
		{
			get => rebarcrankingnullable.CrankRotation;
			set { rebarcrankingnullable.CrankRotation = value; }
		}

		public System.Double CrankStraightLength
		{
			get => rebarcrankingnullable.CrankStraightLength;
			set { rebarcrankingnullable.CrankStraightLength = value; }
		}

		public Tekla.Structures.Model.RebarCranking.CrankedLengthTypeEnum CrankedLengthType
		{
			get => rebarcrankingnullable.CrankedLengthType;
			set { rebarcrankingnullable.CrankedLengthType = value; }
		}

		public System.Double CrankedRatio
		{
			get => rebarcrankingnullable.CrankedRatio;
			set { rebarcrankingnullable.CrankedRatio = value; }
		}

		public System.Double CrankedDistance
		{
			get => rebarcrankingnullable.CrankedDistance;
			set { rebarcrankingnullable.CrankedDistance = value; }
		}

		public System.Double CrankedOffset
		{
			get => rebarcrankingnullable.CrankedOffset;
			set { rebarcrankingnullable.CrankedOffset = value; }
		}

		public Tekla.Structures.Model.RebarCrankingNullable.EndCrankingTypeEnum CrankingType
		{
			get => rebarcrankingnullable.CrankingType;
			set { rebarcrankingnullable.CrankingType = value; }
		}

        

        internal dynamic rebarcrankingnullable;
        
        public RebarCrankingNullable()
        {
            this.rebarcrankingnullable =  TSActivator.CreateInstance("Tekla.Structures.Model.RebarCrankingNullable");
        }

        internal RebarCrankingNullable(dynamic tsObject)
        {
            this.rebarcrankingnullable = tsObject;
        }




    public enum EndCrankingTypeEnum
    {
			NO_CRANKING,
			CUSTOM_CRANKING,
			STANDARD_CRANKING        
    }

    internal static class EndCrankingTypeEnum_
    {
        public static dynamic GetTSObject(EndCrankingTypeEnum dynEnum)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.EndCrankingTypeEnum");

            switch (dynEnum)
            {
				case EndCrankingTypeEnum.NO_CRANKING:
					return System.Enum.Parse(tsType, "NO_CRANKING");
				case EndCrankingTypeEnum.CUSTOM_CRANKING:
					return System.Enum.Parse(tsType, "CUSTOM_CRANKING");
				case EndCrankingTypeEnum.STANDARD_CRANKING:
					return System.Enum.Parse(tsType, "STANDARD_CRANKING");

                default:
                    throw new System.NotImplementedException(dynEnum.ToString() + "- enum value is not implemented");
            }
        }
    
        public static EndCrankingTypeEnum FromTSObject(dynamic tsEnum)
        {
            string tsEnumValue = tsEnum.ToString("G", System.Globalization.CultureInfo.InvariantCulture);
            
			if (tsEnumValue.Equals("NO_CRANKING", System.StringComparison.InvariantCulture))
				return EndCrankingTypeEnum.NO_CRANKING;
			else if (tsEnumValue.Equals("CUSTOM_CRANKING", System.StringComparison.InvariantCulture))
				return EndCrankingTypeEnum.CUSTOM_CRANKING;
			else if (tsEnumValue.Equals("STANDARD_CRANKING", System.StringComparison.InvariantCulture))
				return EndCrankingTypeEnum.STANDARD_CRANKING;

            else 
                throw new System.NotImplementedException(tsEnumValue + "- enum value is not implemented");
            
        }
    }



    }

    internal static class RebarCrankingNullable_
    {
        public static dynamic GetTSObject(RebarCrankingNullable dynObject)
        {
            return dynObject.rebarcrankingnullable;
        }

        public static RebarCrankingNullable FromTSObject(dynamic tsObject)
        {
            return new RebarCrankingNullable(tsObject);
        }
    }


}
    
