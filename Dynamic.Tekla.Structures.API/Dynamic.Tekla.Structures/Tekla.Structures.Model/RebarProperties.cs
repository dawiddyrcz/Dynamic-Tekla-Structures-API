//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class RebarProperties 
    {

		public System.String Size
		{
			get => rebarproperties.Size;
			set { rebarproperties.Size = value; }
		}

		public System.String Grade
		{
			get => rebarproperties.Grade;
			set { rebarproperties.Grade = value; }
		}

		public System.String Name
		{
			get => rebarproperties.Name;
			set { rebarproperties.Name = value; }
		}

		public System.Int32 Class
		{
			get => rebarproperties.Class;
			set { rebarproperties.Class = value; }
		}

		public Dynamic.Tekla.Structures.Model.NumberingSeries NumberingSeries
		{
			get => Dynamic.Tekla.Structures.Model.NumberingSeries_.FromTSObject(rebarproperties.NumberingSeries);
			set { rebarproperties.NumberingSeries = Dynamic.Tekla.Structures.Model.NumberingSeries_.GetTSObject(value); }
		}

		public System.Double BendingRadius
		{
			get => rebarproperties.BendingRadius;
			set { rebarproperties.BendingRadius = value; }
		}

        

        internal dynamic rebarproperties;
        
        public RebarProperties()
        {
            this.rebarproperties =  TSActivator.CreateInstance("Tekla.Structures.Model.RebarProperties");
        }

        internal RebarProperties(dynamic tsObject)
        {
            this.rebarproperties = tsObject;
        }





    }

    internal static class RebarProperties_
    {
        public static dynamic GetTSObject(RebarProperties dynObject)
        {
            return dynObject.rebarproperties;
        }

        public static RebarProperties FromTSObject(dynamic tsObject)
        {
            return new RebarProperties(tsObject);
        }
    }


}
    
