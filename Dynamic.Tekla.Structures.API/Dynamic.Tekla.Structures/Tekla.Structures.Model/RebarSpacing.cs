//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class RebarSpacing 
    {

		public System.Collections.Generic.List<Dynamic.Tekla.Structures.Model.RebarSpacingZone> Zones
		{
			get => rebarspacing.Zones;
			set { rebarspacing.Zones = value; }
		}

		public System.Double StartOffset
		{
			get => rebarspacing.StartOffset;
			set { rebarspacing.StartOffset = value; }
		}

		public System.Double EndOffset
		{
			get => rebarspacing.EndOffset;
			set { rebarspacing.EndOffset = value; }
		}

		public Dynamic.Tekla.Structures.Model.RebarSpacing.OffsetEnum StartOffsetType
		{
			get => Dynamic.Tekla.Structures.Model.RebarSpacing.OffsetEnum_.FromTSObject(rebarspacing.StartOffsetType);
			set { rebarspacing.StartOffsetType = Dynamic.Tekla.Structures.Model.RebarSpacing.OffsetEnum_.FromTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Model.RebarSpacing.OffsetEnum EndOffsetType
		{
			get => Dynamic.Tekla.Structures.Model.RebarSpacing.OffsetEnum_.FromTSObject(rebarspacing.EndOffsetType);
			set { rebarspacing.EndOffsetType = Dynamic.Tekla.Structures.Model.RebarSpacing.OffsetEnum_.FromTSObject(value); }
		}

		public System.Boolean StartOffsetIsAutomatic
		{
			get => rebarspacing.StartOffsetIsAutomatic;
			set { rebarspacing.StartOffsetIsAutomatic = value; }
		}

		public System.Boolean EndOffsetIsAutomatic
		{
			get => rebarspacing.EndOffsetIsAutomatic;
			set { rebarspacing.EndOffsetIsAutomatic = value; }
		}

		public System.Boolean InheritFromPrimary
		{
			get => rebarspacing.InheritFromPrimary;
			set { rebarspacing.InheritFromPrimary = value; }
		}

        

        dynamic rebarspacing;
        
        public RebarSpacing()
        {
            this.rebarspacing =  TSActivator.CreateInstance("Tekla.Structures.Model.RebarSpacing");
        }

        public RebarSpacing(dynamic tsObject)
        {
            this.rebarspacing = tsObject;
        }

        internal dynamic GetTSObject() => rebarspacing;




    public struct OffsetEnum
    {
       
    }

    internal static class OffsetEnum_
    {
        public static dynamic GetTSObject(OffsetEnum dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Model.OffsetEnum");

            return tsType;
        }
    
        public static OffsetEnum FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new OffsetEnum();
 
            return dynStruct;
        }
    }



    }

}
    
