//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class TransformationPlane 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Matrix TransformationMatrixToGlobal
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Matrix(transformationplane.TransformationMatrixToGlobal);
			set { transformationplane.TransformationMatrixToGlobal = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Matrix TransformationMatrixToLocal
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Matrix(transformationplane.TransformationMatrixToLocal);
			set { transformationplane.TransformationMatrixToLocal = value.GetTSObject(); }
		}

        

        dynamic transformationplane;
        
        public TransformationPlane()
        {
            this.transformationplane =  TSActivator.CreateInstance("Tekla.Structures.Model.TransformationPlane");
        }

        public TransformationPlane(dynamic tsObject)
        {
            this.transformationplane = tsObject;
        }

        internal dynamic GetTSObject() => transformationplane;





    }

}
    
