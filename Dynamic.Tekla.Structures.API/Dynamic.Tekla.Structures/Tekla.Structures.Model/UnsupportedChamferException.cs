//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class UnsupportedChamferException 
    {

		public System.String Message
		{
			get => unsupportedchamferexception.Message;
			set { unsupportedchamferexception.Message = value; }
		}

		public System.Collections.IDictionary Data
		{
			get => unsupportedchamferexception.Data;
			set { unsupportedchamferexception.Data = value; }
		}

		public System.Exception InnerException
		{
			get => unsupportedchamferexception.InnerException;
			set { unsupportedchamferexception.InnerException = value; }
		}

		public System.Reflection.MethodBase TargetSite
		{
			get => unsupportedchamferexception.TargetSite;
			set { unsupportedchamferexception.TargetSite = value; }
		}

		public System.String StackTrace
		{
			get => unsupportedchamferexception.StackTrace;
			set { unsupportedchamferexception.StackTrace = value; }
		}

		public System.String HelpLink
		{
			get => unsupportedchamferexception.HelpLink;
			set { unsupportedchamferexception.HelpLink = value; }
		}

		public System.String Source
		{
			get => unsupportedchamferexception.Source;
			set { unsupportedchamferexception.Source = value; }
		}

		public System.Int32 HResult
		{
			get => unsupportedchamferexception.HResult;
			set { unsupportedchamferexception.HResult = value; }
		}

        

        internal dynamic unsupportedchamferexception;
        
        public UnsupportedChamferException()
        {
            this.unsupportedchamferexception =  TSActivator.CreateInstance("Tekla.Structures.Model.UnsupportedChamferException");
        }

        internal UnsupportedChamferException(dynamic tsObject)
        {
            this.unsupportedchamferexception = tsObject;
        }

		public System.Exception GetBaseException()
			 => unsupportedchamferexception.GetBaseException();

		public void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
			 => unsupportedchamferexception.GetObjectData(info, context);





    }

    internal static class UnsupportedChamferException_
    {
        public static dynamic GetTSObject(UnsupportedChamferException dynObject)
        {
            return dynObject.unsupportedchamferexception;
        }

        public static UnsupportedChamferException FromTSObject(dynamic tsObject)
        {
            return new UnsupportedChamferException(tsObject);
        }
    }


}
    
