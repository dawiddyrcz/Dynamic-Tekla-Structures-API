//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class WorkPlaneHandler 
    {

        

        dynamic workplanehandler;
        
        public WorkPlaneHandler()
        {
            this.workplanehandler =  TSActivator.CreateInstance("Tekla.Structures.Model.WorkPlaneHandler");
        }

        public WorkPlaneHandler(dynamic tsObject)
        {
            this.workplanehandler = tsObject;
        }

        internal dynamic GetTSObject() => workplanehandler;

		public Dynamic.Tekla.Structures.Model.TransformationPlane GetCurrentTransformationPlane()
			 => new Dynamic.Tekla.Structures.Model.TransformationPlane(workplanehandler.GetCurrentTransformationPlane());

		public System.Boolean SetCurrentTransformationPlane(Dynamic.Tekla.Structures.Model.TransformationPlane TransformationPlane)
			 => workplanehandler.SetCurrentTransformationPlane(TransformationPlane.GetTSObject());





    }

}
    
