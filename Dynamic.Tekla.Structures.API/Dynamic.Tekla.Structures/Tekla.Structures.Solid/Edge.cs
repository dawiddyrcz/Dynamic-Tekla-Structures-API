//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Solid
{

    public sealed class Edge 
    {

		public Dynamic.Tekla.Structures.Solid.Edge.EdgeTypeEnum Type
		{
			get => Dynamic.Tekla.Structures.Solid.Edge.EdgeTypeEnum_.FromTSObject(edge.Type);
			set { edge.Type = Dynamic.Tekla.Structures.Solid.Edge.EdgeTypeEnum_.FromTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point StartPoint
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Point(edge.StartPoint);
			set { edge.StartPoint = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Point EndPoint
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Point(edge.EndPoint);
			set { edge.EndPoint = value.GetTSObject(); }
		}

        

        dynamic edge;
        
        public Edge()
        {
            this.edge =  TSActivator.CreateInstance("Tekla.Structures.Solid.Edge");
        }

        public Edge(dynamic tsObject)
        {
            this.edge = tsObject;
        }

        internal dynamic GetTSObject() => edge;

		public System.Object Clone()
			 => edge.Clone();




    public struct EdgeTypeEnum
    {
       
    }

    internal static class EdgeTypeEnum_
    {
        public static dynamic GetTSObject(EdgeTypeEnum dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.Solid.EdgeTypeEnum");

            return tsType;
        }
    
        public static EdgeTypeEnum FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new EdgeTypeEnum();
 
            return dynStruct;
        }
    }



    }

}
    
