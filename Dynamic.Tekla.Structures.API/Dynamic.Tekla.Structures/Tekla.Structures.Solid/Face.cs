//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Solid
{

    public sealed class Face 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Vector Normal
		{
			get => Dynamic.Tekla.Structures.Geometry3d.Vector_.FromTSObject(face.Normal);
			set { face.Normal = Dynamic.Tekla.Structures.Geometry3d.Vector_.GetTSObject(value); }
		}

		public Dynamic.Tekla.Structures.Identifier OriginPartId
		{
			get => Dynamic.Tekla.Structures.Identifier_.FromTSObject(face.OriginPartId);
			set { face.OriginPartId = Dynamic.Tekla.Structures.Identifier_.GetTSObject(value); }
		}

        

        internal dynamic face;
        
        public Face()
        {
            this.face =  TSActivator.CreateInstance("Tekla.Structures.Solid.Face");
        }

        internal Face(dynamic tsObject)
        {
            this.face = tsObject;
        }

		public Dynamic.Tekla.Structures.Solid.LoopEnumerator GetLoopEnumerator()
			 => Dynamic.Tekla.Structures.Solid.LoopEnumerator_.FromTSObject(face.GetLoopEnumerator());





    }

    internal static class Face_
    {
        public static dynamic GetTSObject(Face dynObject)
        {
            return dynObject.face;
        }

        public static Face FromTSObject(dynamic tsObject)
        {
            return new Face(tsObject);
        }
    }


}
    
