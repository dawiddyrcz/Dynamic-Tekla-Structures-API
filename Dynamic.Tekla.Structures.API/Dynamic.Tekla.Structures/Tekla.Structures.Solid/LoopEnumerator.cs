//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Solid
{

    public  class LoopEnumerator 
    {

		public Dynamic.Tekla.Structures.Solid.Loop Current
		{
			get => Dynamic.Tekla.Structures.Solid.Loop_.FromTSObject(teklaObject.Current);
			set { teklaObject.Current = Dynamic.Tekla.Structures.Solid.Loop_.GetTSObject(value); }
		}

        

        internal dynamic teklaObject;

		public LoopEnumerator() {}

		public System.Boolean MoveNext()
			 => teklaObject.MoveNext();

		public void Reset()
			 => teklaObject.Reset();





    }

    internal static class LoopEnumerator_
    {
        public static dynamic GetTSObject(LoopEnumerator dynObject)
        {
            return dynObject.teklaObject;
        }

        public static LoopEnumerator FromTSObject(dynamic tsObject)
        {
            var typeName = "Dynamic." + tsObject.GetType().FullName;
            var type = System.Reflection.Assembly.GetExecutingAssembly().GetType(typeName);
            var dynObject = (Tekla.Structures.Solid.LoopEnumerator)System.Activator.CreateInstance(type);
            dynObject.teklaObject = tsObject;
            return dynObject;
        }
    }


}
    
