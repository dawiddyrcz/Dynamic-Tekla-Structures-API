//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures
{

    public sealed class ModuleManager 
    {

		public Dynamic.Tekla.Structures.ModuleManager.ProgramConfigurationEnum Configuration
		{
			get => Dynamic.Tekla.Structures.ModuleManager.ProgramConfigurationEnum_.FromTSObject(modulemanager.Configuration);
			set { modulemanager.Configuration = Dynamic.Tekla.Structures.ModuleManager.ProgramConfigurationEnum_.FromTSObject(value); }
		}

		public System.Boolean MultimaterialModeling
		{
			get => modulemanager.MultimaterialModeling;
			set { modulemanager.MultimaterialModeling = value; }
		}

		public System.Boolean LoadModeling
		{
			get => modulemanager.LoadModeling;
			set { modulemanager.LoadModeling = value; }
		}

		public System.Boolean SteelDetailing
		{
			get => modulemanager.SteelDetailing;
			set { modulemanager.SteelDetailing = value; }
		}

		public System.Boolean ConcreteDetailing
		{
			get => modulemanager.ConcreteDetailing;
			set { modulemanager.ConcreteDetailing = value; }
		}

		public System.Boolean RebarModeling
		{
			get => modulemanager.RebarModeling;
			set { modulemanager.RebarModeling = value; }
		}

		public System.Boolean AnalysisAndDesign
		{
			get => modulemanager.AnalysisAndDesign;
			set { modulemanager.AnalysisAndDesign = value; }
		}

		public System.Boolean TaskManagement
		{
			get => modulemanager.TaskManagement;
			set { modulemanager.TaskManagement = value; }
		}

        

        dynamic modulemanager;
        
        public ModuleManager()
        {
            this.modulemanager =  TSActivator.CreateInstance("Tekla.Structures.ModuleManager");
        }

        public ModuleManager(dynamic tsObject)
        {
            this.modulemanager = tsObject;
        }

        internal dynamic GetTSObject() => modulemanager;




    public struct ProgramConfigurationEnum
    {
       
    }

    internal static class ProgramConfigurationEnum_
    {
        public static dynamic GetTSObject(ProgramConfigurationEnum dynStruct)
        {
            var tsType = TSActivator.CreateInstance("Tekla.Structures.ProgramConfigurationEnum");

            return tsType;
        }
    
        public static ProgramConfigurationEnum FromTSObject(dynamic tsStruct)
        {
            var dynStruct = new ProgramConfigurationEnum();
 
            return dynStruct;
        }
    }



    }

}
    
