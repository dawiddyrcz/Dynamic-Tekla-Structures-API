//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures
{

    public sealed class TeklaStructuresInfo 
    {

        

        internal dynamic teklastructuresinfo;
        
        public TeklaStructuresInfo()
        {
            this.teklastructuresinfo =  TSActivator.CreateInstance("Tekla.Structures.TeklaStructuresInfo");
        }

        internal TeklaStructuresInfo(dynamic tsObject)
        {
            this.teklastructuresinfo = tsObject;
        }

		public System.String GetCurrentProgramVersion()
			 => teklastructuresinfo.GetCurrentProgramVersion();

		public System.String GetBuildNumber()
			 => teklastructuresinfo.GetBuildNumber();

		public System.String GetRevisionDate()
			 => teklastructuresinfo.GetRevisionDate();

		public System.String GetCopyRightText()
			 => teklastructuresinfo.GetCopyRightText();

		public System.String GetLocalAppDataFolder()
			 => teklastructuresinfo.GetLocalAppDataFolder();

		public System.String GetCommonAppDataFolder()
			 => teklastructuresinfo.GetCommonAppDataFolder();

		public System.String GetFullTSRegistryKeyText()
			 => teklastructuresinfo.GetFullTSRegistryKeyText();

		public System.String GetCurrentUser()
			 => teklastructuresinfo.GetCurrentUser();





    }

    internal static class TeklaStructuresInfo_
    {
        public static dynamic GetTSObject(TeklaStructuresInfo dynObject)
        {
            return dynObject.teklastructuresinfo;
        }

        public static TeklaStructuresInfo FromTSObject(dynamic tsObject)
        {
            return new TeklaStructuresInfo(tsObject);
        }
    }


}
    
