//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Model
{

    public sealed class TransformationPlane 
    {

		public Dynamic.Tekla.Structures.Geometry3d.Matrix TransformationMatrixToGlobal
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Matrix(transformationplane.TransformationMatrixToGlobal.GetTSObject());
			set { transformationplane.TransformationMatrixToGlobal = value.GetTSObject(); }
		}

		public Dynamic.Tekla.Structures.Geometry3d.Matrix TransformationMatrixToLocal
		{
			get => new Dynamic.Tekla.Structures.Geometry3d.Matrix(transformationplane.TransformationMatrixToLocal.GetTSObject());
			set { transformationplane.TransformationMatrixToLocal = value.GetTSObject(); }
		}

        

        dynamic transformationplane;
        
        public TransformationPlane()
        {
            this.transformationplane =  new Tekla.Structures.Model.TransformationPlane();
        }

        public TransformationPlane(dynamic tsObject)
        {
            this.transformationplane = tsObject;
			this.TransformationMatrixToGlobal = new Dynamic.Tekla.Structures.Geometry3d.Matrix(transformationplane.TransformationMatrixToGlobal);
			this.TransformationMatrixToLocal = new Dynamic.Tekla.Structures.Geometry3d.Matrix(transformationplane.TransformationMatrixToLocal);

        }


        public dynamic GetTSObject() => transformationplane;

		public System.String ToString()
			 => transformationplane.ToString();

		public System.Boolean Equals(System.Object obj)
			 => transformationplane.Equals(obj);

		public System.Int32 GetHashCode()
			 => transformationplane.GetHashCode();

		public System.Type GetType()
			 => transformationplane.GetType();





    }

}
    
