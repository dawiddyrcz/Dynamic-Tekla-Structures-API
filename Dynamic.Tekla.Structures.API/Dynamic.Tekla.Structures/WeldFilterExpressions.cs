//Generated by script in project CodeGenerator
//Copyright Dawid Dyrcz 2020 see license file

namespace Dynamic.Tekla.Structures.Filtering.Categories
{

    public sealed class WeldFilterExpressions 
    {

        

        dynamic weldfilterexpressions;
        
        public WeldFilterExpressions()
        {
            this.weldfilterexpressions =  new Tekla.Structures.Filtering.Categories.WeldFilterExpressions();
        }

        public WeldFilterExpressions(dynamic tsObject)
        {
            this.weldfilterexpressions = tsObject;

        }


        public dynamic GetTSObject() => weldfilterexpressions;

		public System.Boolean Equals(System.Object obj)
			 => weldfilterexpressions.Equals(obj);

		public System.Int32 GetHashCode()
			 => weldfilterexpressions.GetHashCode();

		public System.Type GetType()
			 => weldfilterexpressions.GetType();

		public System.String ToString()
			 => weldfilterexpressions.ToString();




    public sealed class CustomBoolean 
    {

        

        dynamic customboolean;
        
        public CustomBoolean()
        {
            this.customboolean =  new Tekla.Structures.Filtering.Categories.CustomBoolean();
        }

        public CustomBoolean(dynamic tsObject)
        {
            this.customboolean = tsObject;

        }


        public dynamic GetTSObject() => customboolean;

		public System.String ToString()
			 => customboolean.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customboolean.Equals(obj);

		public System.Int32 GetHashCode()
			 => customboolean.GetHashCode();

		public System.Type GetType()
			 => customboolean.GetType();





    }


    public sealed class CustomDateTime 
    {

        

        dynamic customdatetime;
        
        public CustomDateTime()
        {
            this.customdatetime =  new Tekla.Structures.Filtering.Categories.CustomDateTime();
        }

        public CustomDateTime(dynamic tsObject)
        {
            this.customdatetime = tsObject;

        }


        public dynamic GetTSObject() => customdatetime;

		public System.String ToString()
			 => customdatetime.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customdatetime.Equals(obj);

		public System.Int32 GetHashCode()
			 => customdatetime.GetHashCode();

		public System.Type GetType()
			 => customdatetime.GetType();





    }


    public sealed class CustomNumber 
    {

        

        dynamic customnumber;
        
        public CustomNumber()
        {
            this.customnumber =  new Tekla.Structures.Filtering.Categories.CustomNumber();
        }

        public CustomNumber(dynamic tsObject)
        {
            this.customnumber = tsObject;

        }


        public dynamic GetTSObject() => customnumber;

		public System.String ToString()
			 => customnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => customnumber.GetHashCode();

		public System.Type GetType()
			 => customnumber.GetType();





    }


    public sealed class CustomString 
    {

        

        dynamic customstring;
        
        public CustomString()
        {
            this.customstring =  new Tekla.Structures.Filtering.Categories.CustomString();
        }

        public CustomString(dynamic tsObject)
        {
            this.customstring = tsObject;

        }


        public dynamic GetTSObject() => customstring;

		public System.String ToString()
			 => customstring.ToString();

		public System.Boolean Equals(System.Object obj)
			 => customstring.Equals(obj);

		public System.Int32 GetHashCode()
			 => customstring.GetHashCode();

		public System.Type GetType()
			 => customstring.GetType();





    }


    public sealed class Phase 
    {

        

        dynamic phase;
        
        public Phase()
        {
            this.phase =  new Tekla.Structures.Filtering.Categories.Phase();
        }

        public Phase(dynamic tsObject)
        {
            this.phase = tsObject;

        }


        public dynamic GetTSObject() => phase;

		public System.String ToString()
			 => phase.ToString();

		public System.Boolean Equals(System.Object obj)
			 => phase.Equals(obj);

		public System.Int32 GetHashCode()
			 => phase.GetHashCode();

		public System.Type GetType()
			 => phase.GetType();





    }


    public sealed class PositionNumber 
    {

        

        dynamic positionnumber;
        
        public PositionNumber()
        {
            this.positionnumber =  new Tekla.Structures.Filtering.Categories.PositionNumber();
        }

        public PositionNumber(dynamic tsObject)
        {
            this.positionnumber = tsObject;

        }


        public dynamic GetTSObject() => positionnumber;

		public System.String ToString()
			 => positionnumber.ToString();

		public System.Boolean Equals(System.Object obj)
			 => positionnumber.Equals(obj);

		public System.Int32 GetHashCode()
			 => positionnumber.GetHashCode();

		public System.Type GetType()
			 => positionnumber.GetType();





    }


    public sealed class ReferenceText 
    {

        

        dynamic referencetext;
        
        public ReferenceText()
        {
            this.referencetext =  new Tekla.Structures.Filtering.Categories.ReferenceText();
        }

        public ReferenceText(dynamic tsObject)
        {
            this.referencetext = tsObject;

        }


        public dynamic GetTSObject() => referencetext;

		public System.String ToString()
			 => referencetext.ToString();

		public System.Boolean Equals(System.Object obj)
			 => referencetext.Equals(obj);

		public System.Int32 GetHashCode()
			 => referencetext.GetHashCode();

		public System.Type GetType()
			 => referencetext.GetType();





    }


    public sealed class SizeAboveLine 
    {

        

        dynamic sizeaboveline;
        
        public SizeAboveLine()
        {
            this.sizeaboveline =  new Tekla.Structures.Filtering.Categories.SizeAboveLine();
        }

        public SizeAboveLine(dynamic tsObject)
        {
            this.sizeaboveline = tsObject;

        }


        public dynamic GetTSObject() => sizeaboveline;

		public System.String ToString()
			 => sizeaboveline.ToString();

		public System.Boolean Equals(System.Object obj)
			 => sizeaboveline.Equals(obj);

		public System.Int32 GetHashCode()
			 => sizeaboveline.GetHashCode();

		public System.Type GetType()
			 => sizeaboveline.GetType();





    }


    public sealed class SizeBelowLine 
    {

        

        dynamic sizebelowline;
        
        public SizeBelowLine()
        {
            this.sizebelowline =  new Tekla.Structures.Filtering.Categories.SizeBelowLine();
        }

        public SizeBelowLine(dynamic tsObject)
        {
            this.sizebelowline = tsObject;

        }


        public dynamic GetTSObject() => sizebelowline;

		public System.String ToString()
			 => sizebelowline.ToString();

		public System.Boolean Equals(System.Object obj)
			 => sizebelowline.Equals(obj);

		public System.Int32 GetHashCode()
			 => sizebelowline.GetHashCode();

		public System.Type GetType()
			 => sizebelowline.GetType();





    }


    public sealed class TypeAboveLine 
    {

        

        dynamic typeaboveline;
        
        public TypeAboveLine()
        {
            this.typeaboveline =  new Tekla.Structures.Filtering.Categories.TypeAboveLine();
        }

        public TypeAboveLine(dynamic tsObject)
        {
            this.typeaboveline = tsObject;

        }


        public dynamic GetTSObject() => typeaboveline;

		public System.String ToString()
			 => typeaboveline.ToString();

		public System.Boolean Equals(System.Object obj)
			 => typeaboveline.Equals(obj);

		public System.Int32 GetHashCode()
			 => typeaboveline.GetHashCode();

		public System.Type GetType()
			 => typeaboveline.GetType();





    }


    public sealed class TypeBelowLine 
    {

        

        dynamic typebelowline;
        
        public TypeBelowLine()
        {
            this.typebelowline =  new Tekla.Structures.Filtering.Categories.TypeBelowLine();
        }

        public TypeBelowLine(dynamic tsObject)
        {
            this.typebelowline = tsObject;

        }


        public dynamic GetTSObject() => typebelowline;

		public System.String ToString()
			 => typebelowline.ToString();

		public System.Boolean Equals(System.Object obj)
			 => typebelowline.Equals(obj);

		public System.Int32 GetHashCode()
			 => typebelowline.GetHashCode();

		public System.Type GetType()
			 => typebelowline.GetType();





    }


    public sealed class WeldingSite 
    {

        

        dynamic weldingsite;
        
        public WeldingSite()
        {
            this.weldingsite =  new Tekla.Structures.Filtering.Categories.WeldingSite();
        }

        public WeldingSite(dynamic tsObject)
        {
            this.weldingsite = tsObject;

        }


        public dynamic GetTSObject() => weldingsite;

		public System.String ToString()
			 => weldingsite.ToString();

		public System.Boolean Equals(System.Object obj)
			 => weldingsite.Equals(obj);

		public System.Int32 GetHashCode()
			 => weldingsite.GetHashCode();

		public System.Type GetType()
			 => weldingsite.GetType();





    }



    }

}
    
